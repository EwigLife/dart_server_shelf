library prisma.client; // ignore_for_file: no_leading_underscores_for_library_prefixes

import 'package:orm/orm.dart' as _i1;
import 'package:json_annotation/json_annotation.dart' as _i2;
import 'package:orm/configure.dart' as _i3;
import 'prisma_configurator.dart' as _i4;
import 'package:orm/dmmf.dart' as _i5;
import 'dart:convert' as _i6;
export 'package:orm/orm.dart' show Datasource, PrismaNull, PrismaUnion;
import 'package:json_annotation/json_annotation.dart'
    show $enumDecode, $enumDecodeNullable;
export 'package:orm/orm.dart' show TransactionIsolationLevel;

part 'prisma_client.g.dart';
// GENERATED CODE - DO NOT MODIFY BY HAND
//
// ignore_for_file: constant_identifier_names, depend_on_referenced_packages, non_constant_identifier_names, unused_import
//
//******************************************************************************
// This file was generated by Prisma
// GitHub: https://github.com/odroe/prisma-dart
//******************************************************************************

enum AmenitiesScalarFieldEnum {
  id,
  name,
  slug,
  description,
  published,
  categoryId
}

enum CategoryScalarFieldEnum { id, name, slug, description, published, postId }

enum PostMetaScalarFieldEnum {
  id,
  meta_title,
  meta_description,
  published,
  postId
}

enum PostScalarFieldEnum {
  id,
  title,
  slug,
  description,
  images,
  long_description,
  longitude,
  latitude,
  content,
  published,
  authorId
}

enum ProfileScalarFieldEnum {
  id,
  firstName,
  lastName,
  addressLine1,
  addressLine2,
  city,
  state,
  country,
  postCode,
  phone,
  slug,
  images,
  longitude,
  latitude,
  published,
  userId
}

enum SortOrder { asc, desc }

enum UsersScalarFieldEnum { id, email, role, password, fcmtoken, salt }

enum Role { USER, ADMIN }

class UsersWhereInput implements _i1.JsonSerializable {
  const UsersWhereInput({
    this.AND,
    this.OR,
    this.NOT,
    this.id,
    this.email,
    this.role,
    this.password,
    this.fcmtoken,
    this.salt,
    this.posts,
    this.Profile,
  });

  final _i1.PrismaNullable<UsersWhereInput> AND;

  final _i1.PrismaNullable<List<UsersWhereInput>> OR;

  final _i1.PrismaNullable<UsersWhereInput> NOT;

  final _i1.PrismaNullable<IntFilter> id;

  final _i1.PrismaNullable<StringFilter> email;

  final _i1.PrismaNullable<EnumRoleFilter> role;

  final _i1.PrismaNullable<StringNullableFilter> password;

  final _i1.PrismaNullable<StringNullableFilter> fcmtoken;

  final _i1.PrismaNullable<StringNullableFilter> salt;

  final _i1.PrismaNullable<PostListRelationFilter> posts;

  final _i1.PrismaNullable<ProfileListRelationFilter> Profile;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'AND': AND,
      'OR': OR,
      'NOT': NOT,
      'id': id,
      'email': email,
      'role': role,
      'password': password,
      'fcmtoken': fcmtoken,
      'salt': salt,
      'posts': posts,
      'Profile': Profile,
    };
  }
}

class UsersOrderByWithRelationInput implements _i1.JsonSerializable {
  const UsersOrderByWithRelationInput({
    this.id,
    this.email,
    this.role,
    this.password,
    this.fcmtoken,
    this.salt,
    this.posts,
    this.Profile,
  });

  final _i1.PrismaNullable<SortOrder> id;

  final _i1.PrismaNullable<SortOrder> email;

  final _i1.PrismaNullable<SortOrder> role;

  final _i1.PrismaNullable<SortOrder> password;

  final _i1.PrismaNullable<SortOrder> fcmtoken;

  final _i1.PrismaNullable<SortOrder> salt;

  final _i1.PrismaNullable<PostOrderByRelationAggregateInput> posts;

  final _i1.PrismaNullable<ProfileOrderByRelationAggregateInput> Profile;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'email': email,
      'role': role,
      'password': password,
      'fcmtoken': fcmtoken,
      'salt': salt,
      'posts': posts,
      'Profile': Profile,
    };
  }
}

class UsersWhereUniqueInput implements _i1.JsonSerializable {
  const UsersWhereUniqueInput({
    this.id,
    this.email,
  });

  final _i1.PrismaNullable<int> id;

  final _i1.PrismaNullable<String> email;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'email': email,
    };
  }
}

class UsersOrderByWithAggregationInput implements _i1.JsonSerializable {
  const UsersOrderByWithAggregationInput({
    this.id,
    this.email,
    this.role,
    this.password,
    this.fcmtoken,
    this.salt,
    this.$count,
    this.$avg,
    this.$max,
    this.$min,
    this.$sum,
  });

  final _i1.PrismaNullable<SortOrder> id;

  final _i1.PrismaNullable<SortOrder> email;

  final _i1.PrismaNullable<SortOrder> role;

  final _i1.PrismaNullable<SortOrder> password;

  final _i1.PrismaNullable<SortOrder> fcmtoken;

  final _i1.PrismaNullable<SortOrder> salt;

  final _i1.PrismaNullable<UsersCountOrderByAggregateInput> $count;

  final _i1.PrismaNullable<UsersAvgOrderByAggregateInput> $avg;

  final _i1.PrismaNullable<UsersMaxOrderByAggregateInput> $max;

  final _i1.PrismaNullable<UsersMinOrderByAggregateInput> $min;

  final _i1.PrismaNullable<UsersSumOrderByAggregateInput> $sum;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'email': email,
      'role': role,
      'password': password,
      'fcmtoken': fcmtoken,
      'salt': salt,
      '_count': $count,
      '_avg': $avg,
      '_max': $max,
      '_min': $min,
      '_sum': $sum,
    };
  }
}

class UsersScalarWhereWithAggregatesInput implements _i1.JsonSerializable {
  const UsersScalarWhereWithAggregatesInput({
    this.AND,
    this.OR,
    this.NOT,
    this.id,
    this.email,
    this.role,
    this.password,
    this.fcmtoken,
    this.salt,
  });

  final _i1.PrismaNullable<UsersScalarWhereWithAggregatesInput> AND;

  final _i1.PrismaNullable<List<UsersScalarWhereWithAggregatesInput>> OR;

  final _i1.PrismaNullable<UsersScalarWhereWithAggregatesInput> NOT;

  final _i1.PrismaNullable<IntWithAggregatesFilter> id;

  final _i1.PrismaNullable<StringWithAggregatesFilter> email;

  final _i1.PrismaNullable<EnumRoleWithAggregatesFilter> role;

  final _i1.PrismaNullable<StringNullableWithAggregatesFilter> password;

  final _i1.PrismaNullable<StringNullableWithAggregatesFilter> fcmtoken;

  final _i1.PrismaNullable<StringNullableWithAggregatesFilter> salt;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'AND': AND,
      'OR': OR,
      'NOT': NOT,
      'id': id,
      'email': email,
      'role': role,
      'password': password,
      'fcmtoken': fcmtoken,
      'salt': salt,
    };
  }
}

class ProfileWhereInput implements _i1.JsonSerializable {
  const ProfileWhereInput({
    this.AND,
    this.OR,
    this.NOT,
    this.id,
    this.firstName,
    this.lastName,
    this.addressLine1,
    this.addressLine2,
    this.city,
    this.state,
    this.country,
    this.postCode,
    this.phone,
    this.slug,
    this.images,
    this.longitude,
    this.latitude,
    this.published,
    this.user,
    this.userId,
  });

  final _i1.PrismaNullable<ProfileWhereInput> AND;

  final _i1.PrismaNullable<List<ProfileWhereInput>> OR;

  final _i1.PrismaNullable<ProfileWhereInput> NOT;

  final _i1.PrismaNullable<IntFilter> id;

  final _i1.PrismaNullable<StringNullableFilter> firstName;

  final _i1.PrismaNullable<StringNullableFilter> lastName;

  final _i1.PrismaNullable<StringNullableFilter> addressLine1;

  final _i1.PrismaNullable<StringNullableFilter> addressLine2;

  final _i1.PrismaNullable<StringNullableFilter> city;

  final _i1.PrismaNullable<StringNullableFilter> state;

  final _i1.PrismaNullable<StringNullableFilter> country;

  final _i1.PrismaNullable<StringNullableFilter> postCode;

  final _i1.PrismaNullable<StringNullableFilter> phone;

  final _i1.PrismaNullable<StringNullableFilter> slug;

  final _i1.PrismaNullable<StringNullableFilter> images;

  final _i1.PrismaNullable<StringNullableFilter> longitude;

  final _i1.PrismaNullable<StringNullableFilter> latitude;

  final _i1.PrismaNullable<BoolFilter> published;

  final _i1.PrismaNullable<UsersRelationFilter> user;

  final _i1.PrismaNullable<IntNullableFilter> userId;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'AND': AND,
      'OR': OR,
      'NOT': NOT,
      'id': id,
      'firstName': firstName,
      'lastName': lastName,
      'addressLine1': addressLine1,
      'addressLine2': addressLine2,
      'city': city,
      'state': state,
      'country': country,
      'postCode': postCode,
      'phone': phone,
      'slug': slug,
      'images': images,
      'longitude': longitude,
      'latitude': latitude,
      'published': published,
      'user': user,
      'userId': userId,
    };
  }
}

class ProfileOrderByWithRelationInput implements _i1.JsonSerializable {
  const ProfileOrderByWithRelationInput({
    this.id,
    this.firstName,
    this.lastName,
    this.addressLine1,
    this.addressLine2,
    this.city,
    this.state,
    this.country,
    this.postCode,
    this.phone,
    this.slug,
    this.images,
    this.longitude,
    this.latitude,
    this.published,
    this.user,
    this.userId,
  });

  final _i1.PrismaNullable<SortOrder> id;

  final _i1.PrismaNullable<SortOrder> firstName;

  final _i1.PrismaNullable<SortOrder> lastName;

  final _i1.PrismaNullable<SortOrder> addressLine1;

  final _i1.PrismaNullable<SortOrder> addressLine2;

  final _i1.PrismaNullable<SortOrder> city;

  final _i1.PrismaNullable<SortOrder> state;

  final _i1.PrismaNullable<SortOrder> country;

  final _i1.PrismaNullable<SortOrder> postCode;

  final _i1.PrismaNullable<SortOrder> phone;

  final _i1.PrismaNullable<SortOrder> slug;

  final _i1.PrismaNullable<SortOrder> images;

  final _i1.PrismaNullable<SortOrder> longitude;

  final _i1.PrismaNullable<SortOrder> latitude;

  final _i1.PrismaNullable<SortOrder> published;

  final _i1.PrismaNullable<UsersOrderByWithRelationInput> user;

  final _i1.PrismaNullable<SortOrder> userId;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'firstName': firstName,
      'lastName': lastName,
      'addressLine1': addressLine1,
      'addressLine2': addressLine2,
      'city': city,
      'state': state,
      'country': country,
      'postCode': postCode,
      'phone': phone,
      'slug': slug,
      'images': images,
      'longitude': longitude,
      'latitude': latitude,
      'published': published,
      'user': user,
      'userId': userId,
    };
  }
}

class ProfileWhereUniqueInput implements _i1.JsonSerializable {
  const ProfileWhereUniqueInput({
    this.id,
    this.slug,
  });

  final _i1.PrismaNullable<int> id;

  final _i1.PrismaNullable<String> slug;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'slug': slug,
    };
  }
}

class ProfileOrderByWithAggregationInput implements _i1.JsonSerializable {
  const ProfileOrderByWithAggregationInput({
    this.id,
    this.firstName,
    this.lastName,
    this.addressLine1,
    this.addressLine2,
    this.city,
    this.state,
    this.country,
    this.postCode,
    this.phone,
    this.slug,
    this.images,
    this.longitude,
    this.latitude,
    this.published,
    this.userId,
    this.$count,
    this.$avg,
    this.$max,
    this.$min,
    this.$sum,
  });

  final _i1.PrismaNullable<SortOrder> id;

  final _i1.PrismaNullable<SortOrder> firstName;

  final _i1.PrismaNullable<SortOrder> lastName;

  final _i1.PrismaNullable<SortOrder> addressLine1;

  final _i1.PrismaNullable<SortOrder> addressLine2;

  final _i1.PrismaNullable<SortOrder> city;

  final _i1.PrismaNullable<SortOrder> state;

  final _i1.PrismaNullable<SortOrder> country;

  final _i1.PrismaNullable<SortOrder> postCode;

  final _i1.PrismaNullable<SortOrder> phone;

  final _i1.PrismaNullable<SortOrder> slug;

  final _i1.PrismaNullable<SortOrder> images;

  final _i1.PrismaNullable<SortOrder> longitude;

  final _i1.PrismaNullable<SortOrder> latitude;

  final _i1.PrismaNullable<SortOrder> published;

  final _i1.PrismaNullable<SortOrder> userId;

  final _i1.PrismaNullable<ProfileCountOrderByAggregateInput> $count;

  final _i1.PrismaNullable<ProfileAvgOrderByAggregateInput> $avg;

  final _i1.PrismaNullable<ProfileMaxOrderByAggregateInput> $max;

  final _i1.PrismaNullable<ProfileMinOrderByAggregateInput> $min;

  final _i1.PrismaNullable<ProfileSumOrderByAggregateInput> $sum;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'firstName': firstName,
      'lastName': lastName,
      'addressLine1': addressLine1,
      'addressLine2': addressLine2,
      'city': city,
      'state': state,
      'country': country,
      'postCode': postCode,
      'phone': phone,
      'slug': slug,
      'images': images,
      'longitude': longitude,
      'latitude': latitude,
      'published': published,
      'userId': userId,
      '_count': $count,
      '_avg': $avg,
      '_max': $max,
      '_min': $min,
      '_sum': $sum,
    };
  }
}

class ProfileScalarWhereWithAggregatesInput implements _i1.JsonSerializable {
  const ProfileScalarWhereWithAggregatesInput({
    this.AND,
    this.OR,
    this.NOT,
    this.id,
    this.firstName,
    this.lastName,
    this.addressLine1,
    this.addressLine2,
    this.city,
    this.state,
    this.country,
    this.postCode,
    this.phone,
    this.slug,
    this.images,
    this.longitude,
    this.latitude,
    this.published,
    this.userId,
  });

  final _i1.PrismaNullable<ProfileScalarWhereWithAggregatesInput> AND;

  final _i1.PrismaNullable<List<ProfileScalarWhereWithAggregatesInput>> OR;

  final _i1.PrismaNullable<ProfileScalarWhereWithAggregatesInput> NOT;

  final _i1.PrismaNullable<IntWithAggregatesFilter> id;

  final _i1.PrismaNullable<StringNullableWithAggregatesFilter> firstName;

  final _i1.PrismaNullable<StringNullableWithAggregatesFilter> lastName;

  final _i1.PrismaNullable<StringNullableWithAggregatesFilter> addressLine1;

  final _i1.PrismaNullable<StringNullableWithAggregatesFilter> addressLine2;

  final _i1.PrismaNullable<StringNullableWithAggregatesFilter> city;

  final _i1.PrismaNullable<StringNullableWithAggregatesFilter> state;

  final _i1.PrismaNullable<StringNullableWithAggregatesFilter> country;

  final _i1.PrismaNullable<StringNullableWithAggregatesFilter> postCode;

  final _i1.PrismaNullable<StringNullableWithAggregatesFilter> phone;

  final _i1.PrismaNullable<StringNullableWithAggregatesFilter> slug;

  final _i1.PrismaNullable<StringNullableWithAggregatesFilter> images;

  final _i1.PrismaNullable<StringNullableWithAggregatesFilter> longitude;

  final _i1.PrismaNullable<StringNullableWithAggregatesFilter> latitude;

  final _i1.PrismaNullable<BoolWithAggregatesFilter> published;

  final _i1.PrismaNullable<IntNullableWithAggregatesFilter> userId;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'AND': AND,
      'OR': OR,
      'NOT': NOT,
      'id': id,
      'firstName': firstName,
      'lastName': lastName,
      'addressLine1': addressLine1,
      'addressLine2': addressLine2,
      'city': city,
      'state': state,
      'country': country,
      'postCode': postCode,
      'phone': phone,
      'slug': slug,
      'images': images,
      'longitude': longitude,
      'latitude': latitude,
      'published': published,
      'userId': userId,
    };
  }
}

class PostWhereInput implements _i1.JsonSerializable {
  const PostWhereInput({
    this.AND,
    this.OR,
    this.NOT,
    this.id,
    this.title,
    this.slug,
    this.description,
    this.images,
    this.long_description,
    this.longitude,
    this.latitude,
    this.content,
    this.published,
    this.author,
    this.authorId,
    this.postmeta,
    this.category,
  });

  final _i1.PrismaNullable<PostWhereInput> AND;

  final _i1.PrismaNullable<List<PostWhereInput>> OR;

  final _i1.PrismaNullable<PostWhereInput> NOT;

  final _i1.PrismaNullable<IntFilter> id;

  final _i1.PrismaNullable<StringFilter> title;

  final _i1.PrismaNullable<StringNullableFilter> slug;

  final _i1.PrismaNullable<StringNullableFilter> description;

  final _i1.PrismaNullable<StringNullableFilter> images;

  final _i1.PrismaNullable<StringNullableFilter> long_description;

  final _i1.PrismaNullable<StringNullableFilter> longitude;

  final _i1.PrismaNullable<StringNullableFilter> latitude;

  final _i1.PrismaNullable<StringNullableFilter> content;

  final _i1.PrismaNullable<BoolFilter> published;

  final _i1.PrismaNullable<UsersRelationFilter> author;

  final _i1.PrismaNullable<IntFilter> authorId;

  final _i1.PrismaNullable<PostMetaListRelationFilter> postmeta;

  final _i1.PrismaNullable<CategoryListRelationFilter> category;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'AND': AND,
      'OR': OR,
      'NOT': NOT,
      'id': id,
      'title': title,
      'slug': slug,
      'description': description,
      'images': images,
      'long_description': long_description,
      'longitude': longitude,
      'latitude': latitude,
      'content': content,
      'published': published,
      'author': author,
      'authorId': authorId,
      'postmeta': postmeta,
      'category': category,
    };
  }
}

class PostOrderByWithRelationInput implements _i1.JsonSerializable {
  const PostOrderByWithRelationInput({
    this.id,
    this.title,
    this.slug,
    this.description,
    this.images,
    this.long_description,
    this.longitude,
    this.latitude,
    this.content,
    this.published,
    this.author,
    this.authorId,
    this.postmeta,
    this.category,
  });

  final _i1.PrismaNullable<SortOrder> id;

  final _i1.PrismaNullable<SortOrder> title;

  final _i1.PrismaNullable<SortOrder> slug;

  final _i1.PrismaNullable<SortOrder> description;

  final _i1.PrismaNullable<SortOrder> images;

  final _i1.PrismaNullable<SortOrder> long_description;

  final _i1.PrismaNullable<SortOrder> longitude;

  final _i1.PrismaNullable<SortOrder> latitude;

  final _i1.PrismaNullable<SortOrder> content;

  final _i1.PrismaNullable<SortOrder> published;

  final _i1.PrismaNullable<UsersOrderByWithRelationInput> author;

  final _i1.PrismaNullable<SortOrder> authorId;

  final _i1.PrismaNullable<PostMetaOrderByRelationAggregateInput> postmeta;

  final _i1.PrismaNullable<CategoryOrderByRelationAggregateInput> category;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'title': title,
      'slug': slug,
      'description': description,
      'images': images,
      'long_description': long_description,
      'longitude': longitude,
      'latitude': latitude,
      'content': content,
      'published': published,
      'author': author,
      'authorId': authorId,
      'postmeta': postmeta,
      'category': category,
    };
  }
}

class PostWhereUniqueInput implements _i1.JsonSerializable {
  const PostWhereUniqueInput({
    this.id,
    this.slug,
  });

  final _i1.PrismaNullable<int> id;

  final _i1.PrismaNullable<String> slug;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'slug': slug,
    };
  }
}

class PostOrderByWithAggregationInput implements _i1.JsonSerializable {
  const PostOrderByWithAggregationInput({
    this.id,
    this.title,
    this.slug,
    this.description,
    this.images,
    this.long_description,
    this.longitude,
    this.latitude,
    this.content,
    this.published,
    this.authorId,
    this.$count,
    this.$avg,
    this.$max,
    this.$min,
    this.$sum,
  });

  final _i1.PrismaNullable<SortOrder> id;

  final _i1.PrismaNullable<SortOrder> title;

  final _i1.PrismaNullable<SortOrder> slug;

  final _i1.PrismaNullable<SortOrder> description;

  final _i1.PrismaNullable<SortOrder> images;

  final _i1.PrismaNullable<SortOrder> long_description;

  final _i1.PrismaNullable<SortOrder> longitude;

  final _i1.PrismaNullable<SortOrder> latitude;

  final _i1.PrismaNullable<SortOrder> content;

  final _i1.PrismaNullable<SortOrder> published;

  final _i1.PrismaNullable<SortOrder> authorId;

  final _i1.PrismaNullable<PostCountOrderByAggregateInput> $count;

  final _i1.PrismaNullable<PostAvgOrderByAggregateInput> $avg;

  final _i1.PrismaNullable<PostMaxOrderByAggregateInput> $max;

  final _i1.PrismaNullable<PostMinOrderByAggregateInput> $min;

  final _i1.PrismaNullable<PostSumOrderByAggregateInput> $sum;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'title': title,
      'slug': slug,
      'description': description,
      'images': images,
      'long_description': long_description,
      'longitude': longitude,
      'latitude': latitude,
      'content': content,
      'published': published,
      'authorId': authorId,
      '_count': $count,
      '_avg': $avg,
      '_max': $max,
      '_min': $min,
      '_sum': $sum,
    };
  }
}

class PostScalarWhereWithAggregatesInput implements _i1.JsonSerializable {
  const PostScalarWhereWithAggregatesInput({
    this.AND,
    this.OR,
    this.NOT,
    this.id,
    this.title,
    this.slug,
    this.description,
    this.images,
    this.long_description,
    this.longitude,
    this.latitude,
    this.content,
    this.published,
    this.authorId,
  });

  final _i1.PrismaNullable<PostScalarWhereWithAggregatesInput> AND;

  final _i1.PrismaNullable<List<PostScalarWhereWithAggregatesInput>> OR;

  final _i1.PrismaNullable<PostScalarWhereWithAggregatesInput> NOT;

  final _i1.PrismaNullable<IntWithAggregatesFilter> id;

  final _i1.PrismaNullable<StringWithAggregatesFilter> title;

  final _i1.PrismaNullable<StringNullableWithAggregatesFilter> slug;

  final _i1.PrismaNullable<StringNullableWithAggregatesFilter> description;

  final _i1.PrismaNullable<StringNullableWithAggregatesFilter> images;

  final _i1.PrismaNullable<StringNullableWithAggregatesFilter> long_description;

  final _i1.PrismaNullable<StringNullableWithAggregatesFilter> longitude;

  final _i1.PrismaNullable<StringNullableWithAggregatesFilter> latitude;

  final _i1.PrismaNullable<StringNullableWithAggregatesFilter> content;

  final _i1.PrismaNullable<BoolWithAggregatesFilter> published;

  final _i1.PrismaNullable<IntWithAggregatesFilter> authorId;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'AND': AND,
      'OR': OR,
      'NOT': NOT,
      'id': id,
      'title': title,
      'slug': slug,
      'description': description,
      'images': images,
      'long_description': long_description,
      'longitude': longitude,
      'latitude': latitude,
      'content': content,
      'published': published,
      'authorId': authorId,
    };
  }
}

class PostMetaWhereInput implements _i1.JsonSerializable {
  const PostMetaWhereInput({
    this.AND,
    this.OR,
    this.NOT,
    this.id,
    this.meta_title,
    this.meta_description,
    this.published,
    this.post,
    this.postId,
  });

  final _i1.PrismaNullable<PostMetaWhereInput> AND;

  final _i1.PrismaNullable<List<PostMetaWhereInput>> OR;

  final _i1.PrismaNullable<PostMetaWhereInput> NOT;

  final _i1.PrismaNullable<IntFilter> id;

  final _i1.PrismaNullable<StringFilter> meta_title;

  final _i1.PrismaNullable<StringNullableFilter> meta_description;

  final _i1.PrismaNullable<BoolFilter> published;

  final _i1.PrismaNullable<PostRelationFilter> post;

  final _i1.PrismaNullable<IntFilter> postId;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'AND': AND,
      'OR': OR,
      'NOT': NOT,
      'id': id,
      'meta_title': meta_title,
      'meta_description': meta_description,
      'published': published,
      'post': post,
      'postId': postId,
    };
  }
}

class PostMetaOrderByWithRelationInput implements _i1.JsonSerializable {
  const PostMetaOrderByWithRelationInput({
    this.id,
    this.meta_title,
    this.meta_description,
    this.published,
    this.post,
    this.postId,
  });

  final _i1.PrismaNullable<SortOrder> id;

  final _i1.PrismaNullable<SortOrder> meta_title;

  final _i1.PrismaNullable<SortOrder> meta_description;

  final _i1.PrismaNullable<SortOrder> published;

  final _i1.PrismaNullable<PostOrderByWithRelationInput> post;

  final _i1.PrismaNullable<SortOrder> postId;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'meta_title': meta_title,
      'meta_description': meta_description,
      'published': published,
      'post': post,
      'postId': postId,
    };
  }
}

class PostMetaWhereUniqueInput implements _i1.JsonSerializable {
  const PostMetaWhereUniqueInput({this.id});

  final _i1.PrismaNullable<int> id;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
    };
  }
}

class PostMetaOrderByWithAggregationInput implements _i1.JsonSerializable {
  const PostMetaOrderByWithAggregationInput({
    this.id,
    this.meta_title,
    this.meta_description,
    this.published,
    this.postId,
    this.$count,
    this.$avg,
    this.$max,
    this.$min,
    this.$sum,
  });

  final _i1.PrismaNullable<SortOrder> id;

  final _i1.PrismaNullable<SortOrder> meta_title;

  final _i1.PrismaNullable<SortOrder> meta_description;

  final _i1.PrismaNullable<SortOrder> published;

  final _i1.PrismaNullable<SortOrder> postId;

  final _i1.PrismaNullable<PostMetaCountOrderByAggregateInput> $count;

  final _i1.PrismaNullable<PostMetaAvgOrderByAggregateInput> $avg;

  final _i1.PrismaNullable<PostMetaMaxOrderByAggregateInput> $max;

  final _i1.PrismaNullable<PostMetaMinOrderByAggregateInput> $min;

  final _i1.PrismaNullable<PostMetaSumOrderByAggregateInput> $sum;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'meta_title': meta_title,
      'meta_description': meta_description,
      'published': published,
      'postId': postId,
      '_count': $count,
      '_avg': $avg,
      '_max': $max,
      '_min': $min,
      '_sum': $sum,
    };
  }
}

class PostMetaScalarWhereWithAggregatesInput implements _i1.JsonSerializable {
  const PostMetaScalarWhereWithAggregatesInput({
    this.AND,
    this.OR,
    this.NOT,
    this.id,
    this.meta_title,
    this.meta_description,
    this.published,
    this.postId,
  });

  final _i1.PrismaNullable<PostMetaScalarWhereWithAggregatesInput> AND;

  final _i1.PrismaNullable<List<PostMetaScalarWhereWithAggregatesInput>> OR;

  final _i1.PrismaNullable<PostMetaScalarWhereWithAggregatesInput> NOT;

  final _i1.PrismaNullable<IntWithAggregatesFilter> id;

  final _i1.PrismaNullable<StringWithAggregatesFilter> meta_title;

  final _i1.PrismaNullable<StringNullableWithAggregatesFilter> meta_description;

  final _i1.PrismaNullable<BoolWithAggregatesFilter> published;

  final _i1.PrismaNullable<IntWithAggregatesFilter> postId;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'AND': AND,
      'OR': OR,
      'NOT': NOT,
      'id': id,
      'meta_title': meta_title,
      'meta_description': meta_description,
      'published': published,
      'postId': postId,
    };
  }
}

class AmenitiesWhereInput implements _i1.JsonSerializable {
  const AmenitiesWhereInput({
    this.AND,
    this.OR,
    this.NOT,
    this.id,
    this.name,
    this.slug,
    this.description,
    this.published,
    this.category,
    this.categoryId,
  });

  final _i1.PrismaNullable<AmenitiesWhereInput> AND;

  final _i1.PrismaNullable<List<AmenitiesWhereInput>> OR;

  final _i1.PrismaNullable<AmenitiesWhereInput> NOT;

  final _i1.PrismaNullable<IntFilter> id;

  final _i1.PrismaNullable<StringFilter> name;

  final _i1.PrismaNullable<StringNullableFilter> slug;

  final _i1.PrismaNullable<StringNullableFilter> description;

  final _i1.PrismaNullable<BoolFilter> published;

  final _i1.PrismaNullable<CategoryRelationFilter> category;

  final _i1.PrismaNullable<IntFilter> categoryId;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'AND': AND,
      'OR': OR,
      'NOT': NOT,
      'id': id,
      'name': name,
      'slug': slug,
      'description': description,
      'published': published,
      'category': category,
      'categoryId': categoryId,
    };
  }
}

class AmenitiesOrderByWithRelationInput implements _i1.JsonSerializable {
  const AmenitiesOrderByWithRelationInput({
    this.id,
    this.name,
    this.slug,
    this.description,
    this.published,
    this.category,
    this.categoryId,
  });

  final _i1.PrismaNullable<SortOrder> id;

  final _i1.PrismaNullable<SortOrder> name;

  final _i1.PrismaNullable<SortOrder> slug;

  final _i1.PrismaNullable<SortOrder> description;

  final _i1.PrismaNullable<SortOrder> published;

  final _i1.PrismaNullable<CategoryOrderByWithRelationInput> category;

  final _i1.PrismaNullable<SortOrder> categoryId;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'name': name,
      'slug': slug,
      'description': description,
      'published': published,
      'category': category,
      'categoryId': categoryId,
    };
  }
}

class AmenitiesWhereUniqueInput implements _i1.JsonSerializable {
  const AmenitiesWhereUniqueInput({
    this.id,
    this.slug,
  });

  final _i1.PrismaNullable<int> id;

  final _i1.PrismaNullable<String> slug;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'slug': slug,
    };
  }
}

class AmenitiesOrderByWithAggregationInput implements _i1.JsonSerializable {
  const AmenitiesOrderByWithAggregationInput({
    this.id,
    this.name,
    this.slug,
    this.description,
    this.published,
    this.categoryId,
    this.$count,
    this.$avg,
    this.$max,
    this.$min,
    this.$sum,
  });

  final _i1.PrismaNullable<SortOrder> id;

  final _i1.PrismaNullable<SortOrder> name;

  final _i1.PrismaNullable<SortOrder> slug;

  final _i1.PrismaNullable<SortOrder> description;

  final _i1.PrismaNullable<SortOrder> published;

  final _i1.PrismaNullable<SortOrder> categoryId;

  final _i1.PrismaNullable<AmenitiesCountOrderByAggregateInput> $count;

  final _i1.PrismaNullable<AmenitiesAvgOrderByAggregateInput> $avg;

  final _i1.PrismaNullable<AmenitiesMaxOrderByAggregateInput> $max;

  final _i1.PrismaNullable<AmenitiesMinOrderByAggregateInput> $min;

  final _i1.PrismaNullable<AmenitiesSumOrderByAggregateInput> $sum;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'name': name,
      'slug': slug,
      'description': description,
      'published': published,
      'categoryId': categoryId,
      '_count': $count,
      '_avg': $avg,
      '_max': $max,
      '_min': $min,
      '_sum': $sum,
    };
  }
}

class AmenitiesScalarWhereWithAggregatesInput implements _i1.JsonSerializable {
  const AmenitiesScalarWhereWithAggregatesInput({
    this.AND,
    this.OR,
    this.NOT,
    this.id,
    this.name,
    this.slug,
    this.description,
    this.published,
    this.categoryId,
  });

  final _i1.PrismaNullable<AmenitiesScalarWhereWithAggregatesInput> AND;

  final _i1.PrismaNullable<List<AmenitiesScalarWhereWithAggregatesInput>> OR;

  final _i1.PrismaNullable<AmenitiesScalarWhereWithAggregatesInput> NOT;

  final _i1.PrismaNullable<IntWithAggregatesFilter> id;

  final _i1.PrismaNullable<StringWithAggregatesFilter> name;

  final _i1.PrismaNullable<StringNullableWithAggregatesFilter> slug;

  final _i1.PrismaNullable<StringNullableWithAggregatesFilter> description;

  final _i1.PrismaNullable<BoolWithAggregatesFilter> published;

  final _i1.PrismaNullable<IntWithAggregatesFilter> categoryId;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'AND': AND,
      'OR': OR,
      'NOT': NOT,
      'id': id,
      'name': name,
      'slug': slug,
      'description': description,
      'published': published,
      'categoryId': categoryId,
    };
  }
}

class CategoryWhereInput implements _i1.JsonSerializable {
  const CategoryWhereInput({
    this.AND,
    this.OR,
    this.NOT,
    this.id,
    this.name,
    this.slug,
    this.description,
    this.published,
    this.amenities,
    this.post,
    this.postId,
  });

  final _i1.PrismaNullable<CategoryWhereInput> AND;

  final _i1.PrismaNullable<List<CategoryWhereInput>> OR;

  final _i1.PrismaNullable<CategoryWhereInput> NOT;

  final _i1.PrismaNullable<IntFilter> id;

  final _i1.PrismaNullable<StringFilter> name;

  final _i1.PrismaNullable<StringNullableFilter> slug;

  final _i1.PrismaNullable<StringNullableFilter> description;

  final _i1.PrismaNullable<BoolFilter> published;

  final _i1.PrismaNullable<AmenitiesListRelationFilter> amenities;

  final _i1.PrismaNullable<PostRelationFilter> post;

  final _i1.PrismaNullable<IntFilter> postId;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'AND': AND,
      'OR': OR,
      'NOT': NOT,
      'id': id,
      'name': name,
      'slug': slug,
      'description': description,
      'published': published,
      'amenities': amenities,
      'post': post,
      'postId': postId,
    };
  }
}

class CategoryOrderByWithRelationInput implements _i1.JsonSerializable {
  const CategoryOrderByWithRelationInput({
    this.id,
    this.name,
    this.slug,
    this.description,
    this.published,
    this.amenities,
    this.post,
    this.postId,
  });

  final _i1.PrismaNullable<SortOrder> id;

  final _i1.PrismaNullable<SortOrder> name;

  final _i1.PrismaNullable<SortOrder> slug;

  final _i1.PrismaNullable<SortOrder> description;

  final _i1.PrismaNullable<SortOrder> published;

  final _i1.PrismaNullable<AmenitiesOrderByRelationAggregateInput> amenities;

  final _i1.PrismaNullable<PostOrderByWithRelationInput> post;

  final _i1.PrismaNullable<SortOrder> postId;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'name': name,
      'slug': slug,
      'description': description,
      'published': published,
      'amenities': amenities,
      'post': post,
      'postId': postId,
    };
  }
}

class CategoryWhereUniqueInput implements _i1.JsonSerializable {
  const CategoryWhereUniqueInput({
    this.id,
    this.slug,
  });

  final _i1.PrismaNullable<int> id;

  final _i1.PrismaNullable<String> slug;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'slug': slug,
    };
  }
}

class CategoryOrderByWithAggregationInput implements _i1.JsonSerializable {
  const CategoryOrderByWithAggregationInput({
    this.id,
    this.name,
    this.slug,
    this.description,
    this.published,
    this.postId,
    this.$count,
    this.$avg,
    this.$max,
    this.$min,
    this.$sum,
  });

  final _i1.PrismaNullable<SortOrder> id;

  final _i1.PrismaNullable<SortOrder> name;

  final _i1.PrismaNullable<SortOrder> slug;

  final _i1.PrismaNullable<SortOrder> description;

  final _i1.PrismaNullable<SortOrder> published;

  final _i1.PrismaNullable<SortOrder> postId;

  final _i1.PrismaNullable<CategoryCountOrderByAggregateInput> $count;

  final _i1.PrismaNullable<CategoryAvgOrderByAggregateInput> $avg;

  final _i1.PrismaNullable<CategoryMaxOrderByAggregateInput> $max;

  final _i1.PrismaNullable<CategoryMinOrderByAggregateInput> $min;

  final _i1.PrismaNullable<CategorySumOrderByAggregateInput> $sum;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'name': name,
      'slug': slug,
      'description': description,
      'published': published,
      'postId': postId,
      '_count': $count,
      '_avg': $avg,
      '_max': $max,
      '_min': $min,
      '_sum': $sum,
    };
  }
}

class CategoryScalarWhereWithAggregatesInput implements _i1.JsonSerializable {
  const CategoryScalarWhereWithAggregatesInput({
    this.AND,
    this.OR,
    this.NOT,
    this.id,
    this.name,
    this.slug,
    this.description,
    this.published,
    this.postId,
  });

  final _i1.PrismaNullable<CategoryScalarWhereWithAggregatesInput> AND;

  final _i1.PrismaNullable<List<CategoryScalarWhereWithAggregatesInput>> OR;

  final _i1.PrismaNullable<CategoryScalarWhereWithAggregatesInput> NOT;

  final _i1.PrismaNullable<IntWithAggregatesFilter> id;

  final _i1.PrismaNullable<StringWithAggregatesFilter> name;

  final _i1.PrismaNullable<StringNullableWithAggregatesFilter> slug;

  final _i1.PrismaNullable<StringNullableWithAggregatesFilter> description;

  final _i1.PrismaNullable<BoolWithAggregatesFilter> published;

  final _i1.PrismaNullable<IntWithAggregatesFilter> postId;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'AND': AND,
      'OR': OR,
      'NOT': NOT,
      'id': id,
      'name': name,
      'slug': slug,
      'description': description,
      'published': published,
      'postId': postId,
    };
  }
}

class UsersCreateInput implements _i1.JsonSerializable {
  const UsersCreateInput({
    required this.email,
    this.role,
    this.password,
    this.fcmtoken,
    this.salt,
    this.posts,
    this.Profile,
  });

  final String email;

  final _i1.PrismaNullable<Role> role;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> password;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> fcmtoken;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> salt;

  final _i1.PrismaNullable<PostCreateNestedManyWithoutAuthorInput> posts;

  final _i1.PrismaNullable<ProfileCreateNestedManyWithoutUserInput> Profile;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'email': email,
      'role': role,
      'password': password,
      'fcmtoken': fcmtoken,
      'salt': salt,
      'posts': posts,
      'Profile': Profile,
    };
  }
}

class UsersUncheckedCreateInput implements _i1.JsonSerializable {
  const UsersUncheckedCreateInput({
    this.id,
    required this.email,
    this.role,
    this.password,
    this.fcmtoken,
    this.salt,
    this.posts,
    this.Profile,
  });

  final _i1.PrismaNullable<int> id;

  final String email;

  final _i1.PrismaNullable<Role> role;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> password;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> fcmtoken;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> salt;

  final _i1.PrismaNullable<PostUncheckedCreateNestedManyWithoutAuthorInput>
      posts;

  final _i1.PrismaNullable<ProfileUncheckedCreateNestedManyWithoutUserInput>
      Profile;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'email': email,
      'role': role,
      'password': password,
      'fcmtoken': fcmtoken,
      'salt': salt,
      'posts': posts,
      'Profile': Profile,
    };
  }
}

class UsersUpdateInput implements _i1.JsonSerializable {
  const UsersUpdateInput({
    this.email,
    this.role,
    this.password,
    this.fcmtoken,
    this.salt,
    this.posts,
    this.Profile,
  });

  final _i1.PrismaNullable<StringFieldUpdateOperationsInput> email;

  final _i1.PrismaNullable<EnumRoleFieldUpdateOperationsInput> role;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> password;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> fcmtoken;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> salt;

  final _i1.PrismaNullable<PostUpdateManyWithoutAuthorNestedInput> posts;

  final _i1.PrismaNullable<ProfileUpdateManyWithoutUserNestedInput> Profile;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'email': email,
      'role': role,
      'password': password,
      'fcmtoken': fcmtoken,
      'salt': salt,
      'posts': posts,
      'Profile': Profile,
    };
  }
}

class UsersUncheckedUpdateInput implements _i1.JsonSerializable {
  const UsersUncheckedUpdateInput({
    this.id,
    this.email,
    this.role,
    this.password,
    this.fcmtoken,
    this.salt,
    this.posts,
    this.Profile,
  });

  final _i1.PrismaNullable<IntFieldUpdateOperationsInput> id;

  final _i1.PrismaNullable<StringFieldUpdateOperationsInput> email;

  final _i1.PrismaNullable<EnumRoleFieldUpdateOperationsInput> role;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> password;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> fcmtoken;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> salt;

  final _i1.PrismaNullable<PostUncheckedUpdateManyWithoutAuthorNestedInput>
      posts;

  final _i1.PrismaNullable<ProfileUncheckedUpdateManyWithoutUserNestedInput>
      Profile;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'email': email,
      'role': role,
      'password': password,
      'fcmtoken': fcmtoken,
      'salt': salt,
      'posts': posts,
      'Profile': Profile,
    };
  }
}

class UsersCreateManyInput implements _i1.JsonSerializable {
  const UsersCreateManyInput({
    this.id,
    required this.email,
    this.role,
    this.password,
    this.fcmtoken,
    this.salt,
  });

  final _i1.PrismaNullable<int> id;

  final String email;

  final _i1.PrismaNullable<Role> role;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> password;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> fcmtoken;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> salt;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'email': email,
      'role': role,
      'password': password,
      'fcmtoken': fcmtoken,
      'salt': salt,
    };
  }
}

class UsersUpdateManyMutationInput implements _i1.JsonSerializable {
  const UsersUpdateManyMutationInput({
    this.email,
    this.role,
    this.password,
    this.fcmtoken,
    this.salt,
  });

  final _i1.PrismaNullable<StringFieldUpdateOperationsInput> email;

  final _i1.PrismaNullable<EnumRoleFieldUpdateOperationsInput> role;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> password;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> fcmtoken;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> salt;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'email': email,
      'role': role,
      'password': password,
      'fcmtoken': fcmtoken,
      'salt': salt,
    };
  }
}

class UsersUncheckedUpdateManyInput implements _i1.JsonSerializable {
  const UsersUncheckedUpdateManyInput({
    this.id,
    this.email,
    this.role,
    this.password,
    this.fcmtoken,
    this.salt,
  });

  final _i1.PrismaNullable<IntFieldUpdateOperationsInput> id;

  final _i1.PrismaNullable<StringFieldUpdateOperationsInput> email;

  final _i1.PrismaNullable<EnumRoleFieldUpdateOperationsInput> role;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> password;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> fcmtoken;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> salt;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'email': email,
      'role': role,
      'password': password,
      'fcmtoken': fcmtoken,
      'salt': salt,
    };
  }
}

class ProfileCreateInput implements _i1.JsonSerializable {
  const ProfileCreateInput({
    this.firstName,
    this.lastName,
    this.addressLine1,
    this.addressLine2,
    this.city,
    this.state,
    this.country,
    this.postCode,
    this.phone,
    this.slug,
    this.images,
    this.longitude,
    this.latitude,
    this.published,
    this.user,
  });

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> firstName;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> lastName;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>>
      addressLine1;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>>
      addressLine2;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> city;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> state;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> country;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> postCode;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> phone;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> slug;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> images;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> longitude;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> latitude;

  final _i1.PrismaNullable<bool> published;

  final _i1.PrismaNullable<UsersCreateNestedOneWithoutProfileInput> user;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'firstName': firstName,
      'lastName': lastName,
      'addressLine1': addressLine1,
      'addressLine2': addressLine2,
      'city': city,
      'state': state,
      'country': country,
      'postCode': postCode,
      'phone': phone,
      'slug': slug,
      'images': images,
      'longitude': longitude,
      'latitude': latitude,
      'published': published,
      'user': user,
    };
  }
}

class ProfileUncheckedCreateInput implements _i1.JsonSerializable {
  const ProfileUncheckedCreateInput({
    this.id,
    this.firstName,
    this.lastName,
    this.addressLine1,
    this.addressLine2,
    this.city,
    this.state,
    this.country,
    this.postCode,
    this.phone,
    this.slug,
    this.images,
    this.longitude,
    this.latitude,
    this.published,
    this.userId,
  });

  final _i1.PrismaNullable<int> id;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> firstName;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> lastName;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>>
      addressLine1;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>>
      addressLine2;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> city;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> state;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> country;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> postCode;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> phone;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> slug;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> images;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> longitude;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> latitude;

  final _i1.PrismaNullable<bool> published;

  final _i1.PrismaNullable<_i1.PrismaUnion<int, _i1.PrismaNull>> userId;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'firstName': firstName,
      'lastName': lastName,
      'addressLine1': addressLine1,
      'addressLine2': addressLine2,
      'city': city,
      'state': state,
      'country': country,
      'postCode': postCode,
      'phone': phone,
      'slug': slug,
      'images': images,
      'longitude': longitude,
      'latitude': latitude,
      'published': published,
      'userId': userId,
    };
  }
}

class ProfileUpdateInput implements _i1.JsonSerializable {
  const ProfileUpdateInput({
    this.firstName,
    this.lastName,
    this.addressLine1,
    this.addressLine2,
    this.city,
    this.state,
    this.country,
    this.postCode,
    this.phone,
    this.slug,
    this.images,
    this.longitude,
    this.latitude,
    this.published,
    this.user,
  });

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> firstName;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> lastName;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput>
      addressLine1;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput>
      addressLine2;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> city;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> state;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> country;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> postCode;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> phone;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> slug;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> images;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> longitude;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> latitude;

  final _i1.PrismaNullable<BoolFieldUpdateOperationsInput> published;

  final _i1.PrismaNullable<UsersUpdateOneWithoutProfileNestedInput> user;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'firstName': firstName,
      'lastName': lastName,
      'addressLine1': addressLine1,
      'addressLine2': addressLine2,
      'city': city,
      'state': state,
      'country': country,
      'postCode': postCode,
      'phone': phone,
      'slug': slug,
      'images': images,
      'longitude': longitude,
      'latitude': latitude,
      'published': published,
      'user': user,
    };
  }
}

class ProfileUncheckedUpdateInput implements _i1.JsonSerializable {
  const ProfileUncheckedUpdateInput({
    this.id,
    this.firstName,
    this.lastName,
    this.addressLine1,
    this.addressLine2,
    this.city,
    this.state,
    this.country,
    this.postCode,
    this.phone,
    this.slug,
    this.images,
    this.longitude,
    this.latitude,
    this.published,
    this.userId,
  });

  final _i1.PrismaNullable<IntFieldUpdateOperationsInput> id;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> firstName;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> lastName;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput>
      addressLine1;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput>
      addressLine2;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> city;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> state;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> country;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> postCode;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> phone;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> slug;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> images;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> longitude;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> latitude;

  final _i1.PrismaNullable<BoolFieldUpdateOperationsInput> published;

  final _i1.PrismaNullable<NullableIntFieldUpdateOperationsInput> userId;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'firstName': firstName,
      'lastName': lastName,
      'addressLine1': addressLine1,
      'addressLine2': addressLine2,
      'city': city,
      'state': state,
      'country': country,
      'postCode': postCode,
      'phone': phone,
      'slug': slug,
      'images': images,
      'longitude': longitude,
      'latitude': latitude,
      'published': published,
      'userId': userId,
    };
  }
}

class ProfileCreateManyInput implements _i1.JsonSerializable {
  const ProfileCreateManyInput({
    this.id,
    this.firstName,
    this.lastName,
    this.addressLine1,
    this.addressLine2,
    this.city,
    this.state,
    this.country,
    this.postCode,
    this.phone,
    this.slug,
    this.images,
    this.longitude,
    this.latitude,
    this.published,
    this.userId,
  });

  final _i1.PrismaNullable<int> id;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> firstName;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> lastName;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>>
      addressLine1;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>>
      addressLine2;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> city;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> state;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> country;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> postCode;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> phone;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> slug;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> images;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> longitude;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> latitude;

  final _i1.PrismaNullable<bool> published;

  final _i1.PrismaNullable<_i1.PrismaUnion<int, _i1.PrismaNull>> userId;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'firstName': firstName,
      'lastName': lastName,
      'addressLine1': addressLine1,
      'addressLine2': addressLine2,
      'city': city,
      'state': state,
      'country': country,
      'postCode': postCode,
      'phone': phone,
      'slug': slug,
      'images': images,
      'longitude': longitude,
      'latitude': latitude,
      'published': published,
      'userId': userId,
    };
  }
}

class ProfileUpdateManyMutationInput implements _i1.JsonSerializable {
  const ProfileUpdateManyMutationInput({
    this.firstName,
    this.lastName,
    this.addressLine1,
    this.addressLine2,
    this.city,
    this.state,
    this.country,
    this.postCode,
    this.phone,
    this.slug,
    this.images,
    this.longitude,
    this.latitude,
    this.published,
  });

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> firstName;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> lastName;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput>
      addressLine1;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput>
      addressLine2;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> city;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> state;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> country;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> postCode;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> phone;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> slug;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> images;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> longitude;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> latitude;

  final _i1.PrismaNullable<BoolFieldUpdateOperationsInput> published;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'firstName': firstName,
      'lastName': lastName,
      'addressLine1': addressLine1,
      'addressLine2': addressLine2,
      'city': city,
      'state': state,
      'country': country,
      'postCode': postCode,
      'phone': phone,
      'slug': slug,
      'images': images,
      'longitude': longitude,
      'latitude': latitude,
      'published': published,
    };
  }
}

class ProfileUncheckedUpdateManyInput implements _i1.JsonSerializable {
  const ProfileUncheckedUpdateManyInput({
    this.id,
    this.firstName,
    this.lastName,
    this.addressLine1,
    this.addressLine2,
    this.city,
    this.state,
    this.country,
    this.postCode,
    this.phone,
    this.slug,
    this.images,
    this.longitude,
    this.latitude,
    this.published,
    this.userId,
  });

  final _i1.PrismaNullable<IntFieldUpdateOperationsInput> id;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> firstName;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> lastName;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput>
      addressLine1;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput>
      addressLine2;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> city;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> state;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> country;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> postCode;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> phone;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> slug;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> images;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> longitude;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> latitude;

  final _i1.PrismaNullable<BoolFieldUpdateOperationsInput> published;

  final _i1.PrismaNullable<NullableIntFieldUpdateOperationsInput> userId;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'firstName': firstName,
      'lastName': lastName,
      'addressLine1': addressLine1,
      'addressLine2': addressLine2,
      'city': city,
      'state': state,
      'country': country,
      'postCode': postCode,
      'phone': phone,
      'slug': slug,
      'images': images,
      'longitude': longitude,
      'latitude': latitude,
      'published': published,
      'userId': userId,
    };
  }
}

class PostCreateInput implements _i1.JsonSerializable {
  const PostCreateInput({
    required this.title,
    this.slug,
    this.description,
    this.images,
    this.long_description,
    this.longitude,
    this.latitude,
    this.content,
    this.published,
    required this.author,
    this.postmeta,
    this.category,
  });

  final String title;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> slug;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> description;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> images;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>>
      long_description;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> longitude;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> latitude;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> content;

  final _i1.PrismaNullable<bool> published;

  final UsersCreateNestedOneWithoutPostsInput author;

  final _i1.PrismaNullable<PostMetaCreateNestedManyWithoutPostInput> postmeta;

  final _i1.PrismaNullable<CategoryCreateNestedManyWithoutPostInput> category;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'title': title,
      'slug': slug,
      'description': description,
      'images': images,
      'long_description': long_description,
      'longitude': longitude,
      'latitude': latitude,
      'content': content,
      'published': published,
      'author': author,
      'postmeta': postmeta,
      'category': category,
    };
  }
}

class PostUncheckedCreateInput implements _i1.JsonSerializable {
  const PostUncheckedCreateInput({
    this.id,
    required this.title,
    this.slug,
    this.description,
    this.images,
    this.long_description,
    this.longitude,
    this.latitude,
    this.content,
    this.published,
    required this.authorId,
    this.postmeta,
    this.category,
  });

  final _i1.PrismaNullable<int> id;

  final String title;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> slug;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> description;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> images;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>>
      long_description;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> longitude;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> latitude;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> content;

  final _i1.PrismaNullable<bool> published;

  final int authorId;

  final _i1.PrismaNullable<PostMetaUncheckedCreateNestedManyWithoutPostInput>
      postmeta;

  final _i1.PrismaNullable<CategoryUncheckedCreateNestedManyWithoutPostInput>
      category;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'title': title,
      'slug': slug,
      'description': description,
      'images': images,
      'long_description': long_description,
      'longitude': longitude,
      'latitude': latitude,
      'content': content,
      'published': published,
      'authorId': authorId,
      'postmeta': postmeta,
      'category': category,
    };
  }
}

class PostUpdateInput implements _i1.JsonSerializable {
  const PostUpdateInput({
    this.title,
    this.slug,
    this.description,
    this.images,
    this.long_description,
    this.longitude,
    this.latitude,
    this.content,
    this.published,
    this.author,
    this.postmeta,
    this.category,
  });

  final _i1.PrismaNullable<StringFieldUpdateOperationsInput> title;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> slug;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput>
      description;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> images;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput>
      long_description;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> longitude;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> latitude;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> content;

  final _i1.PrismaNullable<BoolFieldUpdateOperationsInput> published;

  final _i1.PrismaNullable<UsersUpdateOneRequiredWithoutPostsNestedInput>
      author;

  final _i1.PrismaNullable<PostMetaUpdateManyWithoutPostNestedInput> postmeta;

  final _i1.PrismaNullable<CategoryUpdateManyWithoutPostNestedInput> category;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'title': title,
      'slug': slug,
      'description': description,
      'images': images,
      'long_description': long_description,
      'longitude': longitude,
      'latitude': latitude,
      'content': content,
      'published': published,
      'author': author,
      'postmeta': postmeta,
      'category': category,
    };
  }
}

class PostUncheckedUpdateInput implements _i1.JsonSerializable {
  const PostUncheckedUpdateInput({
    this.id,
    this.title,
    this.slug,
    this.description,
    this.images,
    this.long_description,
    this.longitude,
    this.latitude,
    this.content,
    this.published,
    this.authorId,
    this.postmeta,
    this.category,
  });

  final _i1.PrismaNullable<IntFieldUpdateOperationsInput> id;

  final _i1.PrismaNullable<StringFieldUpdateOperationsInput> title;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> slug;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput>
      description;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> images;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput>
      long_description;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> longitude;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> latitude;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> content;

  final _i1.PrismaNullable<BoolFieldUpdateOperationsInput> published;

  final _i1.PrismaNullable<IntFieldUpdateOperationsInput> authorId;

  final _i1.PrismaNullable<PostMetaUncheckedUpdateManyWithoutPostNestedInput>
      postmeta;

  final _i1.PrismaNullable<CategoryUncheckedUpdateManyWithoutPostNestedInput>
      category;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'title': title,
      'slug': slug,
      'description': description,
      'images': images,
      'long_description': long_description,
      'longitude': longitude,
      'latitude': latitude,
      'content': content,
      'published': published,
      'authorId': authorId,
      'postmeta': postmeta,
      'category': category,
    };
  }
}

class PostCreateManyInput implements _i1.JsonSerializable {
  const PostCreateManyInput({
    this.id,
    required this.title,
    this.slug,
    this.description,
    this.images,
    this.long_description,
    this.longitude,
    this.latitude,
    this.content,
    this.published,
    required this.authorId,
  });

  final _i1.PrismaNullable<int> id;

  final String title;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> slug;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> description;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> images;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>>
      long_description;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> longitude;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> latitude;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> content;

  final _i1.PrismaNullable<bool> published;

  final int authorId;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'title': title,
      'slug': slug,
      'description': description,
      'images': images,
      'long_description': long_description,
      'longitude': longitude,
      'latitude': latitude,
      'content': content,
      'published': published,
      'authorId': authorId,
    };
  }
}

class PostUpdateManyMutationInput implements _i1.JsonSerializable {
  const PostUpdateManyMutationInput({
    this.title,
    this.slug,
    this.description,
    this.images,
    this.long_description,
    this.longitude,
    this.latitude,
    this.content,
    this.published,
  });

  final _i1.PrismaNullable<StringFieldUpdateOperationsInput> title;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> slug;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput>
      description;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> images;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput>
      long_description;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> longitude;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> latitude;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> content;

  final _i1.PrismaNullable<BoolFieldUpdateOperationsInput> published;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'title': title,
      'slug': slug,
      'description': description,
      'images': images,
      'long_description': long_description,
      'longitude': longitude,
      'latitude': latitude,
      'content': content,
      'published': published,
    };
  }
}

class PostUncheckedUpdateManyInput implements _i1.JsonSerializable {
  const PostUncheckedUpdateManyInput({
    this.id,
    this.title,
    this.slug,
    this.description,
    this.images,
    this.long_description,
    this.longitude,
    this.latitude,
    this.content,
    this.published,
    this.authorId,
  });

  final _i1.PrismaNullable<IntFieldUpdateOperationsInput> id;

  final _i1.PrismaNullable<StringFieldUpdateOperationsInput> title;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> slug;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput>
      description;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> images;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput>
      long_description;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> longitude;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> latitude;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> content;

  final _i1.PrismaNullable<BoolFieldUpdateOperationsInput> published;

  final _i1.PrismaNullable<IntFieldUpdateOperationsInput> authorId;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'title': title,
      'slug': slug,
      'description': description,
      'images': images,
      'long_description': long_description,
      'longitude': longitude,
      'latitude': latitude,
      'content': content,
      'published': published,
      'authorId': authorId,
    };
  }
}

class PostMetaCreateInput implements _i1.JsonSerializable {
  const PostMetaCreateInput({
    required this.meta_title,
    this.meta_description,
    this.published,
    required this.post,
  });

  final String meta_title;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>>
      meta_description;

  final _i1.PrismaNullable<bool> published;

  final PostCreateNestedOneWithoutPostmetaInput post;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'meta_title': meta_title,
      'meta_description': meta_description,
      'published': published,
      'post': post,
    };
  }
}

class PostMetaUncheckedCreateInput implements _i1.JsonSerializable {
  const PostMetaUncheckedCreateInput({
    this.id,
    required this.meta_title,
    this.meta_description,
    this.published,
    required this.postId,
  });

  final _i1.PrismaNullable<int> id;

  final String meta_title;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>>
      meta_description;

  final _i1.PrismaNullable<bool> published;

  final int postId;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'meta_title': meta_title,
      'meta_description': meta_description,
      'published': published,
      'postId': postId,
    };
  }
}

class PostMetaUpdateInput implements _i1.JsonSerializable {
  const PostMetaUpdateInput({
    this.meta_title,
    this.meta_description,
    this.published,
    this.post,
  });

  final _i1.PrismaNullable<StringFieldUpdateOperationsInput> meta_title;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput>
      meta_description;

  final _i1.PrismaNullable<BoolFieldUpdateOperationsInput> published;

  final _i1.PrismaNullable<PostUpdateOneRequiredWithoutPostmetaNestedInput>
      post;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'meta_title': meta_title,
      'meta_description': meta_description,
      'published': published,
      'post': post,
    };
  }
}

class PostMetaUncheckedUpdateInput implements _i1.JsonSerializable {
  const PostMetaUncheckedUpdateInput({
    this.id,
    this.meta_title,
    this.meta_description,
    this.published,
    this.postId,
  });

  final _i1.PrismaNullable<IntFieldUpdateOperationsInput> id;

  final _i1.PrismaNullable<StringFieldUpdateOperationsInput> meta_title;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput>
      meta_description;

  final _i1.PrismaNullable<BoolFieldUpdateOperationsInput> published;

  final _i1.PrismaNullable<IntFieldUpdateOperationsInput> postId;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'meta_title': meta_title,
      'meta_description': meta_description,
      'published': published,
      'postId': postId,
    };
  }
}

class PostMetaCreateManyInput implements _i1.JsonSerializable {
  const PostMetaCreateManyInput({
    this.id,
    required this.meta_title,
    this.meta_description,
    this.published,
    required this.postId,
  });

  final _i1.PrismaNullable<int> id;

  final String meta_title;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>>
      meta_description;

  final _i1.PrismaNullable<bool> published;

  final int postId;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'meta_title': meta_title,
      'meta_description': meta_description,
      'published': published,
      'postId': postId,
    };
  }
}

class PostMetaUpdateManyMutationInput implements _i1.JsonSerializable {
  const PostMetaUpdateManyMutationInput({
    this.meta_title,
    this.meta_description,
    this.published,
  });

  final _i1.PrismaNullable<StringFieldUpdateOperationsInput> meta_title;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput>
      meta_description;

  final _i1.PrismaNullable<BoolFieldUpdateOperationsInput> published;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'meta_title': meta_title,
      'meta_description': meta_description,
      'published': published,
    };
  }
}

class PostMetaUncheckedUpdateManyInput implements _i1.JsonSerializable {
  const PostMetaUncheckedUpdateManyInput({
    this.id,
    this.meta_title,
    this.meta_description,
    this.published,
    this.postId,
  });

  final _i1.PrismaNullable<IntFieldUpdateOperationsInput> id;

  final _i1.PrismaNullable<StringFieldUpdateOperationsInput> meta_title;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput>
      meta_description;

  final _i1.PrismaNullable<BoolFieldUpdateOperationsInput> published;

  final _i1.PrismaNullable<IntFieldUpdateOperationsInput> postId;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'meta_title': meta_title,
      'meta_description': meta_description,
      'published': published,
      'postId': postId,
    };
  }
}

class AmenitiesCreateInput implements _i1.JsonSerializable {
  const AmenitiesCreateInput({
    required this.name,
    this.slug,
    this.description,
    this.published,
    required this.category,
  });

  final String name;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> slug;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> description;

  final _i1.PrismaNullable<bool> published;

  final CategoryCreateNestedOneWithoutAmenitiesInput category;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'name': name,
      'slug': slug,
      'description': description,
      'published': published,
      'category': category,
    };
  }
}

class AmenitiesUncheckedCreateInput implements _i1.JsonSerializable {
  const AmenitiesUncheckedCreateInput({
    this.id,
    required this.name,
    this.slug,
    this.description,
    this.published,
    required this.categoryId,
  });

  final _i1.PrismaNullable<int> id;

  final String name;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> slug;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> description;

  final _i1.PrismaNullable<bool> published;

  final int categoryId;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'name': name,
      'slug': slug,
      'description': description,
      'published': published,
      'categoryId': categoryId,
    };
  }
}

class AmenitiesUpdateInput implements _i1.JsonSerializable {
  const AmenitiesUpdateInput({
    this.name,
    this.slug,
    this.description,
    this.published,
    this.category,
  });

  final _i1.PrismaNullable<StringFieldUpdateOperationsInput> name;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> slug;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput>
      description;

  final _i1.PrismaNullable<BoolFieldUpdateOperationsInput> published;

  final _i1.PrismaNullable<CategoryUpdateOneRequiredWithoutAmenitiesNestedInput>
      category;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'name': name,
      'slug': slug,
      'description': description,
      'published': published,
      'category': category,
    };
  }
}

class AmenitiesUncheckedUpdateInput implements _i1.JsonSerializable {
  const AmenitiesUncheckedUpdateInput({
    this.id,
    this.name,
    this.slug,
    this.description,
    this.published,
    this.categoryId,
  });

  final _i1.PrismaNullable<IntFieldUpdateOperationsInput> id;

  final _i1.PrismaNullable<StringFieldUpdateOperationsInput> name;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> slug;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput>
      description;

  final _i1.PrismaNullable<BoolFieldUpdateOperationsInput> published;

  final _i1.PrismaNullable<IntFieldUpdateOperationsInput> categoryId;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'name': name,
      'slug': slug,
      'description': description,
      'published': published,
      'categoryId': categoryId,
    };
  }
}

class AmenitiesCreateManyInput implements _i1.JsonSerializable {
  const AmenitiesCreateManyInput({
    this.id,
    required this.name,
    this.slug,
    this.description,
    this.published,
    required this.categoryId,
  });

  final _i1.PrismaNullable<int> id;

  final String name;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> slug;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> description;

  final _i1.PrismaNullable<bool> published;

  final int categoryId;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'name': name,
      'slug': slug,
      'description': description,
      'published': published,
      'categoryId': categoryId,
    };
  }
}

class AmenitiesUpdateManyMutationInput implements _i1.JsonSerializable {
  const AmenitiesUpdateManyMutationInput({
    this.name,
    this.slug,
    this.description,
    this.published,
  });

  final _i1.PrismaNullable<StringFieldUpdateOperationsInput> name;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> slug;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput>
      description;

  final _i1.PrismaNullable<BoolFieldUpdateOperationsInput> published;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'name': name,
      'slug': slug,
      'description': description,
      'published': published,
    };
  }
}

class AmenitiesUncheckedUpdateManyInput implements _i1.JsonSerializable {
  const AmenitiesUncheckedUpdateManyInput({
    this.id,
    this.name,
    this.slug,
    this.description,
    this.published,
    this.categoryId,
  });

  final _i1.PrismaNullable<IntFieldUpdateOperationsInput> id;

  final _i1.PrismaNullable<StringFieldUpdateOperationsInput> name;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> slug;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput>
      description;

  final _i1.PrismaNullable<BoolFieldUpdateOperationsInput> published;

  final _i1.PrismaNullable<IntFieldUpdateOperationsInput> categoryId;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'name': name,
      'slug': slug,
      'description': description,
      'published': published,
      'categoryId': categoryId,
    };
  }
}

class CategoryCreateInput implements _i1.JsonSerializable {
  const CategoryCreateInput({
    required this.name,
    this.slug,
    this.description,
    this.published,
    this.amenities,
    required this.post,
  });

  final String name;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> slug;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> description;

  final _i1.PrismaNullable<bool> published;

  final _i1.PrismaNullable<AmenitiesCreateNestedManyWithoutCategoryInput>
      amenities;

  final PostCreateNestedOneWithoutCategoryInput post;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'name': name,
      'slug': slug,
      'description': description,
      'published': published,
      'amenities': amenities,
      'post': post,
    };
  }
}

class CategoryUncheckedCreateInput implements _i1.JsonSerializable {
  const CategoryUncheckedCreateInput({
    this.id,
    required this.name,
    this.slug,
    this.description,
    this.published,
    this.amenities,
    required this.postId,
  });

  final _i1.PrismaNullable<int> id;

  final String name;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> slug;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> description;

  final _i1.PrismaNullable<bool> published;

  final _i1.PrismaNullable<
      AmenitiesUncheckedCreateNestedManyWithoutCategoryInput> amenities;

  final int postId;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'name': name,
      'slug': slug,
      'description': description,
      'published': published,
      'amenities': amenities,
      'postId': postId,
    };
  }
}

class CategoryUpdateInput implements _i1.JsonSerializable {
  const CategoryUpdateInput({
    this.name,
    this.slug,
    this.description,
    this.published,
    this.amenities,
    this.post,
  });

  final _i1.PrismaNullable<StringFieldUpdateOperationsInput> name;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> slug;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput>
      description;

  final _i1.PrismaNullable<BoolFieldUpdateOperationsInput> published;

  final _i1.PrismaNullable<AmenitiesUpdateManyWithoutCategoryNestedInput>
      amenities;

  final _i1.PrismaNullable<PostUpdateOneRequiredWithoutCategoryNestedInput>
      post;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'name': name,
      'slug': slug,
      'description': description,
      'published': published,
      'amenities': amenities,
      'post': post,
    };
  }
}

class CategoryUncheckedUpdateInput implements _i1.JsonSerializable {
  const CategoryUncheckedUpdateInput({
    this.id,
    this.name,
    this.slug,
    this.description,
    this.published,
    this.amenities,
    this.postId,
  });

  final _i1.PrismaNullable<IntFieldUpdateOperationsInput> id;

  final _i1.PrismaNullable<StringFieldUpdateOperationsInput> name;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> slug;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput>
      description;

  final _i1.PrismaNullable<BoolFieldUpdateOperationsInput> published;

  final _i1.PrismaNullable<
      AmenitiesUncheckedUpdateManyWithoutCategoryNestedInput> amenities;

  final _i1.PrismaNullable<IntFieldUpdateOperationsInput> postId;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'name': name,
      'slug': slug,
      'description': description,
      'published': published,
      'amenities': amenities,
      'postId': postId,
    };
  }
}

class CategoryCreateManyInput implements _i1.JsonSerializable {
  const CategoryCreateManyInput({
    this.id,
    required this.name,
    this.slug,
    this.description,
    this.published,
    required this.postId,
  });

  final _i1.PrismaNullable<int> id;

  final String name;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> slug;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> description;

  final _i1.PrismaNullable<bool> published;

  final int postId;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'name': name,
      'slug': slug,
      'description': description,
      'published': published,
      'postId': postId,
    };
  }
}

class CategoryUpdateManyMutationInput implements _i1.JsonSerializable {
  const CategoryUpdateManyMutationInput({
    this.name,
    this.slug,
    this.description,
    this.published,
  });

  final _i1.PrismaNullable<StringFieldUpdateOperationsInput> name;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> slug;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput>
      description;

  final _i1.PrismaNullable<BoolFieldUpdateOperationsInput> published;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'name': name,
      'slug': slug,
      'description': description,
      'published': published,
    };
  }
}

class CategoryUncheckedUpdateManyInput implements _i1.JsonSerializable {
  const CategoryUncheckedUpdateManyInput({
    this.id,
    this.name,
    this.slug,
    this.description,
    this.published,
    this.postId,
  });

  final _i1.PrismaNullable<IntFieldUpdateOperationsInput> id;

  final _i1.PrismaNullable<StringFieldUpdateOperationsInput> name;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> slug;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput>
      description;

  final _i1.PrismaNullable<BoolFieldUpdateOperationsInput> published;

  final _i1.PrismaNullable<IntFieldUpdateOperationsInput> postId;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'name': name,
      'slug': slug,
      'description': description,
      'published': published,
      'postId': postId,
    };
  }
}

class IntFilter implements _i1.JsonSerializable {
  const IntFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.not,
  });

  final _i1.PrismaNullable<int> equals;

  final _i1.PrismaNullable<List<int>> in$;

  final _i1.PrismaNullable<List<int>> notIn;

  final _i1.PrismaNullable<int> lt;

  final _i1.PrismaNullable<int> lte;

  final _i1.PrismaNullable<int> gt;

  final _i1.PrismaNullable<int> gte;

  final _i1.PrismaNullable<NestedIntFilter> not;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'equals': equals,
      'in': in$,
      'notIn': notIn,
      'lt': lt,
      'lte': lte,
      'gt': gt,
      'gte': gte,
      'not': not,
    };
  }
}

class StringFilter implements _i1.JsonSerializable {
  const StringFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.contains,
    this.startsWith,
    this.endsWith,
    this.not,
  });

  final _i1.PrismaNullable<String> equals;

  final _i1.PrismaNullable<List<String>> in$;

  final _i1.PrismaNullable<List<String>> notIn;

  final _i1.PrismaNullable<String> lt;

  final _i1.PrismaNullable<String> lte;

  final _i1.PrismaNullable<String> gt;

  final _i1.PrismaNullable<String> gte;

  final _i1.PrismaNullable<String> contains;

  final _i1.PrismaNullable<String> startsWith;

  final _i1.PrismaNullable<String> endsWith;

  final _i1.PrismaNullable<NestedStringFilter> not;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'equals': equals,
      'in': in$,
      'notIn': notIn,
      'lt': lt,
      'lte': lte,
      'gt': gt,
      'gte': gte,
      'contains': contains,
      'startsWith': startsWith,
      'endsWith': endsWith,
      'not': not,
    };
  }
}

class EnumRoleFilter implements _i1.JsonSerializable {
  const EnumRoleFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.not,
  });

  final _i1.PrismaNullable<Role> equals;

  final _i1.PrismaNullable<List<Role>> in$;

  final _i1.PrismaNullable<List<Role>> notIn;

  final _i1.PrismaNullable<NestedEnumRoleFilter> not;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'equals': equals,
      'in': in$,
      'notIn': notIn,
      'not': not,
    };
  }
}

class StringNullableFilter implements _i1.JsonSerializable {
  const StringNullableFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.contains,
    this.startsWith,
    this.endsWith,
    this.not,
  });

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> equals;

  final _i1.PrismaNullable<List<String>> in$;

  final _i1.PrismaNullable<List<String>> notIn;

  final _i1.PrismaNullable<String> lt;

  final _i1.PrismaNullable<String> lte;

  final _i1.PrismaNullable<String> gt;

  final _i1.PrismaNullable<String> gte;

  final _i1.PrismaNullable<String> contains;

  final _i1.PrismaNullable<String> startsWith;

  final _i1.PrismaNullable<String> endsWith;

  final _i1.PrismaNullable<NestedStringNullableFilter> not;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'equals': equals,
      'in': in$,
      'notIn': notIn,
      'lt': lt,
      'lte': lte,
      'gt': gt,
      'gte': gte,
      'contains': contains,
      'startsWith': startsWith,
      'endsWith': endsWith,
      'not': not,
    };
  }
}

class PostListRelationFilter implements _i1.JsonSerializable {
  const PostListRelationFilter({
    this.every,
    this.some,
    this.none,
  });

  final _i1.PrismaNullable<PostWhereInput> every;

  final _i1.PrismaNullable<PostWhereInput> some;

  final _i1.PrismaNullable<PostWhereInput> none;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'every': every,
      'some': some,
      'none': none,
    };
  }
}

class ProfileListRelationFilter implements _i1.JsonSerializable {
  const ProfileListRelationFilter({
    this.every,
    this.some,
    this.none,
  });

  final _i1.PrismaNullable<ProfileWhereInput> every;

  final _i1.PrismaNullable<ProfileWhereInput> some;

  final _i1.PrismaNullable<ProfileWhereInput> none;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'every': every,
      'some': some,
      'none': none,
    };
  }
}

class PostOrderByRelationAggregateInput implements _i1.JsonSerializable {
  const PostOrderByRelationAggregateInput({this.$count});

  final _i1.PrismaNullable<SortOrder> $count;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      '_count': $count,
    };
  }
}

class ProfileOrderByRelationAggregateInput implements _i1.JsonSerializable {
  const ProfileOrderByRelationAggregateInput({this.$count});

  final _i1.PrismaNullable<SortOrder> $count;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      '_count': $count,
    };
  }
}

class UsersCountOrderByAggregateInput implements _i1.JsonSerializable {
  const UsersCountOrderByAggregateInput({
    this.id,
    this.email,
    this.role,
    this.password,
    this.fcmtoken,
    this.salt,
  });

  final _i1.PrismaNullable<SortOrder> id;

  final _i1.PrismaNullable<SortOrder> email;

  final _i1.PrismaNullable<SortOrder> role;

  final _i1.PrismaNullable<SortOrder> password;

  final _i1.PrismaNullable<SortOrder> fcmtoken;

  final _i1.PrismaNullable<SortOrder> salt;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'email': email,
      'role': role,
      'password': password,
      'fcmtoken': fcmtoken,
      'salt': salt,
    };
  }
}

class UsersAvgOrderByAggregateInput implements _i1.JsonSerializable {
  const UsersAvgOrderByAggregateInput({this.id});

  final _i1.PrismaNullable<SortOrder> id;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
    };
  }
}

class UsersMaxOrderByAggregateInput implements _i1.JsonSerializable {
  const UsersMaxOrderByAggregateInput({
    this.id,
    this.email,
    this.role,
    this.password,
    this.fcmtoken,
    this.salt,
  });

  final _i1.PrismaNullable<SortOrder> id;

  final _i1.PrismaNullable<SortOrder> email;

  final _i1.PrismaNullable<SortOrder> role;

  final _i1.PrismaNullable<SortOrder> password;

  final _i1.PrismaNullable<SortOrder> fcmtoken;

  final _i1.PrismaNullable<SortOrder> salt;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'email': email,
      'role': role,
      'password': password,
      'fcmtoken': fcmtoken,
      'salt': salt,
    };
  }
}

class UsersMinOrderByAggregateInput implements _i1.JsonSerializable {
  const UsersMinOrderByAggregateInput({
    this.id,
    this.email,
    this.role,
    this.password,
    this.fcmtoken,
    this.salt,
  });

  final _i1.PrismaNullable<SortOrder> id;

  final _i1.PrismaNullable<SortOrder> email;

  final _i1.PrismaNullable<SortOrder> role;

  final _i1.PrismaNullable<SortOrder> password;

  final _i1.PrismaNullable<SortOrder> fcmtoken;

  final _i1.PrismaNullable<SortOrder> salt;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'email': email,
      'role': role,
      'password': password,
      'fcmtoken': fcmtoken,
      'salt': salt,
    };
  }
}

class UsersSumOrderByAggregateInput implements _i1.JsonSerializable {
  const UsersSumOrderByAggregateInput({this.id});

  final _i1.PrismaNullable<SortOrder> id;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
    };
  }
}

class IntWithAggregatesFilter implements _i1.JsonSerializable {
  const IntWithAggregatesFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.not,
    this.$count,
    this.$avg,
    this.$sum,
    this.$min,
    this.$max,
  });

  final _i1.PrismaNullable<int> equals;

  final _i1.PrismaNullable<List<int>> in$;

  final _i1.PrismaNullable<List<int>> notIn;

  final _i1.PrismaNullable<int> lt;

  final _i1.PrismaNullable<int> lte;

  final _i1.PrismaNullable<int> gt;

  final _i1.PrismaNullable<int> gte;

  final _i1.PrismaNullable<NestedIntWithAggregatesFilter> not;

  final _i1.PrismaNullable<NestedIntFilter> $count;

  final _i1.PrismaNullable<NestedFloatFilter> $avg;

  final _i1.PrismaNullable<NestedIntFilter> $sum;

  final _i1.PrismaNullable<NestedIntFilter> $min;

  final _i1.PrismaNullable<NestedIntFilter> $max;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'equals': equals,
      'in': in$,
      'notIn': notIn,
      'lt': lt,
      'lte': lte,
      'gt': gt,
      'gte': gte,
      'not': not,
      '_count': $count,
      '_avg': $avg,
      '_sum': $sum,
      '_min': $min,
      '_max': $max,
    };
  }
}

class StringWithAggregatesFilter implements _i1.JsonSerializable {
  const StringWithAggregatesFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.contains,
    this.startsWith,
    this.endsWith,
    this.not,
    this.$count,
    this.$min,
    this.$max,
  });

  final _i1.PrismaNullable<String> equals;

  final _i1.PrismaNullable<List<String>> in$;

  final _i1.PrismaNullable<List<String>> notIn;

  final _i1.PrismaNullable<String> lt;

  final _i1.PrismaNullable<String> lte;

  final _i1.PrismaNullable<String> gt;

  final _i1.PrismaNullable<String> gte;

  final _i1.PrismaNullable<String> contains;

  final _i1.PrismaNullable<String> startsWith;

  final _i1.PrismaNullable<String> endsWith;

  final _i1.PrismaNullable<NestedStringWithAggregatesFilter> not;

  final _i1.PrismaNullable<NestedIntFilter> $count;

  final _i1.PrismaNullable<NestedStringFilter> $min;

  final _i1.PrismaNullable<NestedStringFilter> $max;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'equals': equals,
      'in': in$,
      'notIn': notIn,
      'lt': lt,
      'lte': lte,
      'gt': gt,
      'gte': gte,
      'contains': contains,
      'startsWith': startsWith,
      'endsWith': endsWith,
      'not': not,
      '_count': $count,
      '_min': $min,
      '_max': $max,
    };
  }
}

class EnumRoleWithAggregatesFilter implements _i1.JsonSerializable {
  const EnumRoleWithAggregatesFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.not,
    this.$count,
    this.$min,
    this.$max,
  });

  final _i1.PrismaNullable<Role> equals;

  final _i1.PrismaNullable<List<Role>> in$;

  final _i1.PrismaNullable<List<Role>> notIn;

  final _i1.PrismaNullable<NestedEnumRoleWithAggregatesFilter> not;

  final _i1.PrismaNullable<NestedIntFilter> $count;

  final _i1.PrismaNullable<NestedEnumRoleFilter> $min;

  final _i1.PrismaNullable<NestedEnumRoleFilter> $max;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'equals': equals,
      'in': in$,
      'notIn': notIn,
      'not': not,
      '_count': $count,
      '_min': $min,
      '_max': $max,
    };
  }
}

class StringNullableWithAggregatesFilter implements _i1.JsonSerializable {
  const StringNullableWithAggregatesFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.contains,
    this.startsWith,
    this.endsWith,
    this.not,
    this.$count,
    this.$min,
    this.$max,
  });

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> equals;

  final _i1.PrismaNullable<List<String>> in$;

  final _i1.PrismaNullable<List<String>> notIn;

  final _i1.PrismaNullable<String> lt;

  final _i1.PrismaNullable<String> lte;

  final _i1.PrismaNullable<String> gt;

  final _i1.PrismaNullable<String> gte;

  final _i1.PrismaNullable<String> contains;

  final _i1.PrismaNullable<String> startsWith;

  final _i1.PrismaNullable<String> endsWith;

  final _i1.PrismaNullable<NestedStringNullableWithAggregatesFilter> not;

  final _i1.PrismaNullable<NestedIntNullableFilter> $count;

  final _i1.PrismaNullable<NestedStringNullableFilter> $min;

  final _i1.PrismaNullable<NestedStringNullableFilter> $max;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'equals': equals,
      'in': in$,
      'notIn': notIn,
      'lt': lt,
      'lte': lte,
      'gt': gt,
      'gte': gte,
      'contains': contains,
      'startsWith': startsWith,
      'endsWith': endsWith,
      'not': not,
      '_count': $count,
      '_min': $min,
      '_max': $max,
    };
  }
}

class BoolFilter implements _i1.JsonSerializable {
  const BoolFilter({
    this.equals,
    this.not,
  });

  final _i1.PrismaNullable<bool> equals;

  final _i1.PrismaNullable<NestedBoolFilter> not;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'equals': equals,
      'not': not,
    };
  }
}

class UsersRelationFilter implements _i1.JsonSerializable {
  const UsersRelationFilter({
    this.is$,
    this.isNot,
  });

  final _i1.PrismaNullable<UsersWhereInput> is$;

  final _i1.PrismaNullable<UsersWhereInput> isNot;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'is': is$,
      'isNot': isNot,
    };
  }
}

class IntNullableFilter implements _i1.JsonSerializable {
  const IntNullableFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.not,
  });

  final _i1.PrismaNullable<_i1.PrismaUnion<int, _i1.PrismaNull>> equals;

  final _i1.PrismaNullable<List<int>> in$;

  final _i1.PrismaNullable<List<int>> notIn;

  final _i1.PrismaNullable<int> lt;

  final _i1.PrismaNullable<int> lte;

  final _i1.PrismaNullable<int> gt;

  final _i1.PrismaNullable<int> gte;

  final _i1.PrismaNullable<NestedIntNullableFilter> not;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'equals': equals,
      'in': in$,
      'notIn': notIn,
      'lt': lt,
      'lte': lte,
      'gt': gt,
      'gte': gte,
      'not': not,
    };
  }
}

class ProfileCountOrderByAggregateInput implements _i1.JsonSerializable {
  const ProfileCountOrderByAggregateInput({
    this.id,
    this.firstName,
    this.lastName,
    this.addressLine1,
    this.addressLine2,
    this.city,
    this.state,
    this.country,
    this.postCode,
    this.phone,
    this.slug,
    this.images,
    this.longitude,
    this.latitude,
    this.published,
    this.userId,
  });

  final _i1.PrismaNullable<SortOrder> id;

  final _i1.PrismaNullable<SortOrder> firstName;

  final _i1.PrismaNullable<SortOrder> lastName;

  final _i1.PrismaNullable<SortOrder> addressLine1;

  final _i1.PrismaNullable<SortOrder> addressLine2;

  final _i1.PrismaNullable<SortOrder> city;

  final _i1.PrismaNullable<SortOrder> state;

  final _i1.PrismaNullable<SortOrder> country;

  final _i1.PrismaNullable<SortOrder> postCode;

  final _i1.PrismaNullable<SortOrder> phone;

  final _i1.PrismaNullable<SortOrder> slug;

  final _i1.PrismaNullable<SortOrder> images;

  final _i1.PrismaNullable<SortOrder> longitude;

  final _i1.PrismaNullable<SortOrder> latitude;

  final _i1.PrismaNullable<SortOrder> published;

  final _i1.PrismaNullable<SortOrder> userId;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'firstName': firstName,
      'lastName': lastName,
      'addressLine1': addressLine1,
      'addressLine2': addressLine2,
      'city': city,
      'state': state,
      'country': country,
      'postCode': postCode,
      'phone': phone,
      'slug': slug,
      'images': images,
      'longitude': longitude,
      'latitude': latitude,
      'published': published,
      'userId': userId,
    };
  }
}

class ProfileAvgOrderByAggregateInput implements _i1.JsonSerializable {
  const ProfileAvgOrderByAggregateInput({
    this.id,
    this.userId,
  });

  final _i1.PrismaNullable<SortOrder> id;

  final _i1.PrismaNullable<SortOrder> userId;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'userId': userId,
    };
  }
}

class ProfileMaxOrderByAggregateInput implements _i1.JsonSerializable {
  const ProfileMaxOrderByAggregateInput({
    this.id,
    this.firstName,
    this.lastName,
    this.addressLine1,
    this.addressLine2,
    this.city,
    this.state,
    this.country,
    this.postCode,
    this.phone,
    this.slug,
    this.images,
    this.longitude,
    this.latitude,
    this.published,
    this.userId,
  });

  final _i1.PrismaNullable<SortOrder> id;

  final _i1.PrismaNullable<SortOrder> firstName;

  final _i1.PrismaNullable<SortOrder> lastName;

  final _i1.PrismaNullable<SortOrder> addressLine1;

  final _i1.PrismaNullable<SortOrder> addressLine2;

  final _i1.PrismaNullable<SortOrder> city;

  final _i1.PrismaNullable<SortOrder> state;

  final _i1.PrismaNullable<SortOrder> country;

  final _i1.PrismaNullable<SortOrder> postCode;

  final _i1.PrismaNullable<SortOrder> phone;

  final _i1.PrismaNullable<SortOrder> slug;

  final _i1.PrismaNullable<SortOrder> images;

  final _i1.PrismaNullable<SortOrder> longitude;

  final _i1.PrismaNullable<SortOrder> latitude;

  final _i1.PrismaNullable<SortOrder> published;

  final _i1.PrismaNullable<SortOrder> userId;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'firstName': firstName,
      'lastName': lastName,
      'addressLine1': addressLine1,
      'addressLine2': addressLine2,
      'city': city,
      'state': state,
      'country': country,
      'postCode': postCode,
      'phone': phone,
      'slug': slug,
      'images': images,
      'longitude': longitude,
      'latitude': latitude,
      'published': published,
      'userId': userId,
    };
  }
}

class ProfileMinOrderByAggregateInput implements _i1.JsonSerializable {
  const ProfileMinOrderByAggregateInput({
    this.id,
    this.firstName,
    this.lastName,
    this.addressLine1,
    this.addressLine2,
    this.city,
    this.state,
    this.country,
    this.postCode,
    this.phone,
    this.slug,
    this.images,
    this.longitude,
    this.latitude,
    this.published,
    this.userId,
  });

  final _i1.PrismaNullable<SortOrder> id;

  final _i1.PrismaNullable<SortOrder> firstName;

  final _i1.PrismaNullable<SortOrder> lastName;

  final _i1.PrismaNullable<SortOrder> addressLine1;

  final _i1.PrismaNullable<SortOrder> addressLine2;

  final _i1.PrismaNullable<SortOrder> city;

  final _i1.PrismaNullable<SortOrder> state;

  final _i1.PrismaNullable<SortOrder> country;

  final _i1.PrismaNullable<SortOrder> postCode;

  final _i1.PrismaNullable<SortOrder> phone;

  final _i1.PrismaNullable<SortOrder> slug;

  final _i1.PrismaNullable<SortOrder> images;

  final _i1.PrismaNullable<SortOrder> longitude;

  final _i1.PrismaNullable<SortOrder> latitude;

  final _i1.PrismaNullable<SortOrder> published;

  final _i1.PrismaNullable<SortOrder> userId;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'firstName': firstName,
      'lastName': lastName,
      'addressLine1': addressLine1,
      'addressLine2': addressLine2,
      'city': city,
      'state': state,
      'country': country,
      'postCode': postCode,
      'phone': phone,
      'slug': slug,
      'images': images,
      'longitude': longitude,
      'latitude': latitude,
      'published': published,
      'userId': userId,
    };
  }
}

class ProfileSumOrderByAggregateInput implements _i1.JsonSerializable {
  const ProfileSumOrderByAggregateInput({
    this.id,
    this.userId,
  });

  final _i1.PrismaNullable<SortOrder> id;

  final _i1.PrismaNullable<SortOrder> userId;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'userId': userId,
    };
  }
}

class BoolWithAggregatesFilter implements _i1.JsonSerializable {
  const BoolWithAggregatesFilter({
    this.equals,
    this.not,
    this.$count,
    this.$min,
    this.$max,
  });

  final _i1.PrismaNullable<bool> equals;

  final _i1.PrismaNullable<NestedBoolWithAggregatesFilter> not;

  final _i1.PrismaNullable<NestedIntFilter> $count;

  final _i1.PrismaNullable<NestedBoolFilter> $min;

  final _i1.PrismaNullable<NestedBoolFilter> $max;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'equals': equals,
      'not': not,
      '_count': $count,
      '_min': $min,
      '_max': $max,
    };
  }
}

class IntNullableWithAggregatesFilter implements _i1.JsonSerializable {
  const IntNullableWithAggregatesFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.not,
    this.$count,
    this.$avg,
    this.$sum,
    this.$min,
    this.$max,
  });

  final _i1.PrismaNullable<_i1.PrismaUnion<int, _i1.PrismaNull>> equals;

  final _i1.PrismaNullable<List<int>> in$;

  final _i1.PrismaNullable<List<int>> notIn;

  final _i1.PrismaNullable<int> lt;

  final _i1.PrismaNullable<int> lte;

  final _i1.PrismaNullable<int> gt;

  final _i1.PrismaNullable<int> gte;

  final _i1.PrismaNullable<NestedIntNullableWithAggregatesFilter> not;

  final _i1.PrismaNullable<NestedIntNullableFilter> $count;

  final _i1.PrismaNullable<NestedFloatNullableFilter> $avg;

  final _i1.PrismaNullable<NestedIntNullableFilter> $sum;

  final _i1.PrismaNullable<NestedIntNullableFilter> $min;

  final _i1.PrismaNullable<NestedIntNullableFilter> $max;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'equals': equals,
      'in': in$,
      'notIn': notIn,
      'lt': lt,
      'lte': lte,
      'gt': gt,
      'gte': gte,
      'not': not,
      '_count': $count,
      '_avg': $avg,
      '_sum': $sum,
      '_min': $min,
      '_max': $max,
    };
  }
}

class PostMetaListRelationFilter implements _i1.JsonSerializable {
  const PostMetaListRelationFilter({
    this.every,
    this.some,
    this.none,
  });

  final _i1.PrismaNullable<PostMetaWhereInput> every;

  final _i1.PrismaNullable<PostMetaWhereInput> some;

  final _i1.PrismaNullable<PostMetaWhereInput> none;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'every': every,
      'some': some,
      'none': none,
    };
  }
}

class CategoryListRelationFilter implements _i1.JsonSerializable {
  const CategoryListRelationFilter({
    this.every,
    this.some,
    this.none,
  });

  final _i1.PrismaNullable<CategoryWhereInput> every;

  final _i1.PrismaNullable<CategoryWhereInput> some;

  final _i1.PrismaNullable<CategoryWhereInput> none;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'every': every,
      'some': some,
      'none': none,
    };
  }
}

class PostMetaOrderByRelationAggregateInput implements _i1.JsonSerializable {
  const PostMetaOrderByRelationAggregateInput({this.$count});

  final _i1.PrismaNullable<SortOrder> $count;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      '_count': $count,
    };
  }
}

class CategoryOrderByRelationAggregateInput implements _i1.JsonSerializable {
  const CategoryOrderByRelationAggregateInput({this.$count});

  final _i1.PrismaNullable<SortOrder> $count;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      '_count': $count,
    };
  }
}

class PostCountOrderByAggregateInput implements _i1.JsonSerializable {
  const PostCountOrderByAggregateInput({
    this.id,
    this.title,
    this.slug,
    this.description,
    this.images,
    this.long_description,
    this.longitude,
    this.latitude,
    this.content,
    this.published,
    this.authorId,
  });

  final _i1.PrismaNullable<SortOrder> id;

  final _i1.PrismaNullable<SortOrder> title;

  final _i1.PrismaNullable<SortOrder> slug;

  final _i1.PrismaNullable<SortOrder> description;

  final _i1.PrismaNullable<SortOrder> images;

  final _i1.PrismaNullable<SortOrder> long_description;

  final _i1.PrismaNullable<SortOrder> longitude;

  final _i1.PrismaNullable<SortOrder> latitude;

  final _i1.PrismaNullable<SortOrder> content;

  final _i1.PrismaNullable<SortOrder> published;

  final _i1.PrismaNullable<SortOrder> authorId;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'title': title,
      'slug': slug,
      'description': description,
      'images': images,
      'long_description': long_description,
      'longitude': longitude,
      'latitude': latitude,
      'content': content,
      'published': published,
      'authorId': authorId,
    };
  }
}

class PostAvgOrderByAggregateInput implements _i1.JsonSerializable {
  const PostAvgOrderByAggregateInput({
    this.id,
    this.authorId,
  });

  final _i1.PrismaNullable<SortOrder> id;

  final _i1.PrismaNullable<SortOrder> authorId;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'authorId': authorId,
    };
  }
}

class PostMaxOrderByAggregateInput implements _i1.JsonSerializable {
  const PostMaxOrderByAggregateInput({
    this.id,
    this.title,
    this.slug,
    this.description,
    this.images,
    this.long_description,
    this.longitude,
    this.latitude,
    this.content,
    this.published,
    this.authorId,
  });

  final _i1.PrismaNullable<SortOrder> id;

  final _i1.PrismaNullable<SortOrder> title;

  final _i1.PrismaNullable<SortOrder> slug;

  final _i1.PrismaNullable<SortOrder> description;

  final _i1.PrismaNullable<SortOrder> images;

  final _i1.PrismaNullable<SortOrder> long_description;

  final _i1.PrismaNullable<SortOrder> longitude;

  final _i1.PrismaNullable<SortOrder> latitude;

  final _i1.PrismaNullable<SortOrder> content;

  final _i1.PrismaNullable<SortOrder> published;

  final _i1.PrismaNullable<SortOrder> authorId;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'title': title,
      'slug': slug,
      'description': description,
      'images': images,
      'long_description': long_description,
      'longitude': longitude,
      'latitude': latitude,
      'content': content,
      'published': published,
      'authorId': authorId,
    };
  }
}

class PostMinOrderByAggregateInput implements _i1.JsonSerializable {
  const PostMinOrderByAggregateInput({
    this.id,
    this.title,
    this.slug,
    this.description,
    this.images,
    this.long_description,
    this.longitude,
    this.latitude,
    this.content,
    this.published,
    this.authorId,
  });

  final _i1.PrismaNullable<SortOrder> id;

  final _i1.PrismaNullable<SortOrder> title;

  final _i1.PrismaNullable<SortOrder> slug;

  final _i1.PrismaNullable<SortOrder> description;

  final _i1.PrismaNullable<SortOrder> images;

  final _i1.PrismaNullable<SortOrder> long_description;

  final _i1.PrismaNullable<SortOrder> longitude;

  final _i1.PrismaNullable<SortOrder> latitude;

  final _i1.PrismaNullable<SortOrder> content;

  final _i1.PrismaNullable<SortOrder> published;

  final _i1.PrismaNullable<SortOrder> authorId;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'title': title,
      'slug': slug,
      'description': description,
      'images': images,
      'long_description': long_description,
      'longitude': longitude,
      'latitude': latitude,
      'content': content,
      'published': published,
      'authorId': authorId,
    };
  }
}

class PostSumOrderByAggregateInput implements _i1.JsonSerializable {
  const PostSumOrderByAggregateInput({
    this.id,
    this.authorId,
  });

  final _i1.PrismaNullable<SortOrder> id;

  final _i1.PrismaNullable<SortOrder> authorId;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'authorId': authorId,
    };
  }
}

class PostRelationFilter implements _i1.JsonSerializable {
  const PostRelationFilter({
    this.is$,
    this.isNot,
  });

  final _i1.PrismaNullable<PostWhereInput> is$;

  final _i1.PrismaNullable<PostWhereInput> isNot;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'is': is$,
      'isNot': isNot,
    };
  }
}

class PostMetaCountOrderByAggregateInput implements _i1.JsonSerializable {
  const PostMetaCountOrderByAggregateInput({
    this.id,
    this.meta_title,
    this.meta_description,
    this.published,
    this.postId,
  });

  final _i1.PrismaNullable<SortOrder> id;

  final _i1.PrismaNullable<SortOrder> meta_title;

  final _i1.PrismaNullable<SortOrder> meta_description;

  final _i1.PrismaNullable<SortOrder> published;

  final _i1.PrismaNullable<SortOrder> postId;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'meta_title': meta_title,
      'meta_description': meta_description,
      'published': published,
      'postId': postId,
    };
  }
}

class PostMetaAvgOrderByAggregateInput implements _i1.JsonSerializable {
  const PostMetaAvgOrderByAggregateInput({
    this.id,
    this.postId,
  });

  final _i1.PrismaNullable<SortOrder> id;

  final _i1.PrismaNullable<SortOrder> postId;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'postId': postId,
    };
  }
}

class PostMetaMaxOrderByAggregateInput implements _i1.JsonSerializable {
  const PostMetaMaxOrderByAggregateInput({
    this.id,
    this.meta_title,
    this.meta_description,
    this.published,
    this.postId,
  });

  final _i1.PrismaNullable<SortOrder> id;

  final _i1.PrismaNullable<SortOrder> meta_title;

  final _i1.PrismaNullable<SortOrder> meta_description;

  final _i1.PrismaNullable<SortOrder> published;

  final _i1.PrismaNullable<SortOrder> postId;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'meta_title': meta_title,
      'meta_description': meta_description,
      'published': published,
      'postId': postId,
    };
  }
}

class PostMetaMinOrderByAggregateInput implements _i1.JsonSerializable {
  const PostMetaMinOrderByAggregateInput({
    this.id,
    this.meta_title,
    this.meta_description,
    this.published,
    this.postId,
  });

  final _i1.PrismaNullable<SortOrder> id;

  final _i1.PrismaNullable<SortOrder> meta_title;

  final _i1.PrismaNullable<SortOrder> meta_description;

  final _i1.PrismaNullable<SortOrder> published;

  final _i1.PrismaNullable<SortOrder> postId;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'meta_title': meta_title,
      'meta_description': meta_description,
      'published': published,
      'postId': postId,
    };
  }
}

class PostMetaSumOrderByAggregateInput implements _i1.JsonSerializable {
  const PostMetaSumOrderByAggregateInput({
    this.id,
    this.postId,
  });

  final _i1.PrismaNullable<SortOrder> id;

  final _i1.PrismaNullable<SortOrder> postId;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'postId': postId,
    };
  }
}

class CategoryRelationFilter implements _i1.JsonSerializable {
  const CategoryRelationFilter({
    this.is$,
    this.isNot,
  });

  final _i1.PrismaNullable<CategoryWhereInput> is$;

  final _i1.PrismaNullable<CategoryWhereInput> isNot;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'is': is$,
      'isNot': isNot,
    };
  }
}

class AmenitiesCountOrderByAggregateInput implements _i1.JsonSerializable {
  const AmenitiesCountOrderByAggregateInput({
    this.id,
    this.name,
    this.slug,
    this.description,
    this.published,
    this.categoryId,
  });

  final _i1.PrismaNullable<SortOrder> id;

  final _i1.PrismaNullable<SortOrder> name;

  final _i1.PrismaNullable<SortOrder> slug;

  final _i1.PrismaNullable<SortOrder> description;

  final _i1.PrismaNullable<SortOrder> published;

  final _i1.PrismaNullable<SortOrder> categoryId;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'name': name,
      'slug': slug,
      'description': description,
      'published': published,
      'categoryId': categoryId,
    };
  }
}

class AmenitiesAvgOrderByAggregateInput implements _i1.JsonSerializable {
  const AmenitiesAvgOrderByAggregateInput({
    this.id,
    this.categoryId,
  });

  final _i1.PrismaNullable<SortOrder> id;

  final _i1.PrismaNullable<SortOrder> categoryId;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'categoryId': categoryId,
    };
  }
}

class AmenitiesMaxOrderByAggregateInput implements _i1.JsonSerializable {
  const AmenitiesMaxOrderByAggregateInput({
    this.id,
    this.name,
    this.slug,
    this.description,
    this.published,
    this.categoryId,
  });

  final _i1.PrismaNullable<SortOrder> id;

  final _i1.PrismaNullable<SortOrder> name;

  final _i1.PrismaNullable<SortOrder> slug;

  final _i1.PrismaNullable<SortOrder> description;

  final _i1.PrismaNullable<SortOrder> published;

  final _i1.PrismaNullable<SortOrder> categoryId;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'name': name,
      'slug': slug,
      'description': description,
      'published': published,
      'categoryId': categoryId,
    };
  }
}

class AmenitiesMinOrderByAggregateInput implements _i1.JsonSerializable {
  const AmenitiesMinOrderByAggregateInput({
    this.id,
    this.name,
    this.slug,
    this.description,
    this.published,
    this.categoryId,
  });

  final _i1.PrismaNullable<SortOrder> id;

  final _i1.PrismaNullable<SortOrder> name;

  final _i1.PrismaNullable<SortOrder> slug;

  final _i1.PrismaNullable<SortOrder> description;

  final _i1.PrismaNullable<SortOrder> published;

  final _i1.PrismaNullable<SortOrder> categoryId;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'name': name,
      'slug': slug,
      'description': description,
      'published': published,
      'categoryId': categoryId,
    };
  }
}

class AmenitiesSumOrderByAggregateInput implements _i1.JsonSerializable {
  const AmenitiesSumOrderByAggregateInput({
    this.id,
    this.categoryId,
  });

  final _i1.PrismaNullable<SortOrder> id;

  final _i1.PrismaNullable<SortOrder> categoryId;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'categoryId': categoryId,
    };
  }
}

class AmenitiesListRelationFilter implements _i1.JsonSerializable {
  const AmenitiesListRelationFilter({
    this.every,
    this.some,
    this.none,
  });

  final _i1.PrismaNullable<AmenitiesWhereInput> every;

  final _i1.PrismaNullable<AmenitiesWhereInput> some;

  final _i1.PrismaNullable<AmenitiesWhereInput> none;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'every': every,
      'some': some,
      'none': none,
    };
  }
}

class AmenitiesOrderByRelationAggregateInput implements _i1.JsonSerializable {
  const AmenitiesOrderByRelationAggregateInput({this.$count});

  final _i1.PrismaNullable<SortOrder> $count;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      '_count': $count,
    };
  }
}

class CategoryCountOrderByAggregateInput implements _i1.JsonSerializable {
  const CategoryCountOrderByAggregateInput({
    this.id,
    this.name,
    this.slug,
    this.description,
    this.published,
    this.postId,
  });

  final _i1.PrismaNullable<SortOrder> id;

  final _i1.PrismaNullable<SortOrder> name;

  final _i1.PrismaNullable<SortOrder> slug;

  final _i1.PrismaNullable<SortOrder> description;

  final _i1.PrismaNullable<SortOrder> published;

  final _i1.PrismaNullable<SortOrder> postId;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'name': name,
      'slug': slug,
      'description': description,
      'published': published,
      'postId': postId,
    };
  }
}

class CategoryAvgOrderByAggregateInput implements _i1.JsonSerializable {
  const CategoryAvgOrderByAggregateInput({
    this.id,
    this.postId,
  });

  final _i1.PrismaNullable<SortOrder> id;

  final _i1.PrismaNullable<SortOrder> postId;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'postId': postId,
    };
  }
}

class CategoryMaxOrderByAggregateInput implements _i1.JsonSerializable {
  const CategoryMaxOrderByAggregateInput({
    this.id,
    this.name,
    this.slug,
    this.description,
    this.published,
    this.postId,
  });

  final _i1.PrismaNullable<SortOrder> id;

  final _i1.PrismaNullable<SortOrder> name;

  final _i1.PrismaNullable<SortOrder> slug;

  final _i1.PrismaNullable<SortOrder> description;

  final _i1.PrismaNullable<SortOrder> published;

  final _i1.PrismaNullable<SortOrder> postId;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'name': name,
      'slug': slug,
      'description': description,
      'published': published,
      'postId': postId,
    };
  }
}

class CategoryMinOrderByAggregateInput implements _i1.JsonSerializable {
  const CategoryMinOrderByAggregateInput({
    this.id,
    this.name,
    this.slug,
    this.description,
    this.published,
    this.postId,
  });

  final _i1.PrismaNullable<SortOrder> id;

  final _i1.PrismaNullable<SortOrder> name;

  final _i1.PrismaNullable<SortOrder> slug;

  final _i1.PrismaNullable<SortOrder> description;

  final _i1.PrismaNullable<SortOrder> published;

  final _i1.PrismaNullable<SortOrder> postId;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'name': name,
      'slug': slug,
      'description': description,
      'published': published,
      'postId': postId,
    };
  }
}

class CategorySumOrderByAggregateInput implements _i1.JsonSerializable {
  const CategorySumOrderByAggregateInput({
    this.id,
    this.postId,
  });

  final _i1.PrismaNullable<SortOrder> id;

  final _i1.PrismaNullable<SortOrder> postId;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'postId': postId,
    };
  }
}

class PostCreateNestedManyWithoutAuthorInput implements _i1.JsonSerializable {
  const PostCreateNestedManyWithoutAuthorInput({
    this.create,
    this.connectOrCreate,
    this.createMany,
    this.connect,
  });

  final _i1.PrismaNullable<PostCreateWithoutAuthorInput> create;

  final _i1.PrismaNullable<PostCreateOrConnectWithoutAuthorInput>
      connectOrCreate;

  final _i1.PrismaNullable<PostCreateManyAuthorInputEnvelope> createMany;

  final _i1.PrismaNullable<PostWhereUniqueInput> connect;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'create': create,
      'connectOrCreate': connectOrCreate,
      'createMany': createMany,
      'connect': connect,
    };
  }
}

class ProfileCreateNestedManyWithoutUserInput implements _i1.JsonSerializable {
  const ProfileCreateNestedManyWithoutUserInput({
    this.create,
    this.connectOrCreate,
    this.createMany,
    this.connect,
  });

  final _i1.PrismaNullable<ProfileCreateWithoutUserInput> create;

  final _i1.PrismaNullable<ProfileCreateOrConnectWithoutUserInput>
      connectOrCreate;

  final _i1.PrismaNullable<ProfileCreateManyUserInputEnvelope> createMany;

  final _i1.PrismaNullable<ProfileWhereUniqueInput> connect;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'create': create,
      'connectOrCreate': connectOrCreate,
      'createMany': createMany,
      'connect': connect,
    };
  }
}

class PostUncheckedCreateNestedManyWithoutAuthorInput
    implements _i1.JsonSerializable {
  const PostUncheckedCreateNestedManyWithoutAuthorInput({
    this.create,
    this.connectOrCreate,
    this.createMany,
    this.connect,
  });

  final _i1.PrismaNullable<PostCreateWithoutAuthorInput> create;

  final _i1.PrismaNullable<PostCreateOrConnectWithoutAuthorInput>
      connectOrCreate;

  final _i1.PrismaNullable<PostCreateManyAuthorInputEnvelope> createMany;

  final _i1.PrismaNullable<PostWhereUniqueInput> connect;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'create': create,
      'connectOrCreate': connectOrCreate,
      'createMany': createMany,
      'connect': connect,
    };
  }
}

class ProfileUncheckedCreateNestedManyWithoutUserInput
    implements _i1.JsonSerializable {
  const ProfileUncheckedCreateNestedManyWithoutUserInput({
    this.create,
    this.connectOrCreate,
    this.createMany,
    this.connect,
  });

  final _i1.PrismaNullable<ProfileCreateWithoutUserInput> create;

  final _i1.PrismaNullable<ProfileCreateOrConnectWithoutUserInput>
      connectOrCreate;

  final _i1.PrismaNullable<ProfileCreateManyUserInputEnvelope> createMany;

  final _i1.PrismaNullable<ProfileWhereUniqueInput> connect;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'create': create,
      'connectOrCreate': connectOrCreate,
      'createMany': createMany,
      'connect': connect,
    };
  }
}

class StringFieldUpdateOperationsInput implements _i1.JsonSerializable {
  const StringFieldUpdateOperationsInput({this.set$});

  final _i1.PrismaNullable<String> set$;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'set': set$,
    };
  }
}

class EnumRoleFieldUpdateOperationsInput implements _i1.JsonSerializable {
  const EnumRoleFieldUpdateOperationsInput({this.set$});

  final _i1.PrismaNullable<Role> set$;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'set': set$,
    };
  }
}

class NullableStringFieldUpdateOperationsInput implements _i1.JsonSerializable {
  const NullableStringFieldUpdateOperationsInput({this.set$});

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> set$;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'set': set$,
    };
  }
}

class PostUpdateManyWithoutAuthorNestedInput implements _i1.JsonSerializable {
  const PostUpdateManyWithoutAuthorNestedInput({
    this.create,
    this.connectOrCreate,
    this.upsert,
    this.createMany,
    this.set$,
    this.disconnect,
    this.delete,
    this.connect,
    this.update,
    this.updateMany,
    this.deleteMany,
  });

  final _i1.PrismaNullable<PostCreateWithoutAuthorInput> create;

  final _i1.PrismaNullable<PostCreateOrConnectWithoutAuthorInput>
      connectOrCreate;

  final _i1.PrismaNullable<PostUpsertWithWhereUniqueWithoutAuthorInput> upsert;

  final _i1.PrismaNullable<PostCreateManyAuthorInputEnvelope> createMany;

  final _i1.PrismaNullable<PostWhereUniqueInput> set$;

  final _i1.PrismaNullable<PostWhereUniqueInput> disconnect;

  final _i1.PrismaNullable<PostWhereUniqueInput> delete;

  final _i1.PrismaNullable<PostWhereUniqueInput> connect;

  final _i1.PrismaNullable<PostUpdateWithWhereUniqueWithoutAuthorInput> update;

  final _i1.PrismaNullable<PostUpdateManyWithWhereWithoutAuthorInput>
      updateMany;

  final _i1.PrismaNullable<PostScalarWhereInput> deleteMany;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'create': create,
      'connectOrCreate': connectOrCreate,
      'upsert': upsert,
      'createMany': createMany,
      'set': set$,
      'disconnect': disconnect,
      'delete': delete,
      'connect': connect,
      'update': update,
      'updateMany': updateMany,
      'deleteMany': deleteMany,
    };
  }
}

class ProfileUpdateManyWithoutUserNestedInput implements _i1.JsonSerializable {
  const ProfileUpdateManyWithoutUserNestedInput({
    this.create,
    this.connectOrCreate,
    this.upsert,
    this.createMany,
    this.set$,
    this.disconnect,
    this.delete,
    this.connect,
    this.update,
    this.updateMany,
    this.deleteMany,
  });

  final _i1.PrismaNullable<ProfileCreateWithoutUserInput> create;

  final _i1.PrismaNullable<ProfileCreateOrConnectWithoutUserInput>
      connectOrCreate;

  final _i1.PrismaNullable<ProfileUpsertWithWhereUniqueWithoutUserInput> upsert;

  final _i1.PrismaNullable<ProfileCreateManyUserInputEnvelope> createMany;

  final _i1.PrismaNullable<ProfileWhereUniqueInput> set$;

  final _i1.PrismaNullable<ProfileWhereUniqueInput> disconnect;

  final _i1.PrismaNullable<ProfileWhereUniqueInput> delete;

  final _i1.PrismaNullable<ProfileWhereUniqueInput> connect;

  final _i1.PrismaNullable<ProfileUpdateWithWhereUniqueWithoutUserInput> update;

  final _i1.PrismaNullable<ProfileUpdateManyWithWhereWithoutUserInput>
      updateMany;

  final _i1.PrismaNullable<ProfileScalarWhereInput> deleteMany;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'create': create,
      'connectOrCreate': connectOrCreate,
      'upsert': upsert,
      'createMany': createMany,
      'set': set$,
      'disconnect': disconnect,
      'delete': delete,
      'connect': connect,
      'update': update,
      'updateMany': updateMany,
      'deleteMany': deleteMany,
    };
  }
}

class IntFieldUpdateOperationsInput implements _i1.JsonSerializable {
  const IntFieldUpdateOperationsInput({
    this.set$,
    this.increment,
    this.decrement,
    this.multiply,
    this.divide,
  });

  final _i1.PrismaNullable<int> set$;

  final _i1.PrismaNullable<int> increment;

  final _i1.PrismaNullable<int> decrement;

  final _i1.PrismaNullable<int> multiply;

  final _i1.PrismaNullable<int> divide;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'set': set$,
      'increment': increment,
      'decrement': decrement,
      'multiply': multiply,
      'divide': divide,
    };
  }
}

class PostUncheckedUpdateManyWithoutAuthorNestedInput
    implements _i1.JsonSerializable {
  const PostUncheckedUpdateManyWithoutAuthorNestedInput({
    this.create,
    this.connectOrCreate,
    this.upsert,
    this.createMany,
    this.set$,
    this.disconnect,
    this.delete,
    this.connect,
    this.update,
    this.updateMany,
    this.deleteMany,
  });

  final _i1.PrismaNullable<PostCreateWithoutAuthorInput> create;

  final _i1.PrismaNullable<PostCreateOrConnectWithoutAuthorInput>
      connectOrCreate;

  final _i1.PrismaNullable<PostUpsertWithWhereUniqueWithoutAuthorInput> upsert;

  final _i1.PrismaNullable<PostCreateManyAuthorInputEnvelope> createMany;

  final _i1.PrismaNullable<PostWhereUniqueInput> set$;

  final _i1.PrismaNullable<PostWhereUniqueInput> disconnect;

  final _i1.PrismaNullable<PostWhereUniqueInput> delete;

  final _i1.PrismaNullable<PostWhereUniqueInput> connect;

  final _i1.PrismaNullable<PostUpdateWithWhereUniqueWithoutAuthorInput> update;

  final _i1.PrismaNullable<PostUpdateManyWithWhereWithoutAuthorInput>
      updateMany;

  final _i1.PrismaNullable<PostScalarWhereInput> deleteMany;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'create': create,
      'connectOrCreate': connectOrCreate,
      'upsert': upsert,
      'createMany': createMany,
      'set': set$,
      'disconnect': disconnect,
      'delete': delete,
      'connect': connect,
      'update': update,
      'updateMany': updateMany,
      'deleteMany': deleteMany,
    };
  }
}

class ProfileUncheckedUpdateManyWithoutUserNestedInput
    implements _i1.JsonSerializable {
  const ProfileUncheckedUpdateManyWithoutUserNestedInput({
    this.create,
    this.connectOrCreate,
    this.upsert,
    this.createMany,
    this.set$,
    this.disconnect,
    this.delete,
    this.connect,
    this.update,
    this.updateMany,
    this.deleteMany,
  });

  final _i1.PrismaNullable<ProfileCreateWithoutUserInput> create;

  final _i1.PrismaNullable<ProfileCreateOrConnectWithoutUserInput>
      connectOrCreate;

  final _i1.PrismaNullable<ProfileUpsertWithWhereUniqueWithoutUserInput> upsert;

  final _i1.PrismaNullable<ProfileCreateManyUserInputEnvelope> createMany;

  final _i1.PrismaNullable<ProfileWhereUniqueInput> set$;

  final _i1.PrismaNullable<ProfileWhereUniqueInput> disconnect;

  final _i1.PrismaNullable<ProfileWhereUniqueInput> delete;

  final _i1.PrismaNullable<ProfileWhereUniqueInput> connect;

  final _i1.PrismaNullable<ProfileUpdateWithWhereUniqueWithoutUserInput> update;

  final _i1.PrismaNullable<ProfileUpdateManyWithWhereWithoutUserInput>
      updateMany;

  final _i1.PrismaNullable<ProfileScalarWhereInput> deleteMany;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'create': create,
      'connectOrCreate': connectOrCreate,
      'upsert': upsert,
      'createMany': createMany,
      'set': set$,
      'disconnect': disconnect,
      'delete': delete,
      'connect': connect,
      'update': update,
      'updateMany': updateMany,
      'deleteMany': deleteMany,
    };
  }
}

class UsersCreateNestedOneWithoutProfileInput implements _i1.JsonSerializable {
  const UsersCreateNestedOneWithoutProfileInput({
    this.create,
    this.connectOrCreate,
    this.connect,
  });

  final _i1.PrismaNullable<UsersCreateWithoutProfileInput> create;

  final _i1.PrismaNullable<UsersCreateOrConnectWithoutProfileInput>
      connectOrCreate;

  final _i1.PrismaNullable<UsersWhereUniqueInput> connect;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'create': create,
      'connectOrCreate': connectOrCreate,
      'connect': connect,
    };
  }
}

class BoolFieldUpdateOperationsInput implements _i1.JsonSerializable {
  const BoolFieldUpdateOperationsInput({this.set$});

  final _i1.PrismaNullable<bool> set$;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'set': set$,
    };
  }
}

class UsersUpdateOneWithoutProfileNestedInput implements _i1.JsonSerializable {
  const UsersUpdateOneWithoutProfileNestedInput({
    this.create,
    this.connectOrCreate,
    this.upsert,
    this.disconnect,
    this.delete,
    this.connect,
    this.update,
  });

  final _i1.PrismaNullable<UsersCreateWithoutProfileInput> create;

  final _i1.PrismaNullable<UsersCreateOrConnectWithoutProfileInput>
      connectOrCreate;

  final _i1.PrismaNullable<UsersUpsertWithoutProfileInput> upsert;

  final _i1.PrismaNullable<bool> disconnect;

  final _i1.PrismaNullable<bool> delete;

  final _i1.PrismaNullable<UsersWhereUniqueInput> connect;

  final _i1.PrismaNullable<UsersUpdateWithoutProfileInput> update;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'create': create,
      'connectOrCreate': connectOrCreate,
      'upsert': upsert,
      'disconnect': disconnect,
      'delete': delete,
      'connect': connect,
      'update': update,
    };
  }
}

class NullableIntFieldUpdateOperationsInput implements _i1.JsonSerializable {
  const NullableIntFieldUpdateOperationsInput({
    this.set$,
    this.increment,
    this.decrement,
    this.multiply,
    this.divide,
  });

  final _i1.PrismaNullable<_i1.PrismaUnion<int, _i1.PrismaNull>> set$;

  final _i1.PrismaNullable<int> increment;

  final _i1.PrismaNullable<int> decrement;

  final _i1.PrismaNullable<int> multiply;

  final _i1.PrismaNullable<int> divide;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'set': set$,
      'increment': increment,
      'decrement': decrement,
      'multiply': multiply,
      'divide': divide,
    };
  }
}

class UsersCreateNestedOneWithoutPostsInput implements _i1.JsonSerializable {
  const UsersCreateNestedOneWithoutPostsInput({
    this.create,
    this.connectOrCreate,
    this.connect,
  });

  final _i1.PrismaNullable<UsersCreateWithoutPostsInput> create;

  final _i1.PrismaNullable<UsersCreateOrConnectWithoutPostsInput>
      connectOrCreate;

  final _i1.PrismaNullable<UsersWhereUniqueInput> connect;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'create': create,
      'connectOrCreate': connectOrCreate,
      'connect': connect,
    };
  }
}

class PostMetaCreateNestedManyWithoutPostInput implements _i1.JsonSerializable {
  const PostMetaCreateNestedManyWithoutPostInput({
    this.create,
    this.connectOrCreate,
    this.createMany,
    this.connect,
  });

  final _i1.PrismaNullable<PostMetaCreateWithoutPostInput> create;

  final _i1.PrismaNullable<PostMetaCreateOrConnectWithoutPostInput>
      connectOrCreate;

  final _i1.PrismaNullable<PostMetaCreateManyPostInputEnvelope> createMany;

  final _i1.PrismaNullable<PostMetaWhereUniqueInput> connect;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'create': create,
      'connectOrCreate': connectOrCreate,
      'createMany': createMany,
      'connect': connect,
    };
  }
}

class CategoryCreateNestedManyWithoutPostInput implements _i1.JsonSerializable {
  const CategoryCreateNestedManyWithoutPostInput({
    this.create,
    this.connectOrCreate,
    this.createMany,
    this.connect,
  });

  final _i1.PrismaNullable<CategoryCreateWithoutPostInput> create;

  final _i1.PrismaNullable<CategoryCreateOrConnectWithoutPostInput>
      connectOrCreate;

  final _i1.PrismaNullable<CategoryCreateManyPostInputEnvelope> createMany;

  final _i1.PrismaNullable<CategoryWhereUniqueInput> connect;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'create': create,
      'connectOrCreate': connectOrCreate,
      'createMany': createMany,
      'connect': connect,
    };
  }
}

class PostMetaUncheckedCreateNestedManyWithoutPostInput
    implements _i1.JsonSerializable {
  const PostMetaUncheckedCreateNestedManyWithoutPostInput({
    this.create,
    this.connectOrCreate,
    this.createMany,
    this.connect,
  });

  final _i1.PrismaNullable<PostMetaCreateWithoutPostInput> create;

  final _i1.PrismaNullable<PostMetaCreateOrConnectWithoutPostInput>
      connectOrCreate;

  final _i1.PrismaNullable<PostMetaCreateManyPostInputEnvelope> createMany;

  final _i1.PrismaNullable<PostMetaWhereUniqueInput> connect;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'create': create,
      'connectOrCreate': connectOrCreate,
      'createMany': createMany,
      'connect': connect,
    };
  }
}

class CategoryUncheckedCreateNestedManyWithoutPostInput
    implements _i1.JsonSerializable {
  const CategoryUncheckedCreateNestedManyWithoutPostInput({
    this.create,
    this.connectOrCreate,
    this.createMany,
    this.connect,
  });

  final _i1.PrismaNullable<CategoryCreateWithoutPostInput> create;

  final _i1.PrismaNullable<CategoryCreateOrConnectWithoutPostInput>
      connectOrCreate;

  final _i1.PrismaNullable<CategoryCreateManyPostInputEnvelope> createMany;

  final _i1.PrismaNullable<CategoryWhereUniqueInput> connect;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'create': create,
      'connectOrCreate': connectOrCreate,
      'createMany': createMany,
      'connect': connect,
    };
  }
}

class UsersUpdateOneRequiredWithoutPostsNestedInput
    implements _i1.JsonSerializable {
  const UsersUpdateOneRequiredWithoutPostsNestedInput({
    this.create,
    this.connectOrCreate,
    this.upsert,
    this.connect,
    this.update,
  });

  final _i1.PrismaNullable<UsersCreateWithoutPostsInput> create;

  final _i1.PrismaNullable<UsersCreateOrConnectWithoutPostsInput>
      connectOrCreate;

  final _i1.PrismaNullable<UsersUpsertWithoutPostsInput> upsert;

  final _i1.PrismaNullable<UsersWhereUniqueInput> connect;

  final _i1.PrismaNullable<UsersUpdateWithoutPostsInput> update;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'create': create,
      'connectOrCreate': connectOrCreate,
      'upsert': upsert,
      'connect': connect,
      'update': update,
    };
  }
}

class PostMetaUpdateManyWithoutPostNestedInput implements _i1.JsonSerializable {
  const PostMetaUpdateManyWithoutPostNestedInput({
    this.create,
    this.connectOrCreate,
    this.upsert,
    this.createMany,
    this.set$,
    this.disconnect,
    this.delete,
    this.connect,
    this.update,
    this.updateMany,
    this.deleteMany,
  });

  final _i1.PrismaNullable<PostMetaCreateWithoutPostInput> create;

  final _i1.PrismaNullable<PostMetaCreateOrConnectWithoutPostInput>
      connectOrCreate;

  final _i1.PrismaNullable<PostMetaUpsertWithWhereUniqueWithoutPostInput>
      upsert;

  final _i1.PrismaNullable<PostMetaCreateManyPostInputEnvelope> createMany;

  final _i1.PrismaNullable<PostMetaWhereUniqueInput> set$;

  final _i1.PrismaNullable<PostMetaWhereUniqueInput> disconnect;

  final _i1.PrismaNullable<PostMetaWhereUniqueInput> delete;

  final _i1.PrismaNullable<PostMetaWhereUniqueInput> connect;

  final _i1.PrismaNullable<PostMetaUpdateWithWhereUniqueWithoutPostInput>
      update;

  final _i1.PrismaNullable<PostMetaUpdateManyWithWhereWithoutPostInput>
      updateMany;

  final _i1.PrismaNullable<PostMetaScalarWhereInput> deleteMany;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'create': create,
      'connectOrCreate': connectOrCreate,
      'upsert': upsert,
      'createMany': createMany,
      'set': set$,
      'disconnect': disconnect,
      'delete': delete,
      'connect': connect,
      'update': update,
      'updateMany': updateMany,
      'deleteMany': deleteMany,
    };
  }
}

class CategoryUpdateManyWithoutPostNestedInput implements _i1.JsonSerializable {
  const CategoryUpdateManyWithoutPostNestedInput({
    this.create,
    this.connectOrCreate,
    this.upsert,
    this.createMany,
    this.set$,
    this.disconnect,
    this.delete,
    this.connect,
    this.update,
    this.updateMany,
    this.deleteMany,
  });

  final _i1.PrismaNullable<CategoryCreateWithoutPostInput> create;

  final _i1.PrismaNullable<CategoryCreateOrConnectWithoutPostInput>
      connectOrCreate;

  final _i1.PrismaNullable<CategoryUpsertWithWhereUniqueWithoutPostInput>
      upsert;

  final _i1.PrismaNullable<CategoryCreateManyPostInputEnvelope> createMany;

  final _i1.PrismaNullable<CategoryWhereUniqueInput> set$;

  final _i1.PrismaNullable<CategoryWhereUniqueInput> disconnect;

  final _i1.PrismaNullable<CategoryWhereUniqueInput> delete;

  final _i1.PrismaNullable<CategoryWhereUniqueInput> connect;

  final _i1.PrismaNullable<CategoryUpdateWithWhereUniqueWithoutPostInput>
      update;

  final _i1.PrismaNullable<CategoryUpdateManyWithWhereWithoutPostInput>
      updateMany;

  final _i1.PrismaNullable<CategoryScalarWhereInput> deleteMany;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'create': create,
      'connectOrCreate': connectOrCreate,
      'upsert': upsert,
      'createMany': createMany,
      'set': set$,
      'disconnect': disconnect,
      'delete': delete,
      'connect': connect,
      'update': update,
      'updateMany': updateMany,
      'deleteMany': deleteMany,
    };
  }
}

class PostMetaUncheckedUpdateManyWithoutPostNestedInput
    implements _i1.JsonSerializable {
  const PostMetaUncheckedUpdateManyWithoutPostNestedInput({
    this.create,
    this.connectOrCreate,
    this.upsert,
    this.createMany,
    this.set$,
    this.disconnect,
    this.delete,
    this.connect,
    this.update,
    this.updateMany,
    this.deleteMany,
  });

  final _i1.PrismaNullable<PostMetaCreateWithoutPostInput> create;

  final _i1.PrismaNullable<PostMetaCreateOrConnectWithoutPostInput>
      connectOrCreate;

  final _i1.PrismaNullable<PostMetaUpsertWithWhereUniqueWithoutPostInput>
      upsert;

  final _i1.PrismaNullable<PostMetaCreateManyPostInputEnvelope> createMany;

  final _i1.PrismaNullable<PostMetaWhereUniqueInput> set$;

  final _i1.PrismaNullable<PostMetaWhereUniqueInput> disconnect;

  final _i1.PrismaNullable<PostMetaWhereUniqueInput> delete;

  final _i1.PrismaNullable<PostMetaWhereUniqueInput> connect;

  final _i1.PrismaNullable<PostMetaUpdateWithWhereUniqueWithoutPostInput>
      update;

  final _i1.PrismaNullable<PostMetaUpdateManyWithWhereWithoutPostInput>
      updateMany;

  final _i1.PrismaNullable<PostMetaScalarWhereInput> deleteMany;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'create': create,
      'connectOrCreate': connectOrCreate,
      'upsert': upsert,
      'createMany': createMany,
      'set': set$,
      'disconnect': disconnect,
      'delete': delete,
      'connect': connect,
      'update': update,
      'updateMany': updateMany,
      'deleteMany': deleteMany,
    };
  }
}

class CategoryUncheckedUpdateManyWithoutPostNestedInput
    implements _i1.JsonSerializable {
  const CategoryUncheckedUpdateManyWithoutPostNestedInput({
    this.create,
    this.connectOrCreate,
    this.upsert,
    this.createMany,
    this.set$,
    this.disconnect,
    this.delete,
    this.connect,
    this.update,
    this.updateMany,
    this.deleteMany,
  });

  final _i1.PrismaNullable<CategoryCreateWithoutPostInput> create;

  final _i1.PrismaNullable<CategoryCreateOrConnectWithoutPostInput>
      connectOrCreate;

  final _i1.PrismaNullable<CategoryUpsertWithWhereUniqueWithoutPostInput>
      upsert;

  final _i1.PrismaNullable<CategoryCreateManyPostInputEnvelope> createMany;

  final _i1.PrismaNullable<CategoryWhereUniqueInput> set$;

  final _i1.PrismaNullable<CategoryWhereUniqueInput> disconnect;

  final _i1.PrismaNullable<CategoryWhereUniqueInput> delete;

  final _i1.PrismaNullable<CategoryWhereUniqueInput> connect;

  final _i1.PrismaNullable<CategoryUpdateWithWhereUniqueWithoutPostInput>
      update;

  final _i1.PrismaNullable<CategoryUpdateManyWithWhereWithoutPostInput>
      updateMany;

  final _i1.PrismaNullable<CategoryScalarWhereInput> deleteMany;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'create': create,
      'connectOrCreate': connectOrCreate,
      'upsert': upsert,
      'createMany': createMany,
      'set': set$,
      'disconnect': disconnect,
      'delete': delete,
      'connect': connect,
      'update': update,
      'updateMany': updateMany,
      'deleteMany': deleteMany,
    };
  }
}

class PostCreateNestedOneWithoutPostmetaInput implements _i1.JsonSerializable {
  const PostCreateNestedOneWithoutPostmetaInput({
    this.create,
    this.connectOrCreate,
    this.connect,
  });

  final _i1.PrismaNullable<PostCreateWithoutPostmetaInput> create;

  final _i1.PrismaNullable<PostCreateOrConnectWithoutPostmetaInput>
      connectOrCreate;

  final _i1.PrismaNullable<PostWhereUniqueInput> connect;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'create': create,
      'connectOrCreate': connectOrCreate,
      'connect': connect,
    };
  }
}

class PostUpdateOneRequiredWithoutPostmetaNestedInput
    implements _i1.JsonSerializable {
  const PostUpdateOneRequiredWithoutPostmetaNestedInput({
    this.create,
    this.connectOrCreate,
    this.upsert,
    this.connect,
    this.update,
  });

  final _i1.PrismaNullable<PostCreateWithoutPostmetaInput> create;

  final _i1.PrismaNullable<PostCreateOrConnectWithoutPostmetaInput>
      connectOrCreate;

  final _i1.PrismaNullable<PostUpsertWithoutPostmetaInput> upsert;

  final _i1.PrismaNullable<PostWhereUniqueInput> connect;

  final _i1.PrismaNullable<PostUpdateWithoutPostmetaInput> update;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'create': create,
      'connectOrCreate': connectOrCreate,
      'upsert': upsert,
      'connect': connect,
      'update': update,
    };
  }
}

class CategoryCreateNestedOneWithoutAmenitiesInput
    implements _i1.JsonSerializable {
  const CategoryCreateNestedOneWithoutAmenitiesInput({
    this.create,
    this.connectOrCreate,
    this.connect,
  });

  final _i1.PrismaNullable<CategoryCreateWithoutAmenitiesInput> create;

  final _i1.PrismaNullable<CategoryCreateOrConnectWithoutAmenitiesInput>
      connectOrCreate;

  final _i1.PrismaNullable<CategoryWhereUniqueInput> connect;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'create': create,
      'connectOrCreate': connectOrCreate,
      'connect': connect,
    };
  }
}

class CategoryUpdateOneRequiredWithoutAmenitiesNestedInput
    implements _i1.JsonSerializable {
  const CategoryUpdateOneRequiredWithoutAmenitiesNestedInput({
    this.create,
    this.connectOrCreate,
    this.upsert,
    this.connect,
    this.update,
  });

  final _i1.PrismaNullable<CategoryCreateWithoutAmenitiesInput> create;

  final _i1.PrismaNullable<CategoryCreateOrConnectWithoutAmenitiesInput>
      connectOrCreate;

  final _i1.PrismaNullable<CategoryUpsertWithoutAmenitiesInput> upsert;

  final _i1.PrismaNullable<CategoryWhereUniqueInput> connect;

  final _i1.PrismaNullable<CategoryUpdateWithoutAmenitiesInput> update;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'create': create,
      'connectOrCreate': connectOrCreate,
      'upsert': upsert,
      'connect': connect,
      'update': update,
    };
  }
}

class AmenitiesCreateNestedManyWithoutCategoryInput
    implements _i1.JsonSerializable {
  const AmenitiesCreateNestedManyWithoutCategoryInput({
    this.create,
    this.connectOrCreate,
    this.createMany,
    this.connect,
  });

  final _i1.PrismaNullable<AmenitiesCreateWithoutCategoryInput> create;

  final _i1.PrismaNullable<AmenitiesCreateOrConnectWithoutCategoryInput>
      connectOrCreate;

  final _i1.PrismaNullable<AmenitiesCreateManyCategoryInputEnvelope> createMany;

  final _i1.PrismaNullable<AmenitiesWhereUniqueInput> connect;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'create': create,
      'connectOrCreate': connectOrCreate,
      'createMany': createMany,
      'connect': connect,
    };
  }
}

class PostCreateNestedOneWithoutCategoryInput implements _i1.JsonSerializable {
  const PostCreateNestedOneWithoutCategoryInput({
    this.create,
    this.connectOrCreate,
    this.connect,
  });

  final _i1.PrismaNullable<PostCreateWithoutCategoryInput> create;

  final _i1.PrismaNullable<PostCreateOrConnectWithoutCategoryInput>
      connectOrCreate;

  final _i1.PrismaNullable<PostWhereUniqueInput> connect;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'create': create,
      'connectOrCreate': connectOrCreate,
      'connect': connect,
    };
  }
}

class AmenitiesUncheckedCreateNestedManyWithoutCategoryInput
    implements _i1.JsonSerializable {
  const AmenitiesUncheckedCreateNestedManyWithoutCategoryInput({
    this.create,
    this.connectOrCreate,
    this.createMany,
    this.connect,
  });

  final _i1.PrismaNullable<AmenitiesCreateWithoutCategoryInput> create;

  final _i1.PrismaNullable<AmenitiesCreateOrConnectWithoutCategoryInput>
      connectOrCreate;

  final _i1.PrismaNullable<AmenitiesCreateManyCategoryInputEnvelope> createMany;

  final _i1.PrismaNullable<AmenitiesWhereUniqueInput> connect;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'create': create,
      'connectOrCreate': connectOrCreate,
      'createMany': createMany,
      'connect': connect,
    };
  }
}

class AmenitiesUpdateManyWithoutCategoryNestedInput
    implements _i1.JsonSerializable {
  const AmenitiesUpdateManyWithoutCategoryNestedInput({
    this.create,
    this.connectOrCreate,
    this.upsert,
    this.createMany,
    this.set$,
    this.disconnect,
    this.delete,
    this.connect,
    this.update,
    this.updateMany,
    this.deleteMany,
  });

  final _i1.PrismaNullable<AmenitiesCreateWithoutCategoryInput> create;

  final _i1.PrismaNullable<AmenitiesCreateOrConnectWithoutCategoryInput>
      connectOrCreate;

  final _i1.PrismaNullable<AmenitiesUpsertWithWhereUniqueWithoutCategoryInput>
      upsert;

  final _i1.PrismaNullable<AmenitiesCreateManyCategoryInputEnvelope> createMany;

  final _i1.PrismaNullable<AmenitiesWhereUniqueInput> set$;

  final _i1.PrismaNullable<AmenitiesWhereUniqueInput> disconnect;

  final _i1.PrismaNullable<AmenitiesWhereUniqueInput> delete;

  final _i1.PrismaNullable<AmenitiesWhereUniqueInput> connect;

  final _i1.PrismaNullable<AmenitiesUpdateWithWhereUniqueWithoutCategoryInput>
      update;

  final _i1.PrismaNullable<AmenitiesUpdateManyWithWhereWithoutCategoryInput>
      updateMany;

  final _i1.PrismaNullable<AmenitiesScalarWhereInput> deleteMany;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'create': create,
      'connectOrCreate': connectOrCreate,
      'upsert': upsert,
      'createMany': createMany,
      'set': set$,
      'disconnect': disconnect,
      'delete': delete,
      'connect': connect,
      'update': update,
      'updateMany': updateMany,
      'deleteMany': deleteMany,
    };
  }
}

class PostUpdateOneRequiredWithoutCategoryNestedInput
    implements _i1.JsonSerializable {
  const PostUpdateOneRequiredWithoutCategoryNestedInput({
    this.create,
    this.connectOrCreate,
    this.upsert,
    this.connect,
    this.update,
  });

  final _i1.PrismaNullable<PostCreateWithoutCategoryInput> create;

  final _i1.PrismaNullable<PostCreateOrConnectWithoutCategoryInput>
      connectOrCreate;

  final _i1.PrismaNullable<PostUpsertWithoutCategoryInput> upsert;

  final _i1.PrismaNullable<PostWhereUniqueInput> connect;

  final _i1.PrismaNullable<PostUpdateWithoutCategoryInput> update;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'create': create,
      'connectOrCreate': connectOrCreate,
      'upsert': upsert,
      'connect': connect,
      'update': update,
    };
  }
}

class AmenitiesUncheckedUpdateManyWithoutCategoryNestedInput
    implements _i1.JsonSerializable {
  const AmenitiesUncheckedUpdateManyWithoutCategoryNestedInput({
    this.create,
    this.connectOrCreate,
    this.upsert,
    this.createMany,
    this.set$,
    this.disconnect,
    this.delete,
    this.connect,
    this.update,
    this.updateMany,
    this.deleteMany,
  });

  final _i1.PrismaNullable<AmenitiesCreateWithoutCategoryInput> create;

  final _i1.PrismaNullable<AmenitiesCreateOrConnectWithoutCategoryInput>
      connectOrCreate;

  final _i1.PrismaNullable<AmenitiesUpsertWithWhereUniqueWithoutCategoryInput>
      upsert;

  final _i1.PrismaNullable<AmenitiesCreateManyCategoryInputEnvelope> createMany;

  final _i1.PrismaNullable<AmenitiesWhereUniqueInput> set$;

  final _i1.PrismaNullable<AmenitiesWhereUniqueInput> disconnect;

  final _i1.PrismaNullable<AmenitiesWhereUniqueInput> delete;

  final _i1.PrismaNullable<AmenitiesWhereUniqueInput> connect;

  final _i1.PrismaNullable<AmenitiesUpdateWithWhereUniqueWithoutCategoryInput>
      update;

  final _i1.PrismaNullable<AmenitiesUpdateManyWithWhereWithoutCategoryInput>
      updateMany;

  final _i1.PrismaNullable<AmenitiesScalarWhereInput> deleteMany;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'create': create,
      'connectOrCreate': connectOrCreate,
      'upsert': upsert,
      'createMany': createMany,
      'set': set$,
      'disconnect': disconnect,
      'delete': delete,
      'connect': connect,
      'update': update,
      'updateMany': updateMany,
      'deleteMany': deleteMany,
    };
  }
}

class NestedIntFilter implements _i1.JsonSerializable {
  const NestedIntFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.not,
  });

  final _i1.PrismaNullable<int> equals;

  final _i1.PrismaNullable<List<int>> in$;

  final _i1.PrismaNullable<List<int>> notIn;

  final _i1.PrismaNullable<int> lt;

  final _i1.PrismaNullable<int> lte;

  final _i1.PrismaNullable<int> gt;

  final _i1.PrismaNullable<int> gte;

  final _i1.PrismaNullable<NestedIntFilter> not;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'equals': equals,
      'in': in$,
      'notIn': notIn,
      'lt': lt,
      'lte': lte,
      'gt': gt,
      'gte': gte,
      'not': not,
    };
  }
}

class NestedStringFilter implements _i1.JsonSerializable {
  const NestedStringFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.contains,
    this.startsWith,
    this.endsWith,
    this.not,
  });

  final _i1.PrismaNullable<String> equals;

  final _i1.PrismaNullable<List<String>> in$;

  final _i1.PrismaNullable<List<String>> notIn;

  final _i1.PrismaNullable<String> lt;

  final _i1.PrismaNullable<String> lte;

  final _i1.PrismaNullable<String> gt;

  final _i1.PrismaNullable<String> gte;

  final _i1.PrismaNullable<String> contains;

  final _i1.PrismaNullable<String> startsWith;

  final _i1.PrismaNullable<String> endsWith;

  final _i1.PrismaNullable<NestedStringFilter> not;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'equals': equals,
      'in': in$,
      'notIn': notIn,
      'lt': lt,
      'lte': lte,
      'gt': gt,
      'gte': gte,
      'contains': contains,
      'startsWith': startsWith,
      'endsWith': endsWith,
      'not': not,
    };
  }
}

class NestedEnumRoleFilter implements _i1.JsonSerializable {
  const NestedEnumRoleFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.not,
  });

  final _i1.PrismaNullable<Role> equals;

  final _i1.PrismaNullable<List<Role>> in$;

  final _i1.PrismaNullable<List<Role>> notIn;

  final _i1.PrismaNullable<NestedEnumRoleFilter> not;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'equals': equals,
      'in': in$,
      'notIn': notIn,
      'not': not,
    };
  }
}

class NestedStringNullableFilter implements _i1.JsonSerializable {
  const NestedStringNullableFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.contains,
    this.startsWith,
    this.endsWith,
    this.not,
  });

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> equals;

  final _i1.PrismaNullable<List<String>> in$;

  final _i1.PrismaNullable<List<String>> notIn;

  final _i1.PrismaNullable<String> lt;

  final _i1.PrismaNullable<String> lte;

  final _i1.PrismaNullable<String> gt;

  final _i1.PrismaNullable<String> gte;

  final _i1.PrismaNullable<String> contains;

  final _i1.PrismaNullable<String> startsWith;

  final _i1.PrismaNullable<String> endsWith;

  final _i1.PrismaNullable<NestedStringNullableFilter> not;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'equals': equals,
      'in': in$,
      'notIn': notIn,
      'lt': lt,
      'lte': lte,
      'gt': gt,
      'gte': gte,
      'contains': contains,
      'startsWith': startsWith,
      'endsWith': endsWith,
      'not': not,
    };
  }
}

class NestedIntWithAggregatesFilter implements _i1.JsonSerializable {
  const NestedIntWithAggregatesFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.not,
    this.$count,
    this.$avg,
    this.$sum,
    this.$min,
    this.$max,
  });

  final _i1.PrismaNullable<int> equals;

  final _i1.PrismaNullable<List<int>> in$;

  final _i1.PrismaNullable<List<int>> notIn;

  final _i1.PrismaNullable<int> lt;

  final _i1.PrismaNullable<int> lte;

  final _i1.PrismaNullable<int> gt;

  final _i1.PrismaNullable<int> gte;

  final _i1.PrismaNullable<NestedIntWithAggregatesFilter> not;

  final _i1.PrismaNullable<NestedIntFilter> $count;

  final _i1.PrismaNullable<NestedFloatFilter> $avg;

  final _i1.PrismaNullable<NestedIntFilter> $sum;

  final _i1.PrismaNullable<NestedIntFilter> $min;

  final _i1.PrismaNullable<NestedIntFilter> $max;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'equals': equals,
      'in': in$,
      'notIn': notIn,
      'lt': lt,
      'lte': lte,
      'gt': gt,
      'gte': gte,
      'not': not,
      '_count': $count,
      '_avg': $avg,
      '_sum': $sum,
      '_min': $min,
      '_max': $max,
    };
  }
}

class NestedFloatFilter implements _i1.JsonSerializable {
  const NestedFloatFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.not,
  });

  final _i1.PrismaNullable<double> equals;

  final _i1.PrismaNullable<List<double>> in$;

  final _i1.PrismaNullable<List<double>> notIn;

  final _i1.PrismaNullable<double> lt;

  final _i1.PrismaNullable<double> lte;

  final _i1.PrismaNullable<double> gt;

  final _i1.PrismaNullable<double> gte;

  final _i1.PrismaNullable<NestedFloatFilter> not;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'equals': equals,
      'in': in$,
      'notIn': notIn,
      'lt': lt,
      'lte': lte,
      'gt': gt,
      'gte': gte,
      'not': not,
    };
  }
}

class NestedStringWithAggregatesFilter implements _i1.JsonSerializable {
  const NestedStringWithAggregatesFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.contains,
    this.startsWith,
    this.endsWith,
    this.not,
    this.$count,
    this.$min,
    this.$max,
  });

  final _i1.PrismaNullable<String> equals;

  final _i1.PrismaNullable<List<String>> in$;

  final _i1.PrismaNullable<List<String>> notIn;

  final _i1.PrismaNullable<String> lt;

  final _i1.PrismaNullable<String> lte;

  final _i1.PrismaNullable<String> gt;

  final _i1.PrismaNullable<String> gte;

  final _i1.PrismaNullable<String> contains;

  final _i1.PrismaNullable<String> startsWith;

  final _i1.PrismaNullable<String> endsWith;

  final _i1.PrismaNullable<NestedStringWithAggregatesFilter> not;

  final _i1.PrismaNullable<NestedIntFilter> $count;

  final _i1.PrismaNullable<NestedStringFilter> $min;

  final _i1.PrismaNullable<NestedStringFilter> $max;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'equals': equals,
      'in': in$,
      'notIn': notIn,
      'lt': lt,
      'lte': lte,
      'gt': gt,
      'gte': gte,
      'contains': contains,
      'startsWith': startsWith,
      'endsWith': endsWith,
      'not': not,
      '_count': $count,
      '_min': $min,
      '_max': $max,
    };
  }
}

class NestedEnumRoleWithAggregatesFilter implements _i1.JsonSerializable {
  const NestedEnumRoleWithAggregatesFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.not,
    this.$count,
    this.$min,
    this.$max,
  });

  final _i1.PrismaNullable<Role> equals;

  final _i1.PrismaNullable<List<Role>> in$;

  final _i1.PrismaNullable<List<Role>> notIn;

  final _i1.PrismaNullable<NestedEnumRoleWithAggregatesFilter> not;

  final _i1.PrismaNullable<NestedIntFilter> $count;

  final _i1.PrismaNullable<NestedEnumRoleFilter> $min;

  final _i1.PrismaNullable<NestedEnumRoleFilter> $max;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'equals': equals,
      'in': in$,
      'notIn': notIn,
      'not': not,
      '_count': $count,
      '_min': $min,
      '_max': $max,
    };
  }
}

class NestedStringNullableWithAggregatesFilter implements _i1.JsonSerializable {
  const NestedStringNullableWithAggregatesFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.contains,
    this.startsWith,
    this.endsWith,
    this.not,
    this.$count,
    this.$min,
    this.$max,
  });

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> equals;

  final _i1.PrismaNullable<List<String>> in$;

  final _i1.PrismaNullable<List<String>> notIn;

  final _i1.PrismaNullable<String> lt;

  final _i1.PrismaNullable<String> lte;

  final _i1.PrismaNullable<String> gt;

  final _i1.PrismaNullable<String> gte;

  final _i1.PrismaNullable<String> contains;

  final _i1.PrismaNullable<String> startsWith;

  final _i1.PrismaNullable<String> endsWith;

  final _i1.PrismaNullable<NestedStringNullableWithAggregatesFilter> not;

  final _i1.PrismaNullable<NestedIntNullableFilter> $count;

  final _i1.PrismaNullable<NestedStringNullableFilter> $min;

  final _i1.PrismaNullable<NestedStringNullableFilter> $max;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'equals': equals,
      'in': in$,
      'notIn': notIn,
      'lt': lt,
      'lte': lte,
      'gt': gt,
      'gte': gte,
      'contains': contains,
      'startsWith': startsWith,
      'endsWith': endsWith,
      'not': not,
      '_count': $count,
      '_min': $min,
      '_max': $max,
    };
  }
}

class NestedIntNullableFilter implements _i1.JsonSerializable {
  const NestedIntNullableFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.not,
  });

  final _i1.PrismaNullable<_i1.PrismaUnion<int, _i1.PrismaNull>> equals;

  final _i1.PrismaNullable<List<int>> in$;

  final _i1.PrismaNullable<List<int>> notIn;

  final _i1.PrismaNullable<int> lt;

  final _i1.PrismaNullable<int> lte;

  final _i1.PrismaNullable<int> gt;

  final _i1.PrismaNullable<int> gte;

  final _i1.PrismaNullable<NestedIntNullableFilter> not;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'equals': equals,
      'in': in$,
      'notIn': notIn,
      'lt': lt,
      'lte': lte,
      'gt': gt,
      'gte': gte,
      'not': not,
    };
  }
}

class NestedBoolFilter implements _i1.JsonSerializable {
  const NestedBoolFilter({
    this.equals,
    this.not,
  });

  final _i1.PrismaNullable<bool> equals;

  final _i1.PrismaNullable<NestedBoolFilter> not;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'equals': equals,
      'not': not,
    };
  }
}

class NestedBoolWithAggregatesFilter implements _i1.JsonSerializable {
  const NestedBoolWithAggregatesFilter({
    this.equals,
    this.not,
    this.$count,
    this.$min,
    this.$max,
  });

  final _i1.PrismaNullable<bool> equals;

  final _i1.PrismaNullable<NestedBoolWithAggregatesFilter> not;

  final _i1.PrismaNullable<NestedIntFilter> $count;

  final _i1.PrismaNullable<NestedBoolFilter> $min;

  final _i1.PrismaNullable<NestedBoolFilter> $max;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'equals': equals,
      'not': not,
      '_count': $count,
      '_min': $min,
      '_max': $max,
    };
  }
}

class NestedIntNullableWithAggregatesFilter implements _i1.JsonSerializable {
  const NestedIntNullableWithAggregatesFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.not,
    this.$count,
    this.$avg,
    this.$sum,
    this.$min,
    this.$max,
  });

  final _i1.PrismaNullable<_i1.PrismaUnion<int, _i1.PrismaNull>> equals;

  final _i1.PrismaNullable<List<int>> in$;

  final _i1.PrismaNullable<List<int>> notIn;

  final _i1.PrismaNullable<int> lt;

  final _i1.PrismaNullable<int> lte;

  final _i1.PrismaNullable<int> gt;

  final _i1.PrismaNullable<int> gte;

  final _i1.PrismaNullable<NestedIntNullableWithAggregatesFilter> not;

  final _i1.PrismaNullable<NestedIntNullableFilter> $count;

  final _i1.PrismaNullable<NestedFloatNullableFilter> $avg;

  final _i1.PrismaNullable<NestedIntNullableFilter> $sum;

  final _i1.PrismaNullable<NestedIntNullableFilter> $min;

  final _i1.PrismaNullable<NestedIntNullableFilter> $max;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'equals': equals,
      'in': in$,
      'notIn': notIn,
      'lt': lt,
      'lte': lte,
      'gt': gt,
      'gte': gte,
      'not': not,
      '_count': $count,
      '_avg': $avg,
      '_sum': $sum,
      '_min': $min,
      '_max': $max,
    };
  }
}

class NestedFloatNullableFilter implements _i1.JsonSerializable {
  const NestedFloatNullableFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.not,
  });

  final _i1.PrismaNullable<_i1.PrismaUnion<double, _i1.PrismaNull>> equals;

  final _i1.PrismaNullable<List<double>> in$;

  final _i1.PrismaNullable<List<double>> notIn;

  final _i1.PrismaNullable<double> lt;

  final _i1.PrismaNullable<double> lte;

  final _i1.PrismaNullable<double> gt;

  final _i1.PrismaNullable<double> gte;

  final _i1.PrismaNullable<NestedFloatNullableFilter> not;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'equals': equals,
      'in': in$,
      'notIn': notIn,
      'lt': lt,
      'lte': lte,
      'gt': gt,
      'gte': gte,
      'not': not,
    };
  }
}

class PostCreateWithoutAuthorInput implements _i1.JsonSerializable {
  const PostCreateWithoutAuthorInput({
    required this.title,
    this.slug,
    this.description,
    this.images,
    this.long_description,
    this.longitude,
    this.latitude,
    this.content,
    this.published,
    this.postmeta,
    this.category,
  });

  final String title;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> slug;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> description;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> images;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>>
      long_description;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> longitude;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> latitude;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> content;

  final _i1.PrismaNullable<bool> published;

  final _i1.PrismaNullable<PostMetaCreateNestedManyWithoutPostInput> postmeta;

  final _i1.PrismaNullable<CategoryCreateNestedManyWithoutPostInput> category;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'title': title,
      'slug': slug,
      'description': description,
      'images': images,
      'long_description': long_description,
      'longitude': longitude,
      'latitude': latitude,
      'content': content,
      'published': published,
      'postmeta': postmeta,
      'category': category,
    };
  }
}

class PostUncheckedCreateWithoutAuthorInput implements _i1.JsonSerializable {
  const PostUncheckedCreateWithoutAuthorInput({
    this.id,
    required this.title,
    this.slug,
    this.description,
    this.images,
    this.long_description,
    this.longitude,
    this.latitude,
    this.content,
    this.published,
    this.postmeta,
    this.category,
  });

  final _i1.PrismaNullable<int> id;

  final String title;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> slug;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> description;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> images;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>>
      long_description;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> longitude;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> latitude;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> content;

  final _i1.PrismaNullable<bool> published;

  final _i1.PrismaNullable<PostMetaUncheckedCreateNestedManyWithoutPostInput>
      postmeta;

  final _i1.PrismaNullable<CategoryUncheckedCreateNestedManyWithoutPostInput>
      category;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'title': title,
      'slug': slug,
      'description': description,
      'images': images,
      'long_description': long_description,
      'longitude': longitude,
      'latitude': latitude,
      'content': content,
      'published': published,
      'postmeta': postmeta,
      'category': category,
    };
  }
}

class PostCreateOrConnectWithoutAuthorInput implements _i1.JsonSerializable {
  const PostCreateOrConnectWithoutAuthorInput({
    required this.where,
    required this.create,
  });

  final PostWhereUniqueInput where;

  final PostCreateWithoutAuthorInput create;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'where': where,
      'create': create,
    };
  }
}

class PostCreateManyAuthorInputEnvelope implements _i1.JsonSerializable {
  const PostCreateManyAuthorInputEnvelope({
    required this.data,
    this.skipDuplicates,
  });

  final List<PostCreateManyAuthorInput> data;

  final _i1.PrismaNullable<bool> skipDuplicates;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'data': data,
      'skipDuplicates': skipDuplicates,
    };
  }
}

class ProfileCreateWithoutUserInput implements _i1.JsonSerializable {
  const ProfileCreateWithoutUserInput({
    this.firstName,
    this.lastName,
    this.addressLine1,
    this.addressLine2,
    this.city,
    this.state,
    this.country,
    this.postCode,
    this.phone,
    this.slug,
    this.images,
    this.longitude,
    this.latitude,
    this.published,
  });

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> firstName;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> lastName;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>>
      addressLine1;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>>
      addressLine2;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> city;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> state;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> country;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> postCode;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> phone;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> slug;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> images;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> longitude;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> latitude;

  final _i1.PrismaNullable<bool> published;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'firstName': firstName,
      'lastName': lastName,
      'addressLine1': addressLine1,
      'addressLine2': addressLine2,
      'city': city,
      'state': state,
      'country': country,
      'postCode': postCode,
      'phone': phone,
      'slug': slug,
      'images': images,
      'longitude': longitude,
      'latitude': latitude,
      'published': published,
    };
  }
}

class ProfileUncheckedCreateWithoutUserInput implements _i1.JsonSerializable {
  const ProfileUncheckedCreateWithoutUserInput({
    this.id,
    this.firstName,
    this.lastName,
    this.addressLine1,
    this.addressLine2,
    this.city,
    this.state,
    this.country,
    this.postCode,
    this.phone,
    this.slug,
    this.images,
    this.longitude,
    this.latitude,
    this.published,
  });

  final _i1.PrismaNullable<int> id;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> firstName;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> lastName;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>>
      addressLine1;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>>
      addressLine2;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> city;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> state;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> country;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> postCode;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> phone;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> slug;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> images;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> longitude;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> latitude;

  final _i1.PrismaNullable<bool> published;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'firstName': firstName,
      'lastName': lastName,
      'addressLine1': addressLine1,
      'addressLine2': addressLine2,
      'city': city,
      'state': state,
      'country': country,
      'postCode': postCode,
      'phone': phone,
      'slug': slug,
      'images': images,
      'longitude': longitude,
      'latitude': latitude,
      'published': published,
    };
  }
}

class ProfileCreateOrConnectWithoutUserInput implements _i1.JsonSerializable {
  const ProfileCreateOrConnectWithoutUserInput({
    required this.where,
    required this.create,
  });

  final ProfileWhereUniqueInput where;

  final ProfileCreateWithoutUserInput create;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'where': where,
      'create': create,
    };
  }
}

class ProfileCreateManyUserInputEnvelope implements _i1.JsonSerializable {
  const ProfileCreateManyUserInputEnvelope({
    required this.data,
    this.skipDuplicates,
  });

  final List<ProfileCreateManyUserInput> data;

  final _i1.PrismaNullable<bool> skipDuplicates;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'data': data,
      'skipDuplicates': skipDuplicates,
    };
  }
}

class PostUpsertWithWhereUniqueWithoutAuthorInput
    implements _i1.JsonSerializable {
  const PostUpsertWithWhereUniqueWithoutAuthorInput({
    required this.where,
    required this.update,
    required this.create,
  });

  final PostWhereUniqueInput where;

  final PostUpdateWithoutAuthorInput update;

  final PostCreateWithoutAuthorInput create;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'where': where,
      'update': update,
      'create': create,
    };
  }
}

class PostUpdateWithWhereUniqueWithoutAuthorInput
    implements _i1.JsonSerializable {
  const PostUpdateWithWhereUniqueWithoutAuthorInput({
    required this.where,
    required this.data,
  });

  final PostWhereUniqueInput where;

  final PostUpdateWithoutAuthorInput data;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'where': where,
      'data': data,
    };
  }
}

class PostUpdateManyWithWhereWithoutAuthorInput
    implements _i1.JsonSerializable {
  const PostUpdateManyWithWhereWithoutAuthorInput({
    required this.where,
    required this.data,
  });

  final PostScalarWhereInput where;

  final PostUpdateManyMutationInput data;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'where': where,
      'data': data,
    };
  }
}

class PostScalarWhereInput implements _i1.JsonSerializable {
  const PostScalarWhereInput({
    this.AND,
    this.OR,
    this.NOT,
    this.id,
    this.title,
    this.slug,
    this.description,
    this.images,
    this.long_description,
    this.longitude,
    this.latitude,
    this.content,
    this.published,
    this.authorId,
  });

  final _i1.PrismaNullable<PostScalarWhereInput> AND;

  final _i1.PrismaNullable<List<PostScalarWhereInput>> OR;

  final _i1.PrismaNullable<PostScalarWhereInput> NOT;

  final _i1.PrismaNullable<IntFilter> id;

  final _i1.PrismaNullable<StringFilter> title;

  final _i1.PrismaNullable<StringNullableFilter> slug;

  final _i1.PrismaNullable<StringNullableFilter> description;

  final _i1.PrismaNullable<StringNullableFilter> images;

  final _i1.PrismaNullable<StringNullableFilter> long_description;

  final _i1.PrismaNullable<StringNullableFilter> longitude;

  final _i1.PrismaNullable<StringNullableFilter> latitude;

  final _i1.PrismaNullable<StringNullableFilter> content;

  final _i1.PrismaNullable<BoolFilter> published;

  final _i1.PrismaNullable<IntFilter> authorId;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'AND': AND,
      'OR': OR,
      'NOT': NOT,
      'id': id,
      'title': title,
      'slug': slug,
      'description': description,
      'images': images,
      'long_description': long_description,
      'longitude': longitude,
      'latitude': latitude,
      'content': content,
      'published': published,
      'authorId': authorId,
    };
  }
}

class ProfileUpsertWithWhereUniqueWithoutUserInput
    implements _i1.JsonSerializable {
  const ProfileUpsertWithWhereUniqueWithoutUserInput({
    required this.where,
    required this.update,
    required this.create,
  });

  final ProfileWhereUniqueInput where;

  final ProfileUpdateWithoutUserInput update;

  final ProfileCreateWithoutUserInput create;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'where': where,
      'update': update,
      'create': create,
    };
  }
}

class ProfileUpdateWithWhereUniqueWithoutUserInput
    implements _i1.JsonSerializable {
  const ProfileUpdateWithWhereUniqueWithoutUserInput({
    required this.where,
    required this.data,
  });

  final ProfileWhereUniqueInput where;

  final ProfileUpdateWithoutUserInput data;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'where': where,
      'data': data,
    };
  }
}

class ProfileUpdateManyWithWhereWithoutUserInput
    implements _i1.JsonSerializable {
  const ProfileUpdateManyWithWhereWithoutUserInput({
    required this.where,
    required this.data,
  });

  final ProfileScalarWhereInput where;

  final ProfileUpdateManyMutationInput data;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'where': where,
      'data': data,
    };
  }
}

class ProfileScalarWhereInput implements _i1.JsonSerializable {
  const ProfileScalarWhereInput({
    this.AND,
    this.OR,
    this.NOT,
    this.id,
    this.firstName,
    this.lastName,
    this.addressLine1,
    this.addressLine2,
    this.city,
    this.state,
    this.country,
    this.postCode,
    this.phone,
    this.slug,
    this.images,
    this.longitude,
    this.latitude,
    this.published,
    this.userId,
  });

  final _i1.PrismaNullable<ProfileScalarWhereInput> AND;

  final _i1.PrismaNullable<List<ProfileScalarWhereInput>> OR;

  final _i1.PrismaNullable<ProfileScalarWhereInput> NOT;

  final _i1.PrismaNullable<IntFilter> id;

  final _i1.PrismaNullable<StringNullableFilter> firstName;

  final _i1.PrismaNullable<StringNullableFilter> lastName;

  final _i1.PrismaNullable<StringNullableFilter> addressLine1;

  final _i1.PrismaNullable<StringNullableFilter> addressLine2;

  final _i1.PrismaNullable<StringNullableFilter> city;

  final _i1.PrismaNullable<StringNullableFilter> state;

  final _i1.PrismaNullable<StringNullableFilter> country;

  final _i1.PrismaNullable<StringNullableFilter> postCode;

  final _i1.PrismaNullable<StringNullableFilter> phone;

  final _i1.PrismaNullable<StringNullableFilter> slug;

  final _i1.PrismaNullable<StringNullableFilter> images;

  final _i1.PrismaNullable<StringNullableFilter> longitude;

  final _i1.PrismaNullable<StringNullableFilter> latitude;

  final _i1.PrismaNullable<BoolFilter> published;

  final _i1.PrismaNullable<IntNullableFilter> userId;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'AND': AND,
      'OR': OR,
      'NOT': NOT,
      'id': id,
      'firstName': firstName,
      'lastName': lastName,
      'addressLine1': addressLine1,
      'addressLine2': addressLine2,
      'city': city,
      'state': state,
      'country': country,
      'postCode': postCode,
      'phone': phone,
      'slug': slug,
      'images': images,
      'longitude': longitude,
      'latitude': latitude,
      'published': published,
      'userId': userId,
    };
  }
}

class UsersCreateWithoutProfileInput implements _i1.JsonSerializable {
  const UsersCreateWithoutProfileInput({
    required this.email,
    this.role,
    this.password,
    this.fcmtoken,
    this.salt,
    this.posts,
  });

  final String email;

  final _i1.PrismaNullable<Role> role;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> password;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> fcmtoken;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> salt;

  final _i1.PrismaNullable<PostCreateNestedManyWithoutAuthorInput> posts;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'email': email,
      'role': role,
      'password': password,
      'fcmtoken': fcmtoken,
      'salt': salt,
      'posts': posts,
    };
  }
}

class UsersUncheckedCreateWithoutProfileInput implements _i1.JsonSerializable {
  const UsersUncheckedCreateWithoutProfileInput({
    this.id,
    required this.email,
    this.role,
    this.password,
    this.fcmtoken,
    this.salt,
    this.posts,
  });

  final _i1.PrismaNullable<int> id;

  final String email;

  final _i1.PrismaNullable<Role> role;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> password;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> fcmtoken;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> salt;

  final _i1.PrismaNullable<PostUncheckedCreateNestedManyWithoutAuthorInput>
      posts;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'email': email,
      'role': role,
      'password': password,
      'fcmtoken': fcmtoken,
      'salt': salt,
      'posts': posts,
    };
  }
}

class UsersCreateOrConnectWithoutProfileInput implements _i1.JsonSerializable {
  const UsersCreateOrConnectWithoutProfileInput({
    required this.where,
    required this.create,
  });

  final UsersWhereUniqueInput where;

  final UsersCreateWithoutProfileInput create;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'where': where,
      'create': create,
    };
  }
}

class UsersUpsertWithoutProfileInput implements _i1.JsonSerializable {
  const UsersUpsertWithoutProfileInput({
    required this.update,
    required this.create,
  });

  final UsersUpdateWithoutProfileInput update;

  final UsersCreateWithoutProfileInput create;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'update': update,
      'create': create,
    };
  }
}

class UsersUpdateWithoutProfileInput implements _i1.JsonSerializable {
  const UsersUpdateWithoutProfileInput({
    this.email,
    this.role,
    this.password,
    this.fcmtoken,
    this.salt,
    this.posts,
  });

  final _i1.PrismaNullable<StringFieldUpdateOperationsInput> email;

  final _i1.PrismaNullable<EnumRoleFieldUpdateOperationsInput> role;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> password;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> fcmtoken;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> salt;

  final _i1.PrismaNullable<PostUpdateManyWithoutAuthorNestedInput> posts;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'email': email,
      'role': role,
      'password': password,
      'fcmtoken': fcmtoken,
      'salt': salt,
      'posts': posts,
    };
  }
}

class UsersUncheckedUpdateWithoutProfileInput implements _i1.JsonSerializable {
  const UsersUncheckedUpdateWithoutProfileInput({
    this.id,
    this.email,
    this.role,
    this.password,
    this.fcmtoken,
    this.salt,
    this.posts,
  });

  final _i1.PrismaNullable<IntFieldUpdateOperationsInput> id;

  final _i1.PrismaNullable<StringFieldUpdateOperationsInput> email;

  final _i1.PrismaNullable<EnumRoleFieldUpdateOperationsInput> role;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> password;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> fcmtoken;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> salt;

  final _i1.PrismaNullable<PostUncheckedUpdateManyWithoutAuthorNestedInput>
      posts;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'email': email,
      'role': role,
      'password': password,
      'fcmtoken': fcmtoken,
      'salt': salt,
      'posts': posts,
    };
  }
}

class UsersCreateWithoutPostsInput implements _i1.JsonSerializable {
  const UsersCreateWithoutPostsInput({
    required this.email,
    this.role,
    this.password,
    this.fcmtoken,
    this.salt,
    this.Profile,
  });

  final String email;

  final _i1.PrismaNullable<Role> role;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> password;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> fcmtoken;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> salt;

  final _i1.PrismaNullable<ProfileCreateNestedManyWithoutUserInput> Profile;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'email': email,
      'role': role,
      'password': password,
      'fcmtoken': fcmtoken,
      'salt': salt,
      'Profile': Profile,
    };
  }
}

class UsersUncheckedCreateWithoutPostsInput implements _i1.JsonSerializable {
  const UsersUncheckedCreateWithoutPostsInput({
    this.id,
    required this.email,
    this.role,
    this.password,
    this.fcmtoken,
    this.salt,
    this.Profile,
  });

  final _i1.PrismaNullable<int> id;

  final String email;

  final _i1.PrismaNullable<Role> role;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> password;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> fcmtoken;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> salt;

  final _i1.PrismaNullable<ProfileUncheckedCreateNestedManyWithoutUserInput>
      Profile;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'email': email,
      'role': role,
      'password': password,
      'fcmtoken': fcmtoken,
      'salt': salt,
      'Profile': Profile,
    };
  }
}

class UsersCreateOrConnectWithoutPostsInput implements _i1.JsonSerializable {
  const UsersCreateOrConnectWithoutPostsInput({
    required this.where,
    required this.create,
  });

  final UsersWhereUniqueInput where;

  final UsersCreateWithoutPostsInput create;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'where': where,
      'create': create,
    };
  }
}

class PostMetaCreateWithoutPostInput implements _i1.JsonSerializable {
  const PostMetaCreateWithoutPostInput({
    required this.meta_title,
    this.meta_description,
    this.published,
  });

  final String meta_title;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>>
      meta_description;

  final _i1.PrismaNullable<bool> published;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'meta_title': meta_title,
      'meta_description': meta_description,
      'published': published,
    };
  }
}

class PostMetaUncheckedCreateWithoutPostInput implements _i1.JsonSerializable {
  const PostMetaUncheckedCreateWithoutPostInput({
    this.id,
    required this.meta_title,
    this.meta_description,
    this.published,
  });

  final _i1.PrismaNullable<int> id;

  final String meta_title;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>>
      meta_description;

  final _i1.PrismaNullable<bool> published;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'meta_title': meta_title,
      'meta_description': meta_description,
      'published': published,
    };
  }
}

class PostMetaCreateOrConnectWithoutPostInput implements _i1.JsonSerializable {
  const PostMetaCreateOrConnectWithoutPostInput({
    required this.where,
    required this.create,
  });

  final PostMetaWhereUniqueInput where;

  final PostMetaCreateWithoutPostInput create;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'where': where,
      'create': create,
    };
  }
}

class PostMetaCreateManyPostInputEnvelope implements _i1.JsonSerializable {
  const PostMetaCreateManyPostInputEnvelope({
    required this.data,
    this.skipDuplicates,
  });

  final List<PostMetaCreateManyPostInput> data;

  final _i1.PrismaNullable<bool> skipDuplicates;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'data': data,
      'skipDuplicates': skipDuplicates,
    };
  }
}

class CategoryCreateWithoutPostInput implements _i1.JsonSerializable {
  const CategoryCreateWithoutPostInput({
    required this.name,
    this.slug,
    this.description,
    this.published,
    this.amenities,
  });

  final String name;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> slug;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> description;

  final _i1.PrismaNullable<bool> published;

  final _i1.PrismaNullable<AmenitiesCreateNestedManyWithoutCategoryInput>
      amenities;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'name': name,
      'slug': slug,
      'description': description,
      'published': published,
      'amenities': amenities,
    };
  }
}

class CategoryUncheckedCreateWithoutPostInput implements _i1.JsonSerializable {
  const CategoryUncheckedCreateWithoutPostInput({
    this.id,
    required this.name,
    this.slug,
    this.description,
    this.published,
    this.amenities,
  });

  final _i1.PrismaNullable<int> id;

  final String name;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> slug;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> description;

  final _i1.PrismaNullable<bool> published;

  final _i1.PrismaNullable<
      AmenitiesUncheckedCreateNestedManyWithoutCategoryInput> amenities;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'name': name,
      'slug': slug,
      'description': description,
      'published': published,
      'amenities': amenities,
    };
  }
}

class CategoryCreateOrConnectWithoutPostInput implements _i1.JsonSerializable {
  const CategoryCreateOrConnectWithoutPostInput({
    required this.where,
    required this.create,
  });

  final CategoryWhereUniqueInput where;

  final CategoryCreateWithoutPostInput create;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'where': where,
      'create': create,
    };
  }
}

class CategoryCreateManyPostInputEnvelope implements _i1.JsonSerializable {
  const CategoryCreateManyPostInputEnvelope({
    required this.data,
    this.skipDuplicates,
  });

  final List<CategoryCreateManyPostInput> data;

  final _i1.PrismaNullable<bool> skipDuplicates;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'data': data,
      'skipDuplicates': skipDuplicates,
    };
  }
}

class UsersUpsertWithoutPostsInput implements _i1.JsonSerializable {
  const UsersUpsertWithoutPostsInput({
    required this.update,
    required this.create,
  });

  final UsersUpdateWithoutPostsInput update;

  final UsersCreateWithoutPostsInput create;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'update': update,
      'create': create,
    };
  }
}

class UsersUpdateWithoutPostsInput implements _i1.JsonSerializable {
  const UsersUpdateWithoutPostsInput({
    this.email,
    this.role,
    this.password,
    this.fcmtoken,
    this.salt,
    this.Profile,
  });

  final _i1.PrismaNullable<StringFieldUpdateOperationsInput> email;

  final _i1.PrismaNullable<EnumRoleFieldUpdateOperationsInput> role;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> password;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> fcmtoken;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> salt;

  final _i1.PrismaNullable<ProfileUpdateManyWithoutUserNestedInput> Profile;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'email': email,
      'role': role,
      'password': password,
      'fcmtoken': fcmtoken,
      'salt': salt,
      'Profile': Profile,
    };
  }
}

class UsersUncheckedUpdateWithoutPostsInput implements _i1.JsonSerializable {
  const UsersUncheckedUpdateWithoutPostsInput({
    this.id,
    this.email,
    this.role,
    this.password,
    this.fcmtoken,
    this.salt,
    this.Profile,
  });

  final _i1.PrismaNullable<IntFieldUpdateOperationsInput> id;

  final _i1.PrismaNullable<StringFieldUpdateOperationsInput> email;

  final _i1.PrismaNullable<EnumRoleFieldUpdateOperationsInput> role;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> password;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> fcmtoken;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> salt;

  final _i1.PrismaNullable<ProfileUncheckedUpdateManyWithoutUserNestedInput>
      Profile;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'email': email,
      'role': role,
      'password': password,
      'fcmtoken': fcmtoken,
      'salt': salt,
      'Profile': Profile,
    };
  }
}

class PostMetaUpsertWithWhereUniqueWithoutPostInput
    implements _i1.JsonSerializable {
  const PostMetaUpsertWithWhereUniqueWithoutPostInput({
    required this.where,
    required this.update,
    required this.create,
  });

  final PostMetaWhereUniqueInput where;

  final PostMetaUpdateWithoutPostInput update;

  final PostMetaCreateWithoutPostInput create;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'where': where,
      'update': update,
      'create': create,
    };
  }
}

class PostMetaUpdateWithWhereUniqueWithoutPostInput
    implements _i1.JsonSerializable {
  const PostMetaUpdateWithWhereUniqueWithoutPostInput({
    required this.where,
    required this.data,
  });

  final PostMetaWhereUniqueInput where;

  final PostMetaUpdateWithoutPostInput data;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'where': where,
      'data': data,
    };
  }
}

class PostMetaUpdateManyWithWhereWithoutPostInput
    implements _i1.JsonSerializable {
  const PostMetaUpdateManyWithWhereWithoutPostInput({
    required this.where,
    required this.data,
  });

  final PostMetaScalarWhereInput where;

  final PostMetaUpdateManyMutationInput data;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'where': where,
      'data': data,
    };
  }
}

class PostMetaScalarWhereInput implements _i1.JsonSerializable {
  const PostMetaScalarWhereInput({
    this.AND,
    this.OR,
    this.NOT,
    this.id,
    this.meta_title,
    this.meta_description,
    this.published,
    this.postId,
  });

  final _i1.PrismaNullable<PostMetaScalarWhereInput> AND;

  final _i1.PrismaNullable<List<PostMetaScalarWhereInput>> OR;

  final _i1.PrismaNullable<PostMetaScalarWhereInput> NOT;

  final _i1.PrismaNullable<IntFilter> id;

  final _i1.PrismaNullable<StringFilter> meta_title;

  final _i1.PrismaNullable<StringNullableFilter> meta_description;

  final _i1.PrismaNullable<BoolFilter> published;

  final _i1.PrismaNullable<IntFilter> postId;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'AND': AND,
      'OR': OR,
      'NOT': NOT,
      'id': id,
      'meta_title': meta_title,
      'meta_description': meta_description,
      'published': published,
      'postId': postId,
    };
  }
}

class CategoryUpsertWithWhereUniqueWithoutPostInput
    implements _i1.JsonSerializable {
  const CategoryUpsertWithWhereUniqueWithoutPostInput({
    required this.where,
    required this.update,
    required this.create,
  });

  final CategoryWhereUniqueInput where;

  final CategoryUpdateWithoutPostInput update;

  final CategoryCreateWithoutPostInput create;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'where': where,
      'update': update,
      'create': create,
    };
  }
}

class CategoryUpdateWithWhereUniqueWithoutPostInput
    implements _i1.JsonSerializable {
  const CategoryUpdateWithWhereUniqueWithoutPostInput({
    required this.where,
    required this.data,
  });

  final CategoryWhereUniqueInput where;

  final CategoryUpdateWithoutPostInput data;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'where': where,
      'data': data,
    };
  }
}

class CategoryUpdateManyWithWhereWithoutPostInput
    implements _i1.JsonSerializable {
  const CategoryUpdateManyWithWhereWithoutPostInput({
    required this.where,
    required this.data,
  });

  final CategoryScalarWhereInput where;

  final CategoryUpdateManyMutationInput data;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'where': where,
      'data': data,
    };
  }
}

class CategoryScalarWhereInput implements _i1.JsonSerializable {
  const CategoryScalarWhereInput({
    this.AND,
    this.OR,
    this.NOT,
    this.id,
    this.name,
    this.slug,
    this.description,
    this.published,
    this.postId,
  });

  final _i1.PrismaNullable<CategoryScalarWhereInput> AND;

  final _i1.PrismaNullable<List<CategoryScalarWhereInput>> OR;

  final _i1.PrismaNullable<CategoryScalarWhereInput> NOT;

  final _i1.PrismaNullable<IntFilter> id;

  final _i1.PrismaNullable<StringFilter> name;

  final _i1.PrismaNullable<StringNullableFilter> slug;

  final _i1.PrismaNullable<StringNullableFilter> description;

  final _i1.PrismaNullable<BoolFilter> published;

  final _i1.PrismaNullable<IntFilter> postId;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'AND': AND,
      'OR': OR,
      'NOT': NOT,
      'id': id,
      'name': name,
      'slug': slug,
      'description': description,
      'published': published,
      'postId': postId,
    };
  }
}

class PostCreateWithoutPostmetaInput implements _i1.JsonSerializable {
  const PostCreateWithoutPostmetaInput({
    required this.title,
    this.slug,
    this.description,
    this.images,
    this.long_description,
    this.longitude,
    this.latitude,
    this.content,
    this.published,
    required this.author,
    this.category,
  });

  final String title;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> slug;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> description;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> images;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>>
      long_description;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> longitude;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> latitude;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> content;

  final _i1.PrismaNullable<bool> published;

  final UsersCreateNestedOneWithoutPostsInput author;

  final _i1.PrismaNullable<CategoryCreateNestedManyWithoutPostInput> category;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'title': title,
      'slug': slug,
      'description': description,
      'images': images,
      'long_description': long_description,
      'longitude': longitude,
      'latitude': latitude,
      'content': content,
      'published': published,
      'author': author,
      'category': category,
    };
  }
}

class PostUncheckedCreateWithoutPostmetaInput implements _i1.JsonSerializable {
  const PostUncheckedCreateWithoutPostmetaInput({
    this.id,
    required this.title,
    this.slug,
    this.description,
    this.images,
    this.long_description,
    this.longitude,
    this.latitude,
    this.content,
    this.published,
    required this.authorId,
    this.category,
  });

  final _i1.PrismaNullable<int> id;

  final String title;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> slug;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> description;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> images;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>>
      long_description;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> longitude;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> latitude;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> content;

  final _i1.PrismaNullable<bool> published;

  final int authorId;

  final _i1.PrismaNullable<CategoryUncheckedCreateNestedManyWithoutPostInput>
      category;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'title': title,
      'slug': slug,
      'description': description,
      'images': images,
      'long_description': long_description,
      'longitude': longitude,
      'latitude': latitude,
      'content': content,
      'published': published,
      'authorId': authorId,
      'category': category,
    };
  }
}

class PostCreateOrConnectWithoutPostmetaInput implements _i1.JsonSerializable {
  const PostCreateOrConnectWithoutPostmetaInput({
    required this.where,
    required this.create,
  });

  final PostWhereUniqueInput where;

  final PostCreateWithoutPostmetaInput create;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'where': where,
      'create': create,
    };
  }
}

class PostUpsertWithoutPostmetaInput implements _i1.JsonSerializable {
  const PostUpsertWithoutPostmetaInput({
    required this.update,
    required this.create,
  });

  final PostUpdateWithoutPostmetaInput update;

  final PostCreateWithoutPostmetaInput create;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'update': update,
      'create': create,
    };
  }
}

class PostUpdateWithoutPostmetaInput implements _i1.JsonSerializable {
  const PostUpdateWithoutPostmetaInput({
    this.title,
    this.slug,
    this.description,
    this.images,
    this.long_description,
    this.longitude,
    this.latitude,
    this.content,
    this.published,
    this.author,
    this.category,
  });

  final _i1.PrismaNullable<StringFieldUpdateOperationsInput> title;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> slug;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput>
      description;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> images;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput>
      long_description;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> longitude;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> latitude;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> content;

  final _i1.PrismaNullable<BoolFieldUpdateOperationsInput> published;

  final _i1.PrismaNullable<UsersUpdateOneRequiredWithoutPostsNestedInput>
      author;

  final _i1.PrismaNullable<CategoryUpdateManyWithoutPostNestedInput> category;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'title': title,
      'slug': slug,
      'description': description,
      'images': images,
      'long_description': long_description,
      'longitude': longitude,
      'latitude': latitude,
      'content': content,
      'published': published,
      'author': author,
      'category': category,
    };
  }
}

class PostUncheckedUpdateWithoutPostmetaInput implements _i1.JsonSerializable {
  const PostUncheckedUpdateWithoutPostmetaInput({
    this.id,
    this.title,
    this.slug,
    this.description,
    this.images,
    this.long_description,
    this.longitude,
    this.latitude,
    this.content,
    this.published,
    this.authorId,
    this.category,
  });

  final _i1.PrismaNullable<IntFieldUpdateOperationsInput> id;

  final _i1.PrismaNullable<StringFieldUpdateOperationsInput> title;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> slug;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput>
      description;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> images;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput>
      long_description;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> longitude;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> latitude;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> content;

  final _i1.PrismaNullable<BoolFieldUpdateOperationsInput> published;

  final _i1.PrismaNullable<IntFieldUpdateOperationsInput> authorId;

  final _i1.PrismaNullable<CategoryUncheckedUpdateManyWithoutPostNestedInput>
      category;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'title': title,
      'slug': slug,
      'description': description,
      'images': images,
      'long_description': long_description,
      'longitude': longitude,
      'latitude': latitude,
      'content': content,
      'published': published,
      'authorId': authorId,
      'category': category,
    };
  }
}

class CategoryCreateWithoutAmenitiesInput implements _i1.JsonSerializable {
  const CategoryCreateWithoutAmenitiesInput({
    required this.name,
    this.slug,
    this.description,
    this.published,
    required this.post,
  });

  final String name;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> slug;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> description;

  final _i1.PrismaNullable<bool> published;

  final PostCreateNestedOneWithoutCategoryInput post;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'name': name,
      'slug': slug,
      'description': description,
      'published': published,
      'post': post,
    };
  }
}

class CategoryUncheckedCreateWithoutAmenitiesInput
    implements _i1.JsonSerializable {
  const CategoryUncheckedCreateWithoutAmenitiesInput({
    this.id,
    required this.name,
    this.slug,
    this.description,
    this.published,
    required this.postId,
  });

  final _i1.PrismaNullable<int> id;

  final String name;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> slug;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> description;

  final _i1.PrismaNullable<bool> published;

  final int postId;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'name': name,
      'slug': slug,
      'description': description,
      'published': published,
      'postId': postId,
    };
  }
}

class CategoryCreateOrConnectWithoutAmenitiesInput
    implements _i1.JsonSerializable {
  const CategoryCreateOrConnectWithoutAmenitiesInput({
    required this.where,
    required this.create,
  });

  final CategoryWhereUniqueInput where;

  final CategoryCreateWithoutAmenitiesInput create;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'where': where,
      'create': create,
    };
  }
}

class CategoryUpsertWithoutAmenitiesInput implements _i1.JsonSerializable {
  const CategoryUpsertWithoutAmenitiesInput({
    required this.update,
    required this.create,
  });

  final CategoryUpdateWithoutAmenitiesInput update;

  final CategoryCreateWithoutAmenitiesInput create;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'update': update,
      'create': create,
    };
  }
}

class CategoryUpdateWithoutAmenitiesInput implements _i1.JsonSerializable {
  const CategoryUpdateWithoutAmenitiesInput({
    this.name,
    this.slug,
    this.description,
    this.published,
    this.post,
  });

  final _i1.PrismaNullable<StringFieldUpdateOperationsInput> name;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> slug;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput>
      description;

  final _i1.PrismaNullable<BoolFieldUpdateOperationsInput> published;

  final _i1.PrismaNullable<PostUpdateOneRequiredWithoutCategoryNestedInput>
      post;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'name': name,
      'slug': slug,
      'description': description,
      'published': published,
      'post': post,
    };
  }
}

class CategoryUncheckedUpdateWithoutAmenitiesInput
    implements _i1.JsonSerializable {
  const CategoryUncheckedUpdateWithoutAmenitiesInput({
    this.id,
    this.name,
    this.slug,
    this.description,
    this.published,
    this.postId,
  });

  final _i1.PrismaNullable<IntFieldUpdateOperationsInput> id;

  final _i1.PrismaNullable<StringFieldUpdateOperationsInput> name;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> slug;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput>
      description;

  final _i1.PrismaNullable<BoolFieldUpdateOperationsInput> published;

  final _i1.PrismaNullable<IntFieldUpdateOperationsInput> postId;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'name': name,
      'slug': slug,
      'description': description,
      'published': published,
      'postId': postId,
    };
  }
}

class AmenitiesCreateWithoutCategoryInput implements _i1.JsonSerializable {
  const AmenitiesCreateWithoutCategoryInput({
    required this.name,
    this.slug,
    this.description,
    this.published,
  });

  final String name;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> slug;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> description;

  final _i1.PrismaNullable<bool> published;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'name': name,
      'slug': slug,
      'description': description,
      'published': published,
    };
  }
}

class AmenitiesUncheckedCreateWithoutCategoryInput
    implements _i1.JsonSerializable {
  const AmenitiesUncheckedCreateWithoutCategoryInput({
    this.id,
    required this.name,
    this.slug,
    this.description,
    this.published,
  });

  final _i1.PrismaNullable<int> id;

  final String name;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> slug;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> description;

  final _i1.PrismaNullable<bool> published;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'name': name,
      'slug': slug,
      'description': description,
      'published': published,
    };
  }
}

class AmenitiesCreateOrConnectWithoutCategoryInput
    implements _i1.JsonSerializable {
  const AmenitiesCreateOrConnectWithoutCategoryInput({
    required this.where,
    required this.create,
  });

  final AmenitiesWhereUniqueInput where;

  final AmenitiesCreateWithoutCategoryInput create;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'where': where,
      'create': create,
    };
  }
}

class AmenitiesCreateManyCategoryInputEnvelope implements _i1.JsonSerializable {
  const AmenitiesCreateManyCategoryInputEnvelope({
    required this.data,
    this.skipDuplicates,
  });

  final List<AmenitiesCreateManyCategoryInput> data;

  final _i1.PrismaNullable<bool> skipDuplicates;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'data': data,
      'skipDuplicates': skipDuplicates,
    };
  }
}

class PostCreateWithoutCategoryInput implements _i1.JsonSerializable {
  const PostCreateWithoutCategoryInput({
    required this.title,
    this.slug,
    this.description,
    this.images,
    this.long_description,
    this.longitude,
    this.latitude,
    this.content,
    this.published,
    required this.author,
    this.postmeta,
  });

  final String title;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> slug;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> description;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> images;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>>
      long_description;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> longitude;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> latitude;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> content;

  final _i1.PrismaNullable<bool> published;

  final UsersCreateNestedOneWithoutPostsInput author;

  final _i1.PrismaNullable<PostMetaCreateNestedManyWithoutPostInput> postmeta;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'title': title,
      'slug': slug,
      'description': description,
      'images': images,
      'long_description': long_description,
      'longitude': longitude,
      'latitude': latitude,
      'content': content,
      'published': published,
      'author': author,
      'postmeta': postmeta,
    };
  }
}

class PostUncheckedCreateWithoutCategoryInput implements _i1.JsonSerializable {
  const PostUncheckedCreateWithoutCategoryInput({
    this.id,
    required this.title,
    this.slug,
    this.description,
    this.images,
    this.long_description,
    this.longitude,
    this.latitude,
    this.content,
    this.published,
    required this.authorId,
    this.postmeta,
  });

  final _i1.PrismaNullable<int> id;

  final String title;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> slug;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> description;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> images;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>>
      long_description;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> longitude;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> latitude;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> content;

  final _i1.PrismaNullable<bool> published;

  final int authorId;

  final _i1.PrismaNullable<PostMetaUncheckedCreateNestedManyWithoutPostInput>
      postmeta;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'title': title,
      'slug': slug,
      'description': description,
      'images': images,
      'long_description': long_description,
      'longitude': longitude,
      'latitude': latitude,
      'content': content,
      'published': published,
      'authorId': authorId,
      'postmeta': postmeta,
    };
  }
}

class PostCreateOrConnectWithoutCategoryInput implements _i1.JsonSerializable {
  const PostCreateOrConnectWithoutCategoryInput({
    required this.where,
    required this.create,
  });

  final PostWhereUniqueInput where;

  final PostCreateWithoutCategoryInput create;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'where': where,
      'create': create,
    };
  }
}

class AmenitiesUpsertWithWhereUniqueWithoutCategoryInput
    implements _i1.JsonSerializable {
  const AmenitiesUpsertWithWhereUniqueWithoutCategoryInput({
    required this.where,
    required this.update,
    required this.create,
  });

  final AmenitiesWhereUniqueInput where;

  final AmenitiesUpdateWithoutCategoryInput update;

  final AmenitiesCreateWithoutCategoryInput create;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'where': where,
      'update': update,
      'create': create,
    };
  }
}

class AmenitiesUpdateWithWhereUniqueWithoutCategoryInput
    implements _i1.JsonSerializable {
  const AmenitiesUpdateWithWhereUniqueWithoutCategoryInput({
    required this.where,
    required this.data,
  });

  final AmenitiesWhereUniqueInput where;

  final AmenitiesUpdateWithoutCategoryInput data;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'where': where,
      'data': data,
    };
  }
}

class AmenitiesUpdateManyWithWhereWithoutCategoryInput
    implements _i1.JsonSerializable {
  const AmenitiesUpdateManyWithWhereWithoutCategoryInput({
    required this.where,
    required this.data,
  });

  final AmenitiesScalarWhereInput where;

  final AmenitiesUpdateManyMutationInput data;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'where': where,
      'data': data,
    };
  }
}

class AmenitiesScalarWhereInput implements _i1.JsonSerializable {
  const AmenitiesScalarWhereInput({
    this.AND,
    this.OR,
    this.NOT,
    this.id,
    this.name,
    this.slug,
    this.description,
    this.published,
    this.categoryId,
  });

  final _i1.PrismaNullable<AmenitiesScalarWhereInput> AND;

  final _i1.PrismaNullable<List<AmenitiesScalarWhereInput>> OR;

  final _i1.PrismaNullable<AmenitiesScalarWhereInput> NOT;

  final _i1.PrismaNullable<IntFilter> id;

  final _i1.PrismaNullable<StringFilter> name;

  final _i1.PrismaNullable<StringNullableFilter> slug;

  final _i1.PrismaNullable<StringNullableFilter> description;

  final _i1.PrismaNullable<BoolFilter> published;

  final _i1.PrismaNullable<IntFilter> categoryId;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'AND': AND,
      'OR': OR,
      'NOT': NOT,
      'id': id,
      'name': name,
      'slug': slug,
      'description': description,
      'published': published,
      'categoryId': categoryId,
    };
  }
}

class PostUpsertWithoutCategoryInput implements _i1.JsonSerializable {
  const PostUpsertWithoutCategoryInput({
    required this.update,
    required this.create,
  });

  final PostUpdateWithoutCategoryInput update;

  final PostCreateWithoutCategoryInput create;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'update': update,
      'create': create,
    };
  }
}

class PostUpdateWithoutCategoryInput implements _i1.JsonSerializable {
  const PostUpdateWithoutCategoryInput({
    this.title,
    this.slug,
    this.description,
    this.images,
    this.long_description,
    this.longitude,
    this.latitude,
    this.content,
    this.published,
    this.author,
    this.postmeta,
  });

  final _i1.PrismaNullable<StringFieldUpdateOperationsInput> title;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> slug;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput>
      description;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> images;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput>
      long_description;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> longitude;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> latitude;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> content;

  final _i1.PrismaNullable<BoolFieldUpdateOperationsInput> published;

  final _i1.PrismaNullable<UsersUpdateOneRequiredWithoutPostsNestedInput>
      author;

  final _i1.PrismaNullable<PostMetaUpdateManyWithoutPostNestedInput> postmeta;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'title': title,
      'slug': slug,
      'description': description,
      'images': images,
      'long_description': long_description,
      'longitude': longitude,
      'latitude': latitude,
      'content': content,
      'published': published,
      'author': author,
      'postmeta': postmeta,
    };
  }
}

class PostUncheckedUpdateWithoutCategoryInput implements _i1.JsonSerializable {
  const PostUncheckedUpdateWithoutCategoryInput({
    this.id,
    this.title,
    this.slug,
    this.description,
    this.images,
    this.long_description,
    this.longitude,
    this.latitude,
    this.content,
    this.published,
    this.authorId,
    this.postmeta,
  });

  final _i1.PrismaNullable<IntFieldUpdateOperationsInput> id;

  final _i1.PrismaNullable<StringFieldUpdateOperationsInput> title;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> slug;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput>
      description;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> images;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput>
      long_description;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> longitude;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> latitude;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> content;

  final _i1.PrismaNullable<BoolFieldUpdateOperationsInput> published;

  final _i1.PrismaNullable<IntFieldUpdateOperationsInput> authorId;

  final _i1.PrismaNullable<PostMetaUncheckedUpdateManyWithoutPostNestedInput>
      postmeta;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'title': title,
      'slug': slug,
      'description': description,
      'images': images,
      'long_description': long_description,
      'longitude': longitude,
      'latitude': latitude,
      'content': content,
      'published': published,
      'authorId': authorId,
      'postmeta': postmeta,
    };
  }
}

class PostCreateManyAuthorInput implements _i1.JsonSerializable {
  const PostCreateManyAuthorInput({
    this.id,
    required this.title,
    this.slug,
    this.description,
    this.images,
    this.long_description,
    this.longitude,
    this.latitude,
    this.content,
    this.published,
  });

  final _i1.PrismaNullable<int> id;

  final String title;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> slug;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> description;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> images;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>>
      long_description;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> longitude;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> latitude;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> content;

  final _i1.PrismaNullable<bool> published;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'title': title,
      'slug': slug,
      'description': description,
      'images': images,
      'long_description': long_description,
      'longitude': longitude,
      'latitude': latitude,
      'content': content,
      'published': published,
    };
  }
}

class ProfileCreateManyUserInput implements _i1.JsonSerializable {
  const ProfileCreateManyUserInput({
    this.id,
    this.firstName,
    this.lastName,
    this.addressLine1,
    this.addressLine2,
    this.city,
    this.state,
    this.country,
    this.postCode,
    this.phone,
    this.slug,
    this.images,
    this.longitude,
    this.latitude,
    this.published,
  });

  final _i1.PrismaNullable<int> id;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> firstName;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> lastName;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>>
      addressLine1;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>>
      addressLine2;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> city;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> state;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> country;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> postCode;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> phone;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> slug;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> images;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> longitude;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> latitude;

  final _i1.PrismaNullable<bool> published;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'firstName': firstName,
      'lastName': lastName,
      'addressLine1': addressLine1,
      'addressLine2': addressLine2,
      'city': city,
      'state': state,
      'country': country,
      'postCode': postCode,
      'phone': phone,
      'slug': slug,
      'images': images,
      'longitude': longitude,
      'latitude': latitude,
      'published': published,
    };
  }
}

class PostUpdateWithoutAuthorInput implements _i1.JsonSerializable {
  const PostUpdateWithoutAuthorInput({
    this.title,
    this.slug,
    this.description,
    this.images,
    this.long_description,
    this.longitude,
    this.latitude,
    this.content,
    this.published,
    this.postmeta,
    this.category,
  });

  final _i1.PrismaNullable<StringFieldUpdateOperationsInput> title;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> slug;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput>
      description;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> images;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput>
      long_description;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> longitude;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> latitude;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> content;

  final _i1.PrismaNullable<BoolFieldUpdateOperationsInput> published;

  final _i1.PrismaNullable<PostMetaUpdateManyWithoutPostNestedInput> postmeta;

  final _i1.PrismaNullable<CategoryUpdateManyWithoutPostNestedInput> category;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'title': title,
      'slug': slug,
      'description': description,
      'images': images,
      'long_description': long_description,
      'longitude': longitude,
      'latitude': latitude,
      'content': content,
      'published': published,
      'postmeta': postmeta,
      'category': category,
    };
  }
}

class PostUncheckedUpdateWithoutAuthorInput implements _i1.JsonSerializable {
  const PostUncheckedUpdateWithoutAuthorInput({
    this.id,
    this.title,
    this.slug,
    this.description,
    this.images,
    this.long_description,
    this.longitude,
    this.latitude,
    this.content,
    this.published,
    this.postmeta,
    this.category,
  });

  final _i1.PrismaNullable<IntFieldUpdateOperationsInput> id;

  final _i1.PrismaNullable<StringFieldUpdateOperationsInput> title;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> slug;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput>
      description;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> images;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput>
      long_description;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> longitude;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> latitude;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> content;

  final _i1.PrismaNullable<BoolFieldUpdateOperationsInput> published;

  final _i1.PrismaNullable<PostMetaUncheckedUpdateManyWithoutPostNestedInput>
      postmeta;

  final _i1.PrismaNullable<CategoryUncheckedUpdateManyWithoutPostNestedInput>
      category;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'title': title,
      'slug': slug,
      'description': description,
      'images': images,
      'long_description': long_description,
      'longitude': longitude,
      'latitude': latitude,
      'content': content,
      'published': published,
      'postmeta': postmeta,
      'category': category,
    };
  }
}

class PostUncheckedUpdateManyWithoutPostsInput implements _i1.JsonSerializable {
  const PostUncheckedUpdateManyWithoutPostsInput({
    this.id,
    this.title,
    this.slug,
    this.description,
    this.images,
    this.long_description,
    this.longitude,
    this.latitude,
    this.content,
    this.published,
  });

  final _i1.PrismaNullable<IntFieldUpdateOperationsInput> id;

  final _i1.PrismaNullable<StringFieldUpdateOperationsInput> title;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> slug;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput>
      description;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> images;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput>
      long_description;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> longitude;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> latitude;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> content;

  final _i1.PrismaNullable<BoolFieldUpdateOperationsInput> published;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'title': title,
      'slug': slug,
      'description': description,
      'images': images,
      'long_description': long_description,
      'longitude': longitude,
      'latitude': latitude,
      'content': content,
      'published': published,
    };
  }
}

class ProfileUpdateWithoutUserInput implements _i1.JsonSerializable {
  const ProfileUpdateWithoutUserInput({
    this.firstName,
    this.lastName,
    this.addressLine1,
    this.addressLine2,
    this.city,
    this.state,
    this.country,
    this.postCode,
    this.phone,
    this.slug,
    this.images,
    this.longitude,
    this.latitude,
    this.published,
  });

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> firstName;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> lastName;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput>
      addressLine1;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput>
      addressLine2;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> city;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> state;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> country;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> postCode;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> phone;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> slug;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> images;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> longitude;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> latitude;

  final _i1.PrismaNullable<BoolFieldUpdateOperationsInput> published;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'firstName': firstName,
      'lastName': lastName,
      'addressLine1': addressLine1,
      'addressLine2': addressLine2,
      'city': city,
      'state': state,
      'country': country,
      'postCode': postCode,
      'phone': phone,
      'slug': slug,
      'images': images,
      'longitude': longitude,
      'latitude': latitude,
      'published': published,
    };
  }
}

class ProfileUncheckedUpdateWithoutUserInput implements _i1.JsonSerializable {
  const ProfileUncheckedUpdateWithoutUserInput({
    this.id,
    this.firstName,
    this.lastName,
    this.addressLine1,
    this.addressLine2,
    this.city,
    this.state,
    this.country,
    this.postCode,
    this.phone,
    this.slug,
    this.images,
    this.longitude,
    this.latitude,
    this.published,
  });

  final _i1.PrismaNullable<IntFieldUpdateOperationsInput> id;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> firstName;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> lastName;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput>
      addressLine1;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput>
      addressLine2;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> city;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> state;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> country;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> postCode;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> phone;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> slug;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> images;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> longitude;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> latitude;

  final _i1.PrismaNullable<BoolFieldUpdateOperationsInput> published;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'firstName': firstName,
      'lastName': lastName,
      'addressLine1': addressLine1,
      'addressLine2': addressLine2,
      'city': city,
      'state': state,
      'country': country,
      'postCode': postCode,
      'phone': phone,
      'slug': slug,
      'images': images,
      'longitude': longitude,
      'latitude': latitude,
      'published': published,
    };
  }
}

class ProfileUncheckedUpdateManyWithoutProfileInput
    implements _i1.JsonSerializable {
  const ProfileUncheckedUpdateManyWithoutProfileInput({
    this.id,
    this.firstName,
    this.lastName,
    this.addressLine1,
    this.addressLine2,
    this.city,
    this.state,
    this.country,
    this.postCode,
    this.phone,
    this.slug,
    this.images,
    this.longitude,
    this.latitude,
    this.published,
  });

  final _i1.PrismaNullable<IntFieldUpdateOperationsInput> id;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> firstName;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> lastName;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput>
      addressLine1;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput>
      addressLine2;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> city;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> state;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> country;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> postCode;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> phone;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> slug;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> images;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> longitude;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> latitude;

  final _i1.PrismaNullable<BoolFieldUpdateOperationsInput> published;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'firstName': firstName,
      'lastName': lastName,
      'addressLine1': addressLine1,
      'addressLine2': addressLine2,
      'city': city,
      'state': state,
      'country': country,
      'postCode': postCode,
      'phone': phone,
      'slug': slug,
      'images': images,
      'longitude': longitude,
      'latitude': latitude,
      'published': published,
    };
  }
}

class PostMetaCreateManyPostInput implements _i1.JsonSerializable {
  const PostMetaCreateManyPostInput({
    this.id,
    required this.meta_title,
    this.meta_description,
    this.published,
  });

  final _i1.PrismaNullable<int> id;

  final String meta_title;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>>
      meta_description;

  final _i1.PrismaNullable<bool> published;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'meta_title': meta_title,
      'meta_description': meta_description,
      'published': published,
    };
  }
}

class CategoryCreateManyPostInput implements _i1.JsonSerializable {
  const CategoryCreateManyPostInput({
    this.id,
    required this.name,
    this.slug,
    this.description,
    this.published,
  });

  final _i1.PrismaNullable<int> id;

  final String name;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> slug;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> description;

  final _i1.PrismaNullable<bool> published;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'name': name,
      'slug': slug,
      'description': description,
      'published': published,
    };
  }
}

class PostMetaUpdateWithoutPostInput implements _i1.JsonSerializable {
  const PostMetaUpdateWithoutPostInput({
    this.meta_title,
    this.meta_description,
    this.published,
  });

  final _i1.PrismaNullable<StringFieldUpdateOperationsInput> meta_title;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput>
      meta_description;

  final _i1.PrismaNullable<BoolFieldUpdateOperationsInput> published;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'meta_title': meta_title,
      'meta_description': meta_description,
      'published': published,
    };
  }
}

class PostMetaUncheckedUpdateWithoutPostInput implements _i1.JsonSerializable {
  const PostMetaUncheckedUpdateWithoutPostInput({
    this.id,
    this.meta_title,
    this.meta_description,
    this.published,
  });

  final _i1.PrismaNullable<IntFieldUpdateOperationsInput> id;

  final _i1.PrismaNullable<StringFieldUpdateOperationsInput> meta_title;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput>
      meta_description;

  final _i1.PrismaNullable<BoolFieldUpdateOperationsInput> published;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'meta_title': meta_title,
      'meta_description': meta_description,
      'published': published,
    };
  }
}

class PostMetaUncheckedUpdateManyWithoutPostmetaInput
    implements _i1.JsonSerializable {
  const PostMetaUncheckedUpdateManyWithoutPostmetaInput({
    this.id,
    this.meta_title,
    this.meta_description,
    this.published,
  });

  final _i1.PrismaNullable<IntFieldUpdateOperationsInput> id;

  final _i1.PrismaNullable<StringFieldUpdateOperationsInput> meta_title;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput>
      meta_description;

  final _i1.PrismaNullable<BoolFieldUpdateOperationsInput> published;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'meta_title': meta_title,
      'meta_description': meta_description,
      'published': published,
    };
  }
}

class CategoryUpdateWithoutPostInput implements _i1.JsonSerializable {
  const CategoryUpdateWithoutPostInput({
    this.name,
    this.slug,
    this.description,
    this.published,
    this.amenities,
  });

  final _i1.PrismaNullable<StringFieldUpdateOperationsInput> name;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> slug;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput>
      description;

  final _i1.PrismaNullable<BoolFieldUpdateOperationsInput> published;

  final _i1.PrismaNullable<AmenitiesUpdateManyWithoutCategoryNestedInput>
      amenities;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'name': name,
      'slug': slug,
      'description': description,
      'published': published,
      'amenities': amenities,
    };
  }
}

class CategoryUncheckedUpdateWithoutPostInput implements _i1.JsonSerializable {
  const CategoryUncheckedUpdateWithoutPostInput({
    this.id,
    this.name,
    this.slug,
    this.description,
    this.published,
    this.amenities,
  });

  final _i1.PrismaNullable<IntFieldUpdateOperationsInput> id;

  final _i1.PrismaNullable<StringFieldUpdateOperationsInput> name;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> slug;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput>
      description;

  final _i1.PrismaNullable<BoolFieldUpdateOperationsInput> published;

  final _i1.PrismaNullable<
      AmenitiesUncheckedUpdateManyWithoutCategoryNestedInput> amenities;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'name': name,
      'slug': slug,
      'description': description,
      'published': published,
      'amenities': amenities,
    };
  }
}

class CategoryUncheckedUpdateManyWithoutCategoryInput
    implements _i1.JsonSerializable {
  const CategoryUncheckedUpdateManyWithoutCategoryInput({
    this.id,
    this.name,
    this.slug,
    this.description,
    this.published,
  });

  final _i1.PrismaNullable<IntFieldUpdateOperationsInput> id;

  final _i1.PrismaNullable<StringFieldUpdateOperationsInput> name;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> slug;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput>
      description;

  final _i1.PrismaNullable<BoolFieldUpdateOperationsInput> published;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'name': name,
      'slug': slug,
      'description': description,
      'published': published,
    };
  }
}

class AmenitiesCreateManyCategoryInput implements _i1.JsonSerializable {
  const AmenitiesCreateManyCategoryInput({
    this.id,
    required this.name,
    this.slug,
    this.description,
    this.published,
  });

  final _i1.PrismaNullable<int> id;

  final String name;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> slug;

  final _i1.PrismaNullable<_i1.PrismaUnion<String, _i1.PrismaNull>> description;

  final _i1.PrismaNullable<bool> published;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'name': name,
      'slug': slug,
      'description': description,
      'published': published,
    };
  }
}

class AmenitiesUpdateWithoutCategoryInput implements _i1.JsonSerializable {
  const AmenitiesUpdateWithoutCategoryInput({
    this.name,
    this.slug,
    this.description,
    this.published,
  });

  final _i1.PrismaNullable<StringFieldUpdateOperationsInput> name;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> slug;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput>
      description;

  final _i1.PrismaNullable<BoolFieldUpdateOperationsInput> published;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'name': name,
      'slug': slug,
      'description': description,
      'published': published,
    };
  }
}

class AmenitiesUncheckedUpdateWithoutCategoryInput
    implements _i1.JsonSerializable {
  const AmenitiesUncheckedUpdateWithoutCategoryInput({
    this.id,
    this.name,
    this.slug,
    this.description,
    this.published,
  });

  final _i1.PrismaNullable<IntFieldUpdateOperationsInput> id;

  final _i1.PrismaNullable<StringFieldUpdateOperationsInput> name;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> slug;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput>
      description;

  final _i1.PrismaNullable<BoolFieldUpdateOperationsInput> published;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'name': name,
      'slug': slug,
      'description': description,
      'published': published,
    };
  }
}

class AmenitiesUncheckedUpdateManyWithoutAmenitiesInput
    implements _i1.JsonSerializable {
  const AmenitiesUncheckedUpdateManyWithoutAmenitiesInput({
    this.id,
    this.name,
    this.slug,
    this.description,
    this.published,
  });

  final _i1.PrismaNullable<IntFieldUpdateOperationsInput> id;

  final _i1.PrismaNullable<StringFieldUpdateOperationsInput> name;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput> slug;

  final _i1.PrismaNullable<NullableStringFieldUpdateOperationsInput>
      description;

  final _i1.PrismaNullable<BoolFieldUpdateOperationsInput> published;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'name': name,
      'slug': slug,
      'description': description,
      'published': published,
    };
  }
}

@_i2.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class AggregateUsers implements _i1.JsonSerializable {
  const AggregateUsers({
    this.$count,
    this.$avg,
    this.$sum,
    this.$min,
    this.$max,
  });

  factory AggregateUsers.fromJson(Map<String, dynamic> json) =>
      _$AggregateUsersFromJson(json);

  @_i2.JsonKey(name: '_count')
  final _i1.PrismaNullable<UsersCountAggregateOutputType> $count;

  @_i2.JsonKey(name: '_avg')
  final _i1.PrismaNullable<UsersAvgAggregateOutputType> $avg;

  @_i2.JsonKey(name: '_sum')
  final _i1.PrismaNullable<UsersSumAggregateOutputType> $sum;

  @_i2.JsonKey(name: '_min')
  final _i1.PrismaNullable<UsersMinAggregateOutputType> $min;

  @_i2.JsonKey(name: '_max')
  final _i1.PrismaNullable<UsersMaxAggregateOutputType> $max;

  @override
  Map<String, dynamic> toJson() => _$AggregateUsersToJson(this);
}

@_i2.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class UsersGroupByOutputType implements _i1.JsonSerializable {
  const UsersGroupByOutputType({
    required this.id,
    required this.email,
    required this.role,
    this.password,
    this.fcmtoken,
    this.salt,
    this.$count,
    this.$avg,
    this.$sum,
    this.$min,
    this.$max,
  });

  factory UsersGroupByOutputType.fromJson(Map<String, dynamic> json) =>
      _$UsersGroupByOutputTypeFromJson(json);

  final int id;

  final String email;

  final Role role;

  final _i1.PrismaNullable<String> password;

  final _i1.PrismaNullable<String> fcmtoken;

  final _i1.PrismaNullable<String> salt;

  @_i2.JsonKey(name: '_count')
  final _i1.PrismaNullable<UsersCountAggregateOutputType> $count;

  @_i2.JsonKey(name: '_avg')
  final _i1.PrismaNullable<UsersAvgAggregateOutputType> $avg;

  @_i2.JsonKey(name: '_sum')
  final _i1.PrismaNullable<UsersSumAggregateOutputType> $sum;

  @_i2.JsonKey(name: '_min')
  final _i1.PrismaNullable<UsersMinAggregateOutputType> $min;

  @_i2.JsonKey(name: '_max')
  final _i1.PrismaNullable<UsersMaxAggregateOutputType> $max;

  @override
  Map<String, dynamic> toJson() => _$UsersGroupByOutputTypeToJson(this);
}

@_i2.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class AggregateProfile implements _i1.JsonSerializable {
  const AggregateProfile({
    this.$count,
    this.$avg,
    this.$sum,
    this.$min,
    this.$max,
  });

  factory AggregateProfile.fromJson(Map<String, dynamic> json) =>
      _$AggregateProfileFromJson(json);

  @_i2.JsonKey(name: '_count')
  final _i1.PrismaNullable<ProfileCountAggregateOutputType> $count;

  @_i2.JsonKey(name: '_avg')
  final _i1.PrismaNullable<ProfileAvgAggregateOutputType> $avg;

  @_i2.JsonKey(name: '_sum')
  final _i1.PrismaNullable<ProfileSumAggregateOutputType> $sum;

  @_i2.JsonKey(name: '_min')
  final _i1.PrismaNullable<ProfileMinAggregateOutputType> $min;

  @_i2.JsonKey(name: '_max')
  final _i1.PrismaNullable<ProfileMaxAggregateOutputType> $max;

  @override
  Map<String, dynamic> toJson() => _$AggregateProfileToJson(this);
}

@_i2.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class ProfileGroupByOutputType implements _i1.JsonSerializable {
  const ProfileGroupByOutputType({
    required this.id,
    this.firstName,
    this.lastName,
    this.addressLine1,
    this.addressLine2,
    this.city,
    this.state,
    this.country,
    this.postCode,
    this.phone,
    this.slug,
    this.images,
    this.longitude,
    this.latitude,
    required this.published,
    this.userId,
    this.$count,
    this.$avg,
    this.$sum,
    this.$min,
    this.$max,
  });

  factory ProfileGroupByOutputType.fromJson(Map<String, dynamic> json) =>
      _$ProfileGroupByOutputTypeFromJson(json);

  final int id;

  final _i1.PrismaNullable<String> firstName;

  final _i1.PrismaNullable<String> lastName;

  final _i1.PrismaNullable<String> addressLine1;

  final _i1.PrismaNullable<String> addressLine2;

  final _i1.PrismaNullable<String> city;

  final _i1.PrismaNullable<String> state;

  final _i1.PrismaNullable<String> country;

  final _i1.PrismaNullable<String> postCode;

  final _i1.PrismaNullable<String> phone;

  final _i1.PrismaNullable<String> slug;

  final _i1.PrismaNullable<String> images;

  final _i1.PrismaNullable<String> longitude;

  final _i1.PrismaNullable<String> latitude;

  final bool published;

  final _i1.PrismaNullable<int> userId;

  @_i2.JsonKey(name: '_count')
  final _i1.PrismaNullable<ProfileCountAggregateOutputType> $count;

  @_i2.JsonKey(name: '_avg')
  final _i1.PrismaNullable<ProfileAvgAggregateOutputType> $avg;

  @_i2.JsonKey(name: '_sum')
  final _i1.PrismaNullable<ProfileSumAggregateOutputType> $sum;

  @_i2.JsonKey(name: '_min')
  final _i1.PrismaNullable<ProfileMinAggregateOutputType> $min;

  @_i2.JsonKey(name: '_max')
  final _i1.PrismaNullable<ProfileMaxAggregateOutputType> $max;

  @override
  Map<String, dynamic> toJson() => _$ProfileGroupByOutputTypeToJson(this);
}

@_i2.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class AggregatePost implements _i1.JsonSerializable {
  const AggregatePost({
    this.$count,
    this.$avg,
    this.$sum,
    this.$min,
    this.$max,
  });

  factory AggregatePost.fromJson(Map<String, dynamic> json) =>
      _$AggregatePostFromJson(json);

  @_i2.JsonKey(name: '_count')
  final _i1.PrismaNullable<PostCountAggregateOutputType> $count;

  @_i2.JsonKey(name: '_avg')
  final _i1.PrismaNullable<PostAvgAggregateOutputType> $avg;

  @_i2.JsonKey(name: '_sum')
  final _i1.PrismaNullable<PostSumAggregateOutputType> $sum;

  @_i2.JsonKey(name: '_min')
  final _i1.PrismaNullable<PostMinAggregateOutputType> $min;

  @_i2.JsonKey(name: '_max')
  final _i1.PrismaNullable<PostMaxAggregateOutputType> $max;

  @override
  Map<String, dynamic> toJson() => _$AggregatePostToJson(this);
}

@_i2.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class PostGroupByOutputType implements _i1.JsonSerializable {
  const PostGroupByOutputType({
    required this.id,
    required this.title,
    this.slug,
    this.description,
    this.images,
    this.long_description,
    this.longitude,
    this.latitude,
    this.content,
    required this.published,
    required this.authorId,
    this.$count,
    this.$avg,
    this.$sum,
    this.$min,
    this.$max,
  });

  factory PostGroupByOutputType.fromJson(Map<String, dynamic> json) =>
      _$PostGroupByOutputTypeFromJson(json);

  final int id;

  final String title;

  final _i1.PrismaNullable<String> slug;

  final _i1.PrismaNullable<String> description;

  final _i1.PrismaNullable<String> images;

  final _i1.PrismaNullable<String> long_description;

  final _i1.PrismaNullable<String> longitude;

  final _i1.PrismaNullable<String> latitude;

  final _i1.PrismaNullable<String> content;

  final bool published;

  final int authorId;

  @_i2.JsonKey(name: '_count')
  final _i1.PrismaNullable<PostCountAggregateOutputType> $count;

  @_i2.JsonKey(name: '_avg')
  final _i1.PrismaNullable<PostAvgAggregateOutputType> $avg;

  @_i2.JsonKey(name: '_sum')
  final _i1.PrismaNullable<PostSumAggregateOutputType> $sum;

  @_i2.JsonKey(name: '_min')
  final _i1.PrismaNullable<PostMinAggregateOutputType> $min;

  @_i2.JsonKey(name: '_max')
  final _i1.PrismaNullable<PostMaxAggregateOutputType> $max;

  @override
  Map<String, dynamic> toJson() => _$PostGroupByOutputTypeToJson(this);
}

@_i2.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class AggregatePostMeta implements _i1.JsonSerializable {
  const AggregatePostMeta({
    this.$count,
    this.$avg,
    this.$sum,
    this.$min,
    this.$max,
  });

  factory AggregatePostMeta.fromJson(Map<String, dynamic> json) =>
      _$AggregatePostMetaFromJson(json);

  @_i2.JsonKey(name: '_count')
  final _i1.PrismaNullable<PostMetaCountAggregateOutputType> $count;

  @_i2.JsonKey(name: '_avg')
  final _i1.PrismaNullable<PostMetaAvgAggregateOutputType> $avg;

  @_i2.JsonKey(name: '_sum')
  final _i1.PrismaNullable<PostMetaSumAggregateOutputType> $sum;

  @_i2.JsonKey(name: '_min')
  final _i1.PrismaNullable<PostMetaMinAggregateOutputType> $min;

  @_i2.JsonKey(name: '_max')
  final _i1.PrismaNullable<PostMetaMaxAggregateOutputType> $max;

  @override
  Map<String, dynamic> toJson() => _$AggregatePostMetaToJson(this);
}

@_i2.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class PostMetaGroupByOutputType implements _i1.JsonSerializable {
  const PostMetaGroupByOutputType({
    required this.id,
    required this.meta_title,
    this.meta_description,
    required this.published,
    required this.postId,
    this.$count,
    this.$avg,
    this.$sum,
    this.$min,
    this.$max,
  });

  factory PostMetaGroupByOutputType.fromJson(Map<String, dynamic> json) =>
      _$PostMetaGroupByOutputTypeFromJson(json);

  final int id;

  final String meta_title;

  final _i1.PrismaNullable<String> meta_description;

  final bool published;

  final int postId;

  @_i2.JsonKey(name: '_count')
  final _i1.PrismaNullable<PostMetaCountAggregateOutputType> $count;

  @_i2.JsonKey(name: '_avg')
  final _i1.PrismaNullable<PostMetaAvgAggregateOutputType> $avg;

  @_i2.JsonKey(name: '_sum')
  final _i1.PrismaNullable<PostMetaSumAggregateOutputType> $sum;

  @_i2.JsonKey(name: '_min')
  final _i1.PrismaNullable<PostMetaMinAggregateOutputType> $min;

  @_i2.JsonKey(name: '_max')
  final _i1.PrismaNullable<PostMetaMaxAggregateOutputType> $max;

  @override
  Map<String, dynamic> toJson() => _$PostMetaGroupByOutputTypeToJson(this);
}

@_i2.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class AggregateAmenities implements _i1.JsonSerializable {
  const AggregateAmenities({
    this.$count,
    this.$avg,
    this.$sum,
    this.$min,
    this.$max,
  });

  factory AggregateAmenities.fromJson(Map<String, dynamic> json) =>
      _$AggregateAmenitiesFromJson(json);

  @_i2.JsonKey(name: '_count')
  final _i1.PrismaNullable<AmenitiesCountAggregateOutputType> $count;

  @_i2.JsonKey(name: '_avg')
  final _i1.PrismaNullable<AmenitiesAvgAggregateOutputType> $avg;

  @_i2.JsonKey(name: '_sum')
  final _i1.PrismaNullable<AmenitiesSumAggregateOutputType> $sum;

  @_i2.JsonKey(name: '_min')
  final _i1.PrismaNullable<AmenitiesMinAggregateOutputType> $min;

  @_i2.JsonKey(name: '_max')
  final _i1.PrismaNullable<AmenitiesMaxAggregateOutputType> $max;

  @override
  Map<String, dynamic> toJson() => _$AggregateAmenitiesToJson(this);
}

@_i2.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class AmenitiesGroupByOutputType implements _i1.JsonSerializable {
  const AmenitiesGroupByOutputType({
    required this.id,
    required this.name,
    this.slug,
    this.description,
    required this.published,
    required this.categoryId,
    this.$count,
    this.$avg,
    this.$sum,
    this.$min,
    this.$max,
  });

  factory AmenitiesGroupByOutputType.fromJson(Map<String, dynamic> json) =>
      _$AmenitiesGroupByOutputTypeFromJson(json);

  final int id;

  final String name;

  final _i1.PrismaNullable<String> slug;

  final _i1.PrismaNullable<String> description;

  final bool published;

  final int categoryId;

  @_i2.JsonKey(name: '_count')
  final _i1.PrismaNullable<AmenitiesCountAggregateOutputType> $count;

  @_i2.JsonKey(name: '_avg')
  final _i1.PrismaNullable<AmenitiesAvgAggregateOutputType> $avg;

  @_i2.JsonKey(name: '_sum')
  final _i1.PrismaNullable<AmenitiesSumAggregateOutputType> $sum;

  @_i2.JsonKey(name: '_min')
  final _i1.PrismaNullable<AmenitiesMinAggregateOutputType> $min;

  @_i2.JsonKey(name: '_max')
  final _i1.PrismaNullable<AmenitiesMaxAggregateOutputType> $max;

  @override
  Map<String, dynamic> toJson() => _$AmenitiesGroupByOutputTypeToJson(this);
}

@_i2.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class AggregateCategory implements _i1.JsonSerializable {
  const AggregateCategory({
    this.$count,
    this.$avg,
    this.$sum,
    this.$min,
    this.$max,
  });

  factory AggregateCategory.fromJson(Map<String, dynamic> json) =>
      _$AggregateCategoryFromJson(json);

  @_i2.JsonKey(name: '_count')
  final _i1.PrismaNullable<CategoryCountAggregateOutputType> $count;

  @_i2.JsonKey(name: '_avg')
  final _i1.PrismaNullable<CategoryAvgAggregateOutputType> $avg;

  @_i2.JsonKey(name: '_sum')
  final _i1.PrismaNullable<CategorySumAggregateOutputType> $sum;

  @_i2.JsonKey(name: '_min')
  final _i1.PrismaNullable<CategoryMinAggregateOutputType> $min;

  @_i2.JsonKey(name: '_max')
  final _i1.PrismaNullable<CategoryMaxAggregateOutputType> $max;

  @override
  Map<String, dynamic> toJson() => _$AggregateCategoryToJson(this);
}

@_i2.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class CategoryGroupByOutputType implements _i1.JsonSerializable {
  const CategoryGroupByOutputType({
    required this.id,
    required this.name,
    this.slug,
    this.description,
    required this.published,
    required this.postId,
    this.$count,
    this.$avg,
    this.$sum,
    this.$min,
    this.$max,
  });

  factory CategoryGroupByOutputType.fromJson(Map<String, dynamic> json) =>
      _$CategoryGroupByOutputTypeFromJson(json);

  final int id;

  final String name;

  final _i1.PrismaNullable<String> slug;

  final _i1.PrismaNullable<String> description;

  final bool published;

  final int postId;

  @_i2.JsonKey(name: '_count')
  final _i1.PrismaNullable<CategoryCountAggregateOutputType> $count;

  @_i2.JsonKey(name: '_avg')
  final _i1.PrismaNullable<CategoryAvgAggregateOutputType> $avg;

  @_i2.JsonKey(name: '_sum')
  final _i1.PrismaNullable<CategorySumAggregateOutputType> $sum;

  @_i2.JsonKey(name: '_min')
  final _i1.PrismaNullable<CategoryMinAggregateOutputType> $min;

  @_i2.JsonKey(name: '_max')
  final _i1.PrismaNullable<CategoryMaxAggregateOutputType> $max;

  @override
  Map<String, dynamic> toJson() => _$CategoryGroupByOutputTypeToJson(this);
}

@_i2.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class AffectedRowsOutput implements _i1.JsonSerializable {
  const AffectedRowsOutput({required this.count});

  factory AffectedRowsOutput.fromJson(Map<String, dynamic> json) =>
      _$AffectedRowsOutputFromJson(json);

  final int count;

  @override
  Map<String, dynamic> toJson() => _$AffectedRowsOutputToJson(this);
}

@_i2.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class UsersCountOutputType implements _i1.JsonSerializable {
  const UsersCountOutputType({
    required this.posts,
    required this.Profile,
  });

  factory UsersCountOutputType.fromJson(Map<String, dynamic> json) =>
      _$UsersCountOutputTypeFromJson(json);

  final int posts;

  final int Profile;

  @override
  Map<String, dynamic> toJson() => _$UsersCountOutputTypeToJson(this);
}

@_i2.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class UsersCountAggregateOutputType implements _i1.JsonSerializable {
  const UsersCountAggregateOutputType({
    required this.id,
    required this.email,
    required this.role,
    required this.password,
    required this.fcmtoken,
    required this.salt,
    required this.$all,
  });

  factory UsersCountAggregateOutputType.fromJson(Map<String, dynamic> json) =>
      _$UsersCountAggregateOutputTypeFromJson(json);

  final int id;

  final int email;

  final int role;

  final int password;

  final int fcmtoken;

  final int salt;

  @_i2.JsonKey(name: '_all')
  final int $all;

  @override
  Map<String, dynamic> toJson() => _$UsersCountAggregateOutputTypeToJson(this);
}

@_i2.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class UsersAvgAggregateOutputType implements _i1.JsonSerializable {
  const UsersAvgAggregateOutputType({this.id});

  factory UsersAvgAggregateOutputType.fromJson(Map<String, dynamic> json) =>
      _$UsersAvgAggregateOutputTypeFromJson(json);

  final _i1.PrismaNullable<double> id;

  @override
  Map<String, dynamic> toJson() => _$UsersAvgAggregateOutputTypeToJson(this);
}

@_i2.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class UsersSumAggregateOutputType implements _i1.JsonSerializable {
  const UsersSumAggregateOutputType({this.id});

  factory UsersSumAggregateOutputType.fromJson(Map<String, dynamic> json) =>
      _$UsersSumAggregateOutputTypeFromJson(json);

  final _i1.PrismaNullable<int> id;

  @override
  Map<String, dynamic> toJson() => _$UsersSumAggregateOutputTypeToJson(this);
}

@_i2.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class UsersMinAggregateOutputType implements _i1.JsonSerializable {
  const UsersMinAggregateOutputType({
    this.id,
    this.email,
    this.role,
    this.password,
    this.fcmtoken,
    this.salt,
  });

  factory UsersMinAggregateOutputType.fromJson(Map<String, dynamic> json) =>
      _$UsersMinAggregateOutputTypeFromJson(json);

  final _i1.PrismaNullable<int> id;

  final _i1.PrismaNullable<String> email;

  final _i1.PrismaNullable<Role> role;

  final _i1.PrismaNullable<String> password;

  final _i1.PrismaNullable<String> fcmtoken;

  final _i1.PrismaNullable<String> salt;

  @override
  Map<String, dynamic> toJson() => _$UsersMinAggregateOutputTypeToJson(this);
}

@_i2.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class UsersMaxAggregateOutputType implements _i1.JsonSerializable {
  const UsersMaxAggregateOutputType({
    this.id,
    this.email,
    this.role,
    this.password,
    this.fcmtoken,
    this.salt,
  });

  factory UsersMaxAggregateOutputType.fromJson(Map<String, dynamic> json) =>
      _$UsersMaxAggregateOutputTypeFromJson(json);

  final _i1.PrismaNullable<int> id;

  final _i1.PrismaNullable<String> email;

  final _i1.PrismaNullable<Role> role;

  final _i1.PrismaNullable<String> password;

  final _i1.PrismaNullable<String> fcmtoken;

  final _i1.PrismaNullable<String> salt;

  @override
  Map<String, dynamic> toJson() => _$UsersMaxAggregateOutputTypeToJson(this);
}

@_i2.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class ProfileCountAggregateOutputType implements _i1.JsonSerializable {
  const ProfileCountAggregateOutputType({
    required this.id,
    required this.firstName,
    required this.lastName,
    required this.addressLine1,
    required this.addressLine2,
    required this.city,
    required this.state,
    required this.country,
    required this.postCode,
    required this.phone,
    required this.slug,
    required this.images,
    required this.longitude,
    required this.latitude,
    required this.published,
    required this.userId,
    required this.$all,
  });

  factory ProfileCountAggregateOutputType.fromJson(Map<String, dynamic> json) =>
      _$ProfileCountAggregateOutputTypeFromJson(json);

  final int id;

  final int firstName;

  final int lastName;

  final int addressLine1;

  final int addressLine2;

  final int city;

  final int state;

  final int country;

  final int postCode;

  final int phone;

  final int slug;

  final int images;

  final int longitude;

  final int latitude;

  final int published;

  final int userId;

  @_i2.JsonKey(name: '_all')
  final int $all;

  @override
  Map<String, dynamic> toJson() =>
      _$ProfileCountAggregateOutputTypeToJson(this);
}

@_i2.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class ProfileAvgAggregateOutputType implements _i1.JsonSerializable {
  const ProfileAvgAggregateOutputType({
    this.id,
    this.userId,
  });

  factory ProfileAvgAggregateOutputType.fromJson(Map<String, dynamic> json) =>
      _$ProfileAvgAggregateOutputTypeFromJson(json);

  final _i1.PrismaNullable<double> id;

  final _i1.PrismaNullable<double> userId;

  @override
  Map<String, dynamic> toJson() => _$ProfileAvgAggregateOutputTypeToJson(this);
}

@_i2.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class ProfileSumAggregateOutputType implements _i1.JsonSerializable {
  const ProfileSumAggregateOutputType({
    this.id,
    this.userId,
  });

  factory ProfileSumAggregateOutputType.fromJson(Map<String, dynamic> json) =>
      _$ProfileSumAggregateOutputTypeFromJson(json);

  final _i1.PrismaNullable<int> id;

  final _i1.PrismaNullable<int> userId;

  @override
  Map<String, dynamic> toJson() => _$ProfileSumAggregateOutputTypeToJson(this);
}

@_i2.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class ProfileMinAggregateOutputType implements _i1.JsonSerializable {
  const ProfileMinAggregateOutputType({
    this.id,
    this.firstName,
    this.lastName,
    this.addressLine1,
    this.addressLine2,
    this.city,
    this.state,
    this.country,
    this.postCode,
    this.phone,
    this.slug,
    this.images,
    this.longitude,
    this.latitude,
    this.published,
    this.userId,
  });

  factory ProfileMinAggregateOutputType.fromJson(Map<String, dynamic> json) =>
      _$ProfileMinAggregateOutputTypeFromJson(json);

  final _i1.PrismaNullable<int> id;

  final _i1.PrismaNullable<String> firstName;

  final _i1.PrismaNullable<String> lastName;

  final _i1.PrismaNullable<String> addressLine1;

  final _i1.PrismaNullable<String> addressLine2;

  final _i1.PrismaNullable<String> city;

  final _i1.PrismaNullable<String> state;

  final _i1.PrismaNullable<String> country;

  final _i1.PrismaNullable<String> postCode;

  final _i1.PrismaNullable<String> phone;

  final _i1.PrismaNullable<String> slug;

  final _i1.PrismaNullable<String> images;

  final _i1.PrismaNullable<String> longitude;

  final _i1.PrismaNullable<String> latitude;

  final _i1.PrismaNullable<bool> published;

  final _i1.PrismaNullable<int> userId;

  @override
  Map<String, dynamic> toJson() => _$ProfileMinAggregateOutputTypeToJson(this);
}

@_i2.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class ProfileMaxAggregateOutputType implements _i1.JsonSerializable {
  const ProfileMaxAggregateOutputType({
    this.id,
    this.firstName,
    this.lastName,
    this.addressLine1,
    this.addressLine2,
    this.city,
    this.state,
    this.country,
    this.postCode,
    this.phone,
    this.slug,
    this.images,
    this.longitude,
    this.latitude,
    this.published,
    this.userId,
  });

  factory ProfileMaxAggregateOutputType.fromJson(Map<String, dynamic> json) =>
      _$ProfileMaxAggregateOutputTypeFromJson(json);

  final _i1.PrismaNullable<int> id;

  final _i1.PrismaNullable<String> firstName;

  final _i1.PrismaNullable<String> lastName;

  final _i1.PrismaNullable<String> addressLine1;

  final _i1.PrismaNullable<String> addressLine2;

  final _i1.PrismaNullable<String> city;

  final _i1.PrismaNullable<String> state;

  final _i1.PrismaNullable<String> country;

  final _i1.PrismaNullable<String> postCode;

  final _i1.PrismaNullable<String> phone;

  final _i1.PrismaNullable<String> slug;

  final _i1.PrismaNullable<String> images;

  final _i1.PrismaNullable<String> longitude;

  final _i1.PrismaNullable<String> latitude;

  final _i1.PrismaNullable<bool> published;

  final _i1.PrismaNullable<int> userId;

  @override
  Map<String, dynamic> toJson() => _$ProfileMaxAggregateOutputTypeToJson(this);
}

@_i2.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class PostCountOutputType implements _i1.JsonSerializable {
  const PostCountOutputType({
    required this.postmeta,
    required this.category,
  });

  factory PostCountOutputType.fromJson(Map<String, dynamic> json) =>
      _$PostCountOutputTypeFromJson(json);

  final int postmeta;

  final int category;

  @override
  Map<String, dynamic> toJson() => _$PostCountOutputTypeToJson(this);
}

@_i2.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class PostCountAggregateOutputType implements _i1.JsonSerializable {
  const PostCountAggregateOutputType({
    required this.id,
    required this.title,
    required this.slug,
    required this.description,
    required this.images,
    required this.long_description,
    required this.longitude,
    required this.latitude,
    required this.content,
    required this.published,
    required this.authorId,
    required this.$all,
  });

  factory PostCountAggregateOutputType.fromJson(Map<String, dynamic> json) =>
      _$PostCountAggregateOutputTypeFromJson(json);

  final int id;

  final int title;

  final int slug;

  final int description;

  final int images;

  final int long_description;

  final int longitude;

  final int latitude;

  final int content;

  final int published;

  final int authorId;

  @_i2.JsonKey(name: '_all')
  final int $all;

  @override
  Map<String, dynamic> toJson() => _$PostCountAggregateOutputTypeToJson(this);
}

@_i2.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class PostAvgAggregateOutputType implements _i1.JsonSerializable {
  const PostAvgAggregateOutputType({
    this.id,
    this.authorId,
  });

  factory PostAvgAggregateOutputType.fromJson(Map<String, dynamic> json) =>
      _$PostAvgAggregateOutputTypeFromJson(json);

  final _i1.PrismaNullable<double> id;

  final _i1.PrismaNullable<double> authorId;

  @override
  Map<String, dynamic> toJson() => _$PostAvgAggregateOutputTypeToJson(this);
}

@_i2.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class PostSumAggregateOutputType implements _i1.JsonSerializable {
  const PostSumAggregateOutputType({
    this.id,
    this.authorId,
  });

  factory PostSumAggregateOutputType.fromJson(Map<String, dynamic> json) =>
      _$PostSumAggregateOutputTypeFromJson(json);

  final _i1.PrismaNullable<int> id;

  final _i1.PrismaNullable<int> authorId;

  @override
  Map<String, dynamic> toJson() => _$PostSumAggregateOutputTypeToJson(this);
}

@_i2.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class PostMinAggregateOutputType implements _i1.JsonSerializable {
  const PostMinAggregateOutputType({
    this.id,
    this.title,
    this.slug,
    this.description,
    this.images,
    this.long_description,
    this.longitude,
    this.latitude,
    this.content,
    this.published,
    this.authorId,
  });

  factory PostMinAggregateOutputType.fromJson(Map<String, dynamic> json) =>
      _$PostMinAggregateOutputTypeFromJson(json);

  final _i1.PrismaNullable<int> id;

  final _i1.PrismaNullable<String> title;

  final _i1.PrismaNullable<String> slug;

  final _i1.PrismaNullable<String> description;

  final _i1.PrismaNullable<String> images;

  final _i1.PrismaNullable<String> long_description;

  final _i1.PrismaNullable<String> longitude;

  final _i1.PrismaNullable<String> latitude;

  final _i1.PrismaNullable<String> content;

  final _i1.PrismaNullable<bool> published;

  final _i1.PrismaNullable<int> authorId;

  @override
  Map<String, dynamic> toJson() => _$PostMinAggregateOutputTypeToJson(this);
}

@_i2.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class PostMaxAggregateOutputType implements _i1.JsonSerializable {
  const PostMaxAggregateOutputType({
    this.id,
    this.title,
    this.slug,
    this.description,
    this.images,
    this.long_description,
    this.longitude,
    this.latitude,
    this.content,
    this.published,
    this.authorId,
  });

  factory PostMaxAggregateOutputType.fromJson(Map<String, dynamic> json) =>
      _$PostMaxAggregateOutputTypeFromJson(json);

  final _i1.PrismaNullable<int> id;

  final _i1.PrismaNullable<String> title;

  final _i1.PrismaNullable<String> slug;

  final _i1.PrismaNullable<String> description;

  final _i1.PrismaNullable<String> images;

  final _i1.PrismaNullable<String> long_description;

  final _i1.PrismaNullable<String> longitude;

  final _i1.PrismaNullable<String> latitude;

  final _i1.PrismaNullable<String> content;

  final _i1.PrismaNullable<bool> published;

  final _i1.PrismaNullable<int> authorId;

  @override
  Map<String, dynamic> toJson() => _$PostMaxAggregateOutputTypeToJson(this);
}

@_i2.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class PostMetaCountAggregateOutputType implements _i1.JsonSerializable {
  const PostMetaCountAggregateOutputType({
    required this.id,
    required this.meta_title,
    required this.meta_description,
    required this.published,
    required this.postId,
    required this.$all,
  });

  factory PostMetaCountAggregateOutputType.fromJson(
          Map<String, dynamic> json) =>
      _$PostMetaCountAggregateOutputTypeFromJson(json);

  final int id;

  final int meta_title;

  final int meta_description;

  final int published;

  final int postId;

  @_i2.JsonKey(name: '_all')
  final int $all;

  @override
  Map<String, dynamic> toJson() =>
      _$PostMetaCountAggregateOutputTypeToJson(this);
}

@_i2.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class PostMetaAvgAggregateOutputType implements _i1.JsonSerializable {
  const PostMetaAvgAggregateOutputType({
    this.id,
    this.postId,
  });

  factory PostMetaAvgAggregateOutputType.fromJson(Map<String, dynamic> json) =>
      _$PostMetaAvgAggregateOutputTypeFromJson(json);

  final _i1.PrismaNullable<double> id;

  final _i1.PrismaNullable<double> postId;

  @override
  Map<String, dynamic> toJson() => _$PostMetaAvgAggregateOutputTypeToJson(this);
}

@_i2.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class PostMetaSumAggregateOutputType implements _i1.JsonSerializable {
  const PostMetaSumAggregateOutputType({
    this.id,
    this.postId,
  });

  factory PostMetaSumAggregateOutputType.fromJson(Map<String, dynamic> json) =>
      _$PostMetaSumAggregateOutputTypeFromJson(json);

  final _i1.PrismaNullable<int> id;

  final _i1.PrismaNullable<int> postId;

  @override
  Map<String, dynamic> toJson() => _$PostMetaSumAggregateOutputTypeToJson(this);
}

@_i2.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class PostMetaMinAggregateOutputType implements _i1.JsonSerializable {
  const PostMetaMinAggregateOutputType({
    this.id,
    this.meta_title,
    this.meta_description,
    this.published,
    this.postId,
  });

  factory PostMetaMinAggregateOutputType.fromJson(Map<String, dynamic> json) =>
      _$PostMetaMinAggregateOutputTypeFromJson(json);

  final _i1.PrismaNullable<int> id;

  final _i1.PrismaNullable<String> meta_title;

  final _i1.PrismaNullable<String> meta_description;

  final _i1.PrismaNullable<bool> published;

  final _i1.PrismaNullable<int> postId;

  @override
  Map<String, dynamic> toJson() => _$PostMetaMinAggregateOutputTypeToJson(this);
}

@_i2.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class PostMetaMaxAggregateOutputType implements _i1.JsonSerializable {
  const PostMetaMaxAggregateOutputType({
    this.id,
    this.meta_title,
    this.meta_description,
    this.published,
    this.postId,
  });

  factory PostMetaMaxAggregateOutputType.fromJson(Map<String, dynamic> json) =>
      _$PostMetaMaxAggregateOutputTypeFromJson(json);

  final _i1.PrismaNullable<int> id;

  final _i1.PrismaNullable<String> meta_title;

  final _i1.PrismaNullable<String> meta_description;

  final _i1.PrismaNullable<bool> published;

  final _i1.PrismaNullable<int> postId;

  @override
  Map<String, dynamic> toJson() => _$PostMetaMaxAggregateOutputTypeToJson(this);
}

@_i2.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class AmenitiesCountAggregateOutputType implements _i1.JsonSerializable {
  const AmenitiesCountAggregateOutputType({
    required this.id,
    required this.name,
    required this.slug,
    required this.description,
    required this.published,
    required this.categoryId,
    required this.$all,
  });

  factory AmenitiesCountAggregateOutputType.fromJson(
          Map<String, dynamic> json) =>
      _$AmenitiesCountAggregateOutputTypeFromJson(json);

  final int id;

  final int name;

  final int slug;

  final int description;

  final int published;

  final int categoryId;

  @_i2.JsonKey(name: '_all')
  final int $all;

  @override
  Map<String, dynamic> toJson() =>
      _$AmenitiesCountAggregateOutputTypeToJson(this);
}

@_i2.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class AmenitiesAvgAggregateOutputType implements _i1.JsonSerializable {
  const AmenitiesAvgAggregateOutputType({
    this.id,
    this.categoryId,
  });

  factory AmenitiesAvgAggregateOutputType.fromJson(Map<String, dynamic> json) =>
      _$AmenitiesAvgAggregateOutputTypeFromJson(json);

  final _i1.PrismaNullable<double> id;

  final _i1.PrismaNullable<double> categoryId;

  @override
  Map<String, dynamic> toJson() =>
      _$AmenitiesAvgAggregateOutputTypeToJson(this);
}

@_i2.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class AmenitiesSumAggregateOutputType implements _i1.JsonSerializable {
  const AmenitiesSumAggregateOutputType({
    this.id,
    this.categoryId,
  });

  factory AmenitiesSumAggregateOutputType.fromJson(Map<String, dynamic> json) =>
      _$AmenitiesSumAggregateOutputTypeFromJson(json);

  final _i1.PrismaNullable<int> id;

  final _i1.PrismaNullable<int> categoryId;

  @override
  Map<String, dynamic> toJson() =>
      _$AmenitiesSumAggregateOutputTypeToJson(this);
}

@_i2.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class AmenitiesMinAggregateOutputType implements _i1.JsonSerializable {
  const AmenitiesMinAggregateOutputType({
    this.id,
    this.name,
    this.slug,
    this.description,
    this.published,
    this.categoryId,
  });

  factory AmenitiesMinAggregateOutputType.fromJson(Map<String, dynamic> json) =>
      _$AmenitiesMinAggregateOutputTypeFromJson(json);

  final _i1.PrismaNullable<int> id;

  final _i1.PrismaNullable<String> name;

  final _i1.PrismaNullable<String> slug;

  final _i1.PrismaNullable<String> description;

  final _i1.PrismaNullable<bool> published;

  final _i1.PrismaNullable<int> categoryId;

  @override
  Map<String, dynamic> toJson() =>
      _$AmenitiesMinAggregateOutputTypeToJson(this);
}

@_i2.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class AmenitiesMaxAggregateOutputType implements _i1.JsonSerializable {
  const AmenitiesMaxAggregateOutputType({
    this.id,
    this.name,
    this.slug,
    this.description,
    this.published,
    this.categoryId,
  });

  factory AmenitiesMaxAggregateOutputType.fromJson(Map<String, dynamic> json) =>
      _$AmenitiesMaxAggregateOutputTypeFromJson(json);

  final _i1.PrismaNullable<int> id;

  final _i1.PrismaNullable<String> name;

  final _i1.PrismaNullable<String> slug;

  final _i1.PrismaNullable<String> description;

  final _i1.PrismaNullable<bool> published;

  final _i1.PrismaNullable<int> categoryId;

  @override
  Map<String, dynamic> toJson() =>
      _$AmenitiesMaxAggregateOutputTypeToJson(this);
}

@_i2.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class CategoryCountOutputType implements _i1.JsonSerializable {
  const CategoryCountOutputType({required this.amenities});

  factory CategoryCountOutputType.fromJson(Map<String, dynamic> json) =>
      _$CategoryCountOutputTypeFromJson(json);

  final int amenities;

  @override
  Map<String, dynamic> toJson() => _$CategoryCountOutputTypeToJson(this);
}

@_i2.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class CategoryCountAggregateOutputType implements _i1.JsonSerializable {
  const CategoryCountAggregateOutputType({
    required this.id,
    required this.name,
    required this.slug,
    required this.description,
    required this.published,
    required this.postId,
    required this.$all,
  });

  factory CategoryCountAggregateOutputType.fromJson(
          Map<String, dynamic> json) =>
      _$CategoryCountAggregateOutputTypeFromJson(json);

  final int id;

  final int name;

  final int slug;

  final int description;

  final int published;

  final int postId;

  @_i2.JsonKey(name: '_all')
  final int $all;

  @override
  Map<String, dynamic> toJson() =>
      _$CategoryCountAggregateOutputTypeToJson(this);
}

@_i2.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class CategoryAvgAggregateOutputType implements _i1.JsonSerializable {
  const CategoryAvgAggregateOutputType({
    this.id,
    this.postId,
  });

  factory CategoryAvgAggregateOutputType.fromJson(Map<String, dynamic> json) =>
      _$CategoryAvgAggregateOutputTypeFromJson(json);

  final _i1.PrismaNullable<double> id;

  final _i1.PrismaNullable<double> postId;

  @override
  Map<String, dynamic> toJson() => _$CategoryAvgAggregateOutputTypeToJson(this);
}

@_i2.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class CategorySumAggregateOutputType implements _i1.JsonSerializable {
  const CategorySumAggregateOutputType({
    this.id,
    this.postId,
  });

  factory CategorySumAggregateOutputType.fromJson(Map<String, dynamic> json) =>
      _$CategorySumAggregateOutputTypeFromJson(json);

  final _i1.PrismaNullable<int> id;

  final _i1.PrismaNullable<int> postId;

  @override
  Map<String, dynamic> toJson() => _$CategorySumAggregateOutputTypeToJson(this);
}

@_i2.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class CategoryMinAggregateOutputType implements _i1.JsonSerializable {
  const CategoryMinAggregateOutputType({
    this.id,
    this.name,
    this.slug,
    this.description,
    this.published,
    this.postId,
  });

  factory CategoryMinAggregateOutputType.fromJson(Map<String, dynamic> json) =>
      _$CategoryMinAggregateOutputTypeFromJson(json);

  final _i1.PrismaNullable<int> id;

  final _i1.PrismaNullable<String> name;

  final _i1.PrismaNullable<String> slug;

  final _i1.PrismaNullable<String> description;

  final _i1.PrismaNullable<bool> published;

  final _i1.PrismaNullable<int> postId;

  @override
  Map<String, dynamic> toJson() => _$CategoryMinAggregateOutputTypeToJson(this);
}

@_i2.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class CategoryMaxAggregateOutputType implements _i1.JsonSerializable {
  const CategoryMaxAggregateOutputType({
    this.id,
    this.name,
    this.slug,
    this.description,
    this.published,
    this.postId,
  });

  factory CategoryMaxAggregateOutputType.fromJson(Map<String, dynamic> json) =>
      _$CategoryMaxAggregateOutputTypeFromJson(json);

  final _i1.PrismaNullable<int> id;

  final _i1.PrismaNullable<String> name;

  final _i1.PrismaNullable<String> slug;

  final _i1.PrismaNullable<String> description;

  final _i1.PrismaNullable<bool> published;

  final _i1.PrismaNullable<int> postId;

  @override
  Map<String, dynamic> toJson() => _$CategoryMaxAggregateOutputTypeToJson(this);
}

@_i2.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class Users implements _i1.JsonSerializable {
  const Users({
    required this.id,
    required this.email,
    required this.role,
    this.password,
    this.fcmtoken,
    this.salt,
  });

  factory Users.fromJson(Map<String, dynamic> json) => _$UsersFromJson(json);

  final int id;

  final String email;

  final Role role;

  final _i1.PrismaNullable<String> password;

  final _i1.PrismaNullable<String> fcmtoken;

  final _i1.PrismaNullable<String> salt;

  @override
  Map<String, dynamic> toJson() => _$UsersToJson(this);
}

@_i2.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class Profile implements _i1.JsonSerializable {
  const Profile({
    required this.id,
    this.firstName,
    this.lastName,
    this.addressLine1,
    this.addressLine2,
    this.city,
    this.state,
    this.country,
    this.postCode,
    this.phone,
    this.slug,
    this.images,
    this.longitude,
    this.latitude,
    required this.published,
    this.userId,
  });

  factory Profile.fromJson(Map<String, dynamic> json) =>
      _$ProfileFromJson(json);

  final int id;

  final _i1.PrismaNullable<String> firstName;

  final _i1.PrismaNullable<String> lastName;

  final _i1.PrismaNullable<String> addressLine1;

  final _i1.PrismaNullable<String> addressLine2;

  final _i1.PrismaNullable<String> city;

  final _i1.PrismaNullable<String> state;

  final _i1.PrismaNullable<String> country;

  final _i1.PrismaNullable<String> postCode;

  final _i1.PrismaNullable<String> phone;

  final _i1.PrismaNullable<String> slug;

  final _i1.PrismaNullable<String> images;

  final _i1.PrismaNullable<String> longitude;

  final _i1.PrismaNullable<String> latitude;

  final bool published;

  final _i1.PrismaNullable<int> userId;

  @override
  Map<String, dynamic> toJson() => _$ProfileToJson(this);
}

@_i2.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class Post implements _i1.JsonSerializable {
  const Post({
    required this.id,
    required this.title,
    this.slug,
    this.description,
    this.images,
    this.long_description,
    this.longitude,
    this.latitude,
    this.content,
    required this.published,
    required this.authorId,
  });

  factory Post.fromJson(Map<String, dynamic> json) => _$PostFromJson(json);

  final int id;

  final String title;

  final _i1.PrismaNullable<String> slug;

  final _i1.PrismaNullable<String> description;

  final _i1.PrismaNullable<String> images;

  final _i1.PrismaNullable<String> long_description;

  final _i1.PrismaNullable<String> longitude;

  final _i1.PrismaNullable<String> latitude;

  final _i1.PrismaNullable<String> content;

  final bool published;

  final int authorId;

  @override
  Map<String, dynamic> toJson() => _$PostToJson(this);
}

@_i2.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class PostMeta implements _i1.JsonSerializable {
  const PostMeta({
    required this.id,
    required this.meta_title,
    this.meta_description,
    required this.published,
    required this.postId,
  });

  factory PostMeta.fromJson(Map<String, dynamic> json) =>
      _$PostMetaFromJson(json);

  final int id;

  final String meta_title;

  final _i1.PrismaNullable<String> meta_description;

  final bool published;

  final int postId;

  @override
  Map<String, dynamic> toJson() => _$PostMetaToJson(this);
}

@_i2.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class Amenities implements _i1.JsonSerializable {
  const Amenities({
    required this.id,
    required this.name,
    this.slug,
    this.description,
    required this.published,
    required this.categoryId,
  });

  factory Amenities.fromJson(Map<String, dynamic> json) =>
      _$AmenitiesFromJson(json);

  final int id;

  final String name;

  final _i1.PrismaNullable<String> slug;

  final _i1.PrismaNullable<String> description;

  final bool published;

  final int categoryId;

  @override
  Map<String, dynamic> toJson() => _$AmenitiesToJson(this);
}

@_i2.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class Category implements _i1.JsonSerializable {
  const Category({
    required this.id,
    required this.name,
    this.slug,
    this.description,
    required this.published,
    required this.postId,
  });

  factory Category.fromJson(Map<String, dynamic> json) =>
      _$CategoryFromJson(json);

  final int id;

  final String name;

  final _i1.PrismaNullable<String> slug;

  final _i1.PrismaNullable<String> description;

  final bool published;

  final int postId;

  @override
  Map<String, dynamic> toJson() => _$CategoryToJson(this);
}

class UsersDelegate {
  const UsersDelegate._(
    this._engine, [
    this._headers,
  ]);

  final _i1.Engine _engine;

  final _i1.PrismaNullable<_i1.QueryEngineRequestHeaders> _headers;

  Future<_i1.PrismaNullable<Users>> findUnique(
      {required UsersWhereUniqueInput where}) async {
    final String sdl = _i1.GraphQLField(
      'query',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'findUniqueUsers',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: true,
            )
          ]),
          fields: _i1.GraphQLFields(UsersScalarFieldEnum.values
              .map((UsersScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return result.data['findUniqueUsers'] == null
        ? null
        : Users.fromJson((result.data['findUniqueUsers'] as Map).cast());
  }

  Future<_i1.PrismaNullable<Users>> findFirst({
    _i1.PrismaNullable<UsersWhereInput> where,
    _i1.PrismaNullable<List<UsersOrderByWithRelationInput>> orderBy,
    _i1.PrismaNullable<UsersWhereUniqueInput> cursor,
    _i1.PrismaNullable<int> take,
    _i1.PrismaNullable<int> skip,
    _i1.PrismaNullable<List<UsersScalarFieldEnum>> distinct,
  }) async {
    final String sdl = _i1.GraphQLField(
      'query',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'findFirstUsers',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'orderBy',
              orderBy,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'cursor',
              cursor,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'take',
              take,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'skip',
              skip,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'distinct',
              distinct,
              isRequired: false,
            ),
          ]),
          fields: _i1.GraphQLFields(UsersScalarFieldEnum.values
              .map((UsersScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return result.data['findFirstUsers'] == null
        ? null
        : Users.fromJson((result.data['findFirstUsers'] as Map).cast());
  }

  Future<List<Users>> findMany({
    _i1.PrismaNullable<UsersWhereInput> where,
    _i1.PrismaNullable<List<UsersOrderByWithRelationInput>> orderBy,
    _i1.PrismaNullable<UsersWhereUniqueInput> cursor,
    _i1.PrismaNullable<int> take,
    _i1.PrismaNullable<int> skip,
    _i1.PrismaNullable<List<UsersScalarFieldEnum>> distinct,
  }) async {
    final String sdl = _i1.GraphQLField(
      'query',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'findManyUsers',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'orderBy',
              orderBy,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'cursor',
              cursor,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'take',
              take,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'skip',
              skip,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'distinct',
              distinct,
              isRequired: false,
            ),
          ]),
          fields: _i1.GraphQLFields(UsersScalarFieldEnum.values
              .map((UsersScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return (result.data['findManyUsers'] as List)
        .whereType<Map>()
        .map((Map e) => Users.fromJson(e.cast()))
        .toList();
  }

  Future<Users> create({required UsersCreateInput data}) async {
    final String sdl = _i1.GraphQLField(
      'mutation',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'createOneUsers',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'data',
              data,
              isRequired: true,
            )
          ]),
          fields: _i1.GraphQLFields(UsersScalarFieldEnum.values
              .map((UsersScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return Users.fromJson((result.data['createOneUsers'] as Map).cast());
  }

  Future<AffectedRowsOutput> createMany({
    required List<UsersCreateManyInput> data,
    _i1.PrismaNullable<bool> skipDuplicates,
  }) async {
    final String sdl = _i1.GraphQLField(
      'mutation',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'createManyUsers',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'data',
              data,
              isRequired: true,
            ),
            _i1.GraphQLArg(
              'skipDuplicates',
              skipDuplicates,
              isRequired: false,
            ),
          ]),
          fields: _i1.GraphQLFields(UsersScalarFieldEnum.values
              .map((UsersScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return AffectedRowsOutput.fromJson(
        (result.data['createManyUsers'] as Map).cast());
  }

  Future<_i1.PrismaNullable<Users>> update({
    required UsersUpdateInput data,
    required UsersWhereUniqueInput where,
  }) async {
    final String sdl = _i1.GraphQLField(
      'mutation',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'updateOneUsers',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'data',
              data,
              isRequired: true,
            ),
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: true,
            ),
          ]),
          fields: _i1.GraphQLFields(UsersScalarFieldEnum.values
              .map((UsersScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return result.data['updateOneUsers'] == null
        ? null
        : Users.fromJson((result.data['updateOneUsers'] as Map).cast());
  }

  Future<AffectedRowsOutput> updateMany({
    required UsersUpdateManyMutationInput data,
    _i1.PrismaNullable<UsersWhereInput> where,
  }) async {
    final String sdl = _i1.GraphQLField(
      'mutation',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'updateManyUsers',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'data',
              data,
              isRequired: true,
            ),
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: false,
            ),
          ]),
          fields: _i1.GraphQLFields(UsersScalarFieldEnum.values
              .map((UsersScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return AffectedRowsOutput.fromJson(
        (result.data['updateManyUsers'] as Map).cast());
  }

  Future<Users> upsert({
    required UsersWhereUniqueInput where,
    required UsersCreateInput create,
    required UsersUpdateInput update,
  }) async {
    final String sdl = _i1.GraphQLField(
      'mutation',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'upsertOneUsers',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: true,
            ),
            _i1.GraphQLArg(
              'create',
              create,
              isRequired: true,
            ),
            _i1.GraphQLArg(
              'update',
              update,
              isRequired: true,
            ),
          ]),
          fields: _i1.GraphQLFields(UsersScalarFieldEnum.values
              .map((UsersScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return Users.fromJson((result.data['upsertOneUsers'] as Map).cast());
  }

  Future<_i1.PrismaNullable<Users>> delete(
      {required UsersWhereUniqueInput where}) async {
    final String sdl = _i1.GraphQLField(
      'mutation',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'deleteOneUsers',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: true,
            )
          ]),
          fields: _i1.GraphQLFields(UsersScalarFieldEnum.values
              .map((UsersScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return result.data['deleteOneUsers'] == null
        ? null
        : Users.fromJson((result.data['deleteOneUsers'] as Map).cast());
  }

  Future<AffectedRowsOutput> deleteMany(
      {_i1.PrismaNullable<UsersWhereInput> where}) async {
    final String sdl = _i1.GraphQLField(
      'mutation',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'deleteManyUsers',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: false,
            )
          ]),
          fields: _i1.GraphQLFields(UsersScalarFieldEnum.values
              .map((UsersScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return AffectedRowsOutput.fromJson(
        (result.data['deleteManyUsers'] as Map).cast());
  }

  Future<AggregateUsers> aggregate({
    _i1.PrismaNullable<UsersWhereInput> where,
    _i1.PrismaNullable<List<UsersOrderByWithRelationInput>> orderBy,
    _i1.PrismaNullable<UsersWhereUniqueInput> cursor,
    _i1.PrismaNullable<int> take,
    _i1.PrismaNullable<int> skip,
  }) async {
    final String sdl = _i1.GraphQLField(
      'query',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'aggregateUsers',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'orderBy',
              orderBy,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'cursor',
              cursor,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'take',
              take,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'skip',
              skip,
              isRequired: false,
            ),
          ]),
          fields: _i1.GraphQLFields(UsersScalarFieldEnum.values
              .map((UsersScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return AggregateUsers.fromJson(
        (result.data['aggregateUsers'] as Map).cast());
  }

  Future<List<UsersGroupByOutputType>> groupBy({
    _i1.PrismaNullable<UsersWhereInput> where,
    _i1.PrismaNullable<List<UsersOrderByWithAggregationInput>> orderBy,
    required List<UsersScalarFieldEnum> by,
    _i1.PrismaNullable<UsersScalarWhereWithAggregatesInput> having,
    _i1.PrismaNullable<int> take,
    _i1.PrismaNullable<int> skip,
  }) async {
    final String sdl = _i1.GraphQLField(
      'query',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'groupByUsers',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'orderBy',
              orderBy,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'by',
              by,
              isRequired: true,
            ),
            _i1.GraphQLArg(
              'having',
              having,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'take',
              take,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'skip',
              skip,
              isRequired: false,
            ),
          ]),
          fields: _i1.GraphQLFields(UsersScalarFieldEnum.values
              .map((UsersScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return (result.data['groupByUsers'] as List)
        .whereType<Map>()
        .map((Map e) => UsersGroupByOutputType.fromJson(e.cast()))
        .toList();
  }
}

class ProfileDelegate {
  const ProfileDelegate._(
    this._engine, [
    this._headers,
  ]);

  final _i1.Engine _engine;

  final _i1.PrismaNullable<_i1.QueryEngineRequestHeaders> _headers;

  Future<_i1.PrismaNullable<Profile>> findUnique(
      {required ProfileWhereUniqueInput where}) async {
    final String sdl = _i1.GraphQLField(
      'query',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'findUniqueProfile',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: true,
            )
          ]),
          fields: _i1.GraphQLFields(ProfileScalarFieldEnum.values
              .map((ProfileScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return result.data['findUniqueProfile'] == null
        ? null
        : Profile.fromJson((result.data['findUniqueProfile'] as Map).cast());
  }

  Future<_i1.PrismaNullable<Profile>> findFirst({
    _i1.PrismaNullable<ProfileWhereInput> where,
    _i1.PrismaNullable<List<ProfileOrderByWithRelationInput>> orderBy,
    _i1.PrismaNullable<ProfileWhereUniqueInput> cursor,
    _i1.PrismaNullable<int> take,
    _i1.PrismaNullable<int> skip,
    _i1.PrismaNullable<List<ProfileScalarFieldEnum>> distinct,
  }) async {
    final String sdl = _i1.GraphQLField(
      'query',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'findFirstProfile',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'orderBy',
              orderBy,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'cursor',
              cursor,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'take',
              take,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'skip',
              skip,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'distinct',
              distinct,
              isRequired: false,
            ),
          ]),
          fields: _i1.GraphQLFields(ProfileScalarFieldEnum.values
              .map((ProfileScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return result.data['findFirstProfile'] == null
        ? null
        : Profile.fromJson((result.data['findFirstProfile'] as Map).cast());
  }

  Future<List<Profile>> findMany({
    _i1.PrismaNullable<ProfileWhereInput> where,
    _i1.PrismaNullable<List<ProfileOrderByWithRelationInput>> orderBy,
    _i1.PrismaNullable<ProfileWhereUniqueInput> cursor,
    _i1.PrismaNullable<int> take,
    _i1.PrismaNullable<int> skip,
    _i1.PrismaNullable<List<ProfileScalarFieldEnum>> distinct,
  }) async {
    final String sdl = _i1.GraphQLField(
      'query',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'findManyProfile',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'orderBy',
              orderBy,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'cursor',
              cursor,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'take',
              take,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'skip',
              skip,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'distinct',
              distinct,
              isRequired: false,
            ),
          ]),
          fields: _i1.GraphQLFields(ProfileScalarFieldEnum.values
              .map((ProfileScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return (result.data['findManyProfile'] as List)
        .whereType<Map>()
        .map((Map e) => Profile.fromJson(e.cast()))
        .toList();
  }

  Future<Profile> create({required ProfileCreateInput data}) async {
    final String sdl = _i1.GraphQLField(
      'mutation',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'createOneProfile',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'data',
              data,
              isRequired: true,
            )
          ]),
          fields: _i1.GraphQLFields(ProfileScalarFieldEnum.values
              .map((ProfileScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return Profile.fromJson((result.data['createOneProfile'] as Map).cast());
  }

  Future<AffectedRowsOutput> createMany({
    required List<ProfileCreateManyInput> data,
    _i1.PrismaNullable<bool> skipDuplicates,
  }) async {
    final String sdl = _i1.GraphQLField(
      'mutation',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'createManyProfile',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'data',
              data,
              isRequired: true,
            ),
            _i1.GraphQLArg(
              'skipDuplicates',
              skipDuplicates,
              isRequired: false,
            ),
          ]),
          fields: _i1.GraphQLFields(ProfileScalarFieldEnum.values
              .map((ProfileScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return AffectedRowsOutput.fromJson(
        (result.data['createManyProfile'] as Map).cast());
  }

  Future<_i1.PrismaNullable<Profile>> update({
    required ProfileUpdateInput data,
    required ProfileWhereUniqueInput where,
  }) async {
    final String sdl = _i1.GraphQLField(
      'mutation',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'updateOneProfile',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'data',
              data,
              isRequired: true,
            ),
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: true,
            ),
          ]),
          fields: _i1.GraphQLFields(ProfileScalarFieldEnum.values
              .map((ProfileScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return result.data['updateOneProfile'] == null
        ? null
        : Profile.fromJson((result.data['updateOneProfile'] as Map).cast());
  }

  Future<AffectedRowsOutput> updateMany({
    required ProfileUpdateManyMutationInput data,
    _i1.PrismaNullable<ProfileWhereInput> where,
  }) async {
    final String sdl = _i1.GraphQLField(
      'mutation',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'updateManyProfile',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'data',
              data,
              isRequired: true,
            ),
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: false,
            ),
          ]),
          fields: _i1.GraphQLFields(ProfileScalarFieldEnum.values
              .map((ProfileScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return AffectedRowsOutput.fromJson(
        (result.data['updateManyProfile'] as Map).cast());
  }

  Future<Profile> upsert({
    required ProfileWhereUniqueInput where,
    required ProfileCreateInput create,
    required ProfileUpdateInput update,
  }) async {
    final String sdl = _i1.GraphQLField(
      'mutation',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'upsertOneProfile',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: true,
            ),
            _i1.GraphQLArg(
              'create',
              create,
              isRequired: true,
            ),
            _i1.GraphQLArg(
              'update',
              update,
              isRequired: true,
            ),
          ]),
          fields: _i1.GraphQLFields(ProfileScalarFieldEnum.values
              .map((ProfileScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return Profile.fromJson((result.data['upsertOneProfile'] as Map).cast());
  }

  Future<_i1.PrismaNullable<Profile>> delete(
      {required ProfileWhereUniqueInput where}) async {
    final String sdl = _i1.GraphQLField(
      'mutation',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'deleteOneProfile',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: true,
            )
          ]),
          fields: _i1.GraphQLFields(ProfileScalarFieldEnum.values
              .map((ProfileScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return result.data['deleteOneProfile'] == null
        ? null
        : Profile.fromJson((result.data['deleteOneProfile'] as Map).cast());
  }

  Future<AffectedRowsOutput> deleteMany(
      {_i1.PrismaNullable<ProfileWhereInput> where}) async {
    final String sdl = _i1.GraphQLField(
      'mutation',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'deleteManyProfile',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: false,
            )
          ]),
          fields: _i1.GraphQLFields(ProfileScalarFieldEnum.values
              .map((ProfileScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return AffectedRowsOutput.fromJson(
        (result.data['deleteManyProfile'] as Map).cast());
  }

  Future<AggregateProfile> aggregate({
    _i1.PrismaNullable<ProfileWhereInput> where,
    _i1.PrismaNullable<List<ProfileOrderByWithRelationInput>> orderBy,
    _i1.PrismaNullable<ProfileWhereUniqueInput> cursor,
    _i1.PrismaNullable<int> take,
    _i1.PrismaNullable<int> skip,
  }) async {
    final String sdl = _i1.GraphQLField(
      'query',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'aggregateProfile',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'orderBy',
              orderBy,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'cursor',
              cursor,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'take',
              take,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'skip',
              skip,
              isRequired: false,
            ),
          ]),
          fields: _i1.GraphQLFields(ProfileScalarFieldEnum.values
              .map((ProfileScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return AggregateProfile.fromJson(
        (result.data['aggregateProfile'] as Map).cast());
  }

  Future<List<ProfileGroupByOutputType>> groupBy({
    _i1.PrismaNullable<ProfileWhereInput> where,
    _i1.PrismaNullable<List<ProfileOrderByWithAggregationInput>> orderBy,
    required List<ProfileScalarFieldEnum> by,
    _i1.PrismaNullable<ProfileScalarWhereWithAggregatesInput> having,
    _i1.PrismaNullable<int> take,
    _i1.PrismaNullable<int> skip,
  }) async {
    final String sdl = _i1.GraphQLField(
      'query',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'groupByProfile',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'orderBy',
              orderBy,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'by',
              by,
              isRequired: true,
            ),
            _i1.GraphQLArg(
              'having',
              having,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'take',
              take,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'skip',
              skip,
              isRequired: false,
            ),
          ]),
          fields: _i1.GraphQLFields(ProfileScalarFieldEnum.values
              .map((ProfileScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return (result.data['groupByProfile'] as List)
        .whereType<Map>()
        .map((Map e) => ProfileGroupByOutputType.fromJson(e.cast()))
        .toList();
  }
}

class PostDelegate {
  const PostDelegate._(
    this._engine, [
    this._headers,
  ]);

  final _i1.Engine _engine;

  final _i1.PrismaNullable<_i1.QueryEngineRequestHeaders> _headers;

  Future<_i1.PrismaNullable<Post>> findUnique(
      {required PostWhereUniqueInput where}) async {
    final String sdl = _i1.GraphQLField(
      'query',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'findUniquePost',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: true,
            )
          ]),
          fields: _i1.GraphQLFields(PostScalarFieldEnum.values
              .map((PostScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return result.data['findUniquePost'] == null
        ? null
        : Post.fromJson((result.data['findUniquePost'] as Map).cast());
  }

  Future<_i1.PrismaNullable<Post>> findFirst({
    _i1.PrismaNullable<PostWhereInput> where,
    _i1.PrismaNullable<List<PostOrderByWithRelationInput>> orderBy,
    _i1.PrismaNullable<PostWhereUniqueInput> cursor,
    _i1.PrismaNullable<int> take,
    _i1.PrismaNullable<int> skip,
    _i1.PrismaNullable<List<PostScalarFieldEnum>> distinct,
  }) async {
    final String sdl = _i1.GraphQLField(
      'query',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'findFirstPost',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'orderBy',
              orderBy,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'cursor',
              cursor,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'take',
              take,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'skip',
              skip,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'distinct',
              distinct,
              isRequired: false,
            ),
          ]),
          fields: _i1.GraphQLFields(PostScalarFieldEnum.values
              .map((PostScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return result.data['findFirstPost'] == null
        ? null
        : Post.fromJson((result.data['findFirstPost'] as Map).cast());
  }

  Future<List<Post>> findMany({
    _i1.PrismaNullable<PostWhereInput> where,
    _i1.PrismaNullable<List<PostOrderByWithRelationInput>> orderBy,
    _i1.PrismaNullable<PostWhereUniqueInput> cursor,
    _i1.PrismaNullable<int> take,
    _i1.PrismaNullable<int> skip,
    _i1.PrismaNullable<List<PostScalarFieldEnum>> distinct,
  }) async {
    final String sdl = _i1.GraphQLField(
      'query',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'findManyPost',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'orderBy',
              orderBy,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'cursor',
              cursor,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'take',
              take,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'skip',
              skip,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'distinct',
              distinct,
              isRequired: false,
            ),
          ]),
          fields: _i1.GraphQLFields(PostScalarFieldEnum.values
              .map((PostScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return (result.data['findManyPost'] as List)
        .whereType<Map>()
        .map((Map e) => Post.fromJson(e.cast()))
        .toList();
  }

  Future<Post> create({required PostCreateInput data}) async {
    final String sdl = _i1.GraphQLField(
      'mutation',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'createOnePost',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'data',
              data,
              isRequired: true,
            )
          ]),
          fields: _i1.GraphQLFields(PostScalarFieldEnum.values
              .map((PostScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return Post.fromJson((result.data['createOnePost'] as Map).cast());
  }

  Future<AffectedRowsOutput> createMany({
    required List<PostCreateManyInput> data,
    _i1.PrismaNullable<bool> skipDuplicates,
  }) async {
    final String sdl = _i1.GraphQLField(
      'mutation',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'createManyPost',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'data',
              data,
              isRequired: true,
            ),
            _i1.GraphQLArg(
              'skipDuplicates',
              skipDuplicates,
              isRequired: false,
            ),
          ]),
          fields: _i1.GraphQLFields(PostScalarFieldEnum.values
              .map((PostScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return AffectedRowsOutput.fromJson(
        (result.data['createManyPost'] as Map).cast());
  }

  Future<_i1.PrismaNullable<Post>> update({
    required PostUpdateInput data,
    required PostWhereUniqueInput where,
  }) async {
    final String sdl = _i1.GraphQLField(
      'mutation',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'updateOnePost',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'data',
              data,
              isRequired: true,
            ),
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: true,
            ),
          ]),
          fields: _i1.GraphQLFields(PostScalarFieldEnum.values
              .map((PostScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return result.data['updateOnePost'] == null
        ? null
        : Post.fromJson((result.data['updateOnePost'] as Map).cast());
  }

  Future<AffectedRowsOutput> updateMany({
    required PostUpdateManyMutationInput data,
    _i1.PrismaNullable<PostWhereInput> where,
  }) async {
    final String sdl = _i1.GraphQLField(
      'mutation',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'updateManyPost',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'data',
              data,
              isRequired: true,
            ),
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: false,
            ),
          ]),
          fields: _i1.GraphQLFields(PostScalarFieldEnum.values
              .map((PostScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return AffectedRowsOutput.fromJson(
        (result.data['updateManyPost'] as Map).cast());
  }

  Future<Post> upsert({
    required PostWhereUniqueInput where,
    required PostCreateInput create,
    required PostUpdateInput update,
  }) async {
    final String sdl = _i1.GraphQLField(
      'mutation',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'upsertOnePost',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: true,
            ),
            _i1.GraphQLArg(
              'create',
              create,
              isRequired: true,
            ),
            _i1.GraphQLArg(
              'update',
              update,
              isRequired: true,
            ),
          ]),
          fields: _i1.GraphQLFields(PostScalarFieldEnum.values
              .map((PostScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return Post.fromJson((result.data['upsertOnePost'] as Map).cast());
  }

  Future<_i1.PrismaNullable<Post>> delete(
      {required PostWhereUniqueInput where}) async {
    final String sdl = _i1.GraphQLField(
      'mutation',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'deleteOnePost',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: true,
            )
          ]),
          fields: _i1.GraphQLFields(PostScalarFieldEnum.values
              .map((PostScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return result.data['deleteOnePost'] == null
        ? null
        : Post.fromJson((result.data['deleteOnePost'] as Map).cast());
  }

  Future<AffectedRowsOutput> deleteMany(
      {_i1.PrismaNullable<PostWhereInput> where}) async {
    final String sdl = _i1.GraphQLField(
      'mutation',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'deleteManyPost',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: false,
            )
          ]),
          fields: _i1.GraphQLFields(PostScalarFieldEnum.values
              .map((PostScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return AffectedRowsOutput.fromJson(
        (result.data['deleteManyPost'] as Map).cast());
  }

  Future<AggregatePost> aggregate({
    _i1.PrismaNullable<PostWhereInput> where,
    _i1.PrismaNullable<List<PostOrderByWithRelationInput>> orderBy,
    _i1.PrismaNullable<PostWhereUniqueInput> cursor,
    _i1.PrismaNullable<int> take,
    _i1.PrismaNullable<int> skip,
  }) async {
    final String sdl = _i1.GraphQLField(
      'query',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'aggregatePost',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'orderBy',
              orderBy,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'cursor',
              cursor,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'take',
              take,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'skip',
              skip,
              isRequired: false,
            ),
          ]),
          fields: _i1.GraphQLFields(PostScalarFieldEnum.values
              .map((PostScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return AggregatePost.fromJson((result.data['aggregatePost'] as Map).cast());
  }

  Future<List<PostGroupByOutputType>> groupBy({
    _i1.PrismaNullable<PostWhereInput> where,
    _i1.PrismaNullable<List<PostOrderByWithAggregationInput>> orderBy,
    required List<PostScalarFieldEnum> by,
    _i1.PrismaNullable<PostScalarWhereWithAggregatesInput> having,
    _i1.PrismaNullable<int> take,
    _i1.PrismaNullable<int> skip,
  }) async {
    final String sdl = _i1.GraphQLField(
      'query',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'groupByPost',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'orderBy',
              orderBy,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'by',
              by,
              isRequired: true,
            ),
            _i1.GraphQLArg(
              'having',
              having,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'take',
              take,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'skip',
              skip,
              isRequired: false,
            ),
          ]),
          fields: _i1.GraphQLFields(PostScalarFieldEnum.values
              .map((PostScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return (result.data['groupByPost'] as List)
        .whereType<Map>()
        .map((Map e) => PostGroupByOutputType.fromJson(e.cast()))
        .toList();
  }
}

class PostMetaDelegate {
  const PostMetaDelegate._(
    this._engine, [
    this._headers,
  ]);

  final _i1.Engine _engine;

  final _i1.PrismaNullable<_i1.QueryEngineRequestHeaders> _headers;

  Future<_i1.PrismaNullable<PostMeta>> findUnique(
      {required PostMetaWhereUniqueInput where}) async {
    final String sdl = _i1.GraphQLField(
      'query',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'findUniquePostMeta',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: true,
            )
          ]),
          fields: _i1.GraphQLFields(PostMetaScalarFieldEnum.values
              .map((PostMetaScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return result.data['findUniquePostMeta'] == null
        ? null
        : PostMeta.fromJson((result.data['findUniquePostMeta'] as Map).cast());
  }

  Future<_i1.PrismaNullable<PostMeta>> findFirst({
    _i1.PrismaNullable<PostMetaWhereInput> where,
    _i1.PrismaNullable<List<PostMetaOrderByWithRelationInput>> orderBy,
    _i1.PrismaNullable<PostMetaWhereUniqueInput> cursor,
    _i1.PrismaNullable<int> take,
    _i1.PrismaNullable<int> skip,
    _i1.PrismaNullable<List<PostMetaScalarFieldEnum>> distinct,
  }) async {
    final String sdl = _i1.GraphQLField(
      'query',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'findFirstPostMeta',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'orderBy',
              orderBy,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'cursor',
              cursor,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'take',
              take,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'skip',
              skip,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'distinct',
              distinct,
              isRequired: false,
            ),
          ]),
          fields: _i1.GraphQLFields(PostMetaScalarFieldEnum.values
              .map((PostMetaScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return result.data['findFirstPostMeta'] == null
        ? null
        : PostMeta.fromJson((result.data['findFirstPostMeta'] as Map).cast());
  }

  Future<List<PostMeta>> findMany({
    _i1.PrismaNullable<PostMetaWhereInput> where,
    _i1.PrismaNullable<List<PostMetaOrderByWithRelationInput>> orderBy,
    _i1.PrismaNullable<PostMetaWhereUniqueInput> cursor,
    _i1.PrismaNullable<int> take,
    _i1.PrismaNullable<int> skip,
    _i1.PrismaNullable<List<PostMetaScalarFieldEnum>> distinct,
  }) async {
    final String sdl = _i1.GraphQLField(
      'query',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'findManyPostMeta',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'orderBy',
              orderBy,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'cursor',
              cursor,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'take',
              take,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'skip',
              skip,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'distinct',
              distinct,
              isRequired: false,
            ),
          ]),
          fields: _i1.GraphQLFields(PostMetaScalarFieldEnum.values
              .map((PostMetaScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return (result.data['findManyPostMeta'] as List)
        .whereType<Map>()
        .map((Map e) => PostMeta.fromJson(e.cast()))
        .toList();
  }

  Future<PostMeta> create({required PostMetaCreateInput data}) async {
    final String sdl = _i1.GraphQLField(
      'mutation',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'createOnePostMeta',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'data',
              data,
              isRequired: true,
            )
          ]),
          fields: _i1.GraphQLFields(PostMetaScalarFieldEnum.values
              .map((PostMetaScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return PostMeta.fromJson((result.data['createOnePostMeta'] as Map).cast());
  }

  Future<AffectedRowsOutput> createMany({
    required List<PostMetaCreateManyInput> data,
    _i1.PrismaNullable<bool> skipDuplicates,
  }) async {
    final String sdl = _i1.GraphQLField(
      'mutation',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'createManyPostMeta',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'data',
              data,
              isRequired: true,
            ),
            _i1.GraphQLArg(
              'skipDuplicates',
              skipDuplicates,
              isRequired: false,
            ),
          ]),
          fields: _i1.GraphQLFields(PostMetaScalarFieldEnum.values
              .map((PostMetaScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return AffectedRowsOutput.fromJson(
        (result.data['createManyPostMeta'] as Map).cast());
  }

  Future<_i1.PrismaNullable<PostMeta>> update({
    required PostMetaUpdateInput data,
    required PostMetaWhereUniqueInput where,
  }) async {
    final String sdl = _i1.GraphQLField(
      'mutation',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'updateOnePostMeta',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'data',
              data,
              isRequired: true,
            ),
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: true,
            ),
          ]),
          fields: _i1.GraphQLFields(PostMetaScalarFieldEnum.values
              .map((PostMetaScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return result.data['updateOnePostMeta'] == null
        ? null
        : PostMeta.fromJson((result.data['updateOnePostMeta'] as Map).cast());
  }

  Future<AffectedRowsOutput> updateMany({
    required PostMetaUpdateManyMutationInput data,
    _i1.PrismaNullable<PostMetaWhereInput> where,
  }) async {
    final String sdl = _i1.GraphQLField(
      'mutation',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'updateManyPostMeta',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'data',
              data,
              isRequired: true,
            ),
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: false,
            ),
          ]),
          fields: _i1.GraphQLFields(PostMetaScalarFieldEnum.values
              .map((PostMetaScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return AffectedRowsOutput.fromJson(
        (result.data['updateManyPostMeta'] as Map).cast());
  }

  Future<PostMeta> upsert({
    required PostMetaWhereUniqueInput where,
    required PostMetaCreateInput create,
    required PostMetaUpdateInput update,
  }) async {
    final String sdl = _i1.GraphQLField(
      'mutation',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'upsertOnePostMeta',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: true,
            ),
            _i1.GraphQLArg(
              'create',
              create,
              isRequired: true,
            ),
            _i1.GraphQLArg(
              'update',
              update,
              isRequired: true,
            ),
          ]),
          fields: _i1.GraphQLFields(PostMetaScalarFieldEnum.values
              .map((PostMetaScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return PostMeta.fromJson((result.data['upsertOnePostMeta'] as Map).cast());
  }

  Future<_i1.PrismaNullable<PostMeta>> delete(
      {required PostMetaWhereUniqueInput where}) async {
    final String sdl = _i1.GraphQLField(
      'mutation',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'deleteOnePostMeta',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: true,
            )
          ]),
          fields: _i1.GraphQLFields(PostMetaScalarFieldEnum.values
              .map((PostMetaScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return result.data['deleteOnePostMeta'] == null
        ? null
        : PostMeta.fromJson((result.data['deleteOnePostMeta'] as Map).cast());
  }

  Future<AffectedRowsOutput> deleteMany(
      {_i1.PrismaNullable<PostMetaWhereInput> where}) async {
    final String sdl = _i1.GraphQLField(
      'mutation',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'deleteManyPostMeta',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: false,
            )
          ]),
          fields: _i1.GraphQLFields(PostMetaScalarFieldEnum.values
              .map((PostMetaScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return AffectedRowsOutput.fromJson(
        (result.data['deleteManyPostMeta'] as Map).cast());
  }

  Future<AggregatePostMeta> aggregate({
    _i1.PrismaNullable<PostMetaWhereInput> where,
    _i1.PrismaNullable<List<PostMetaOrderByWithRelationInput>> orderBy,
    _i1.PrismaNullable<PostMetaWhereUniqueInput> cursor,
    _i1.PrismaNullable<int> take,
    _i1.PrismaNullable<int> skip,
  }) async {
    final String sdl = _i1.GraphQLField(
      'query',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'aggregatePostMeta',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'orderBy',
              orderBy,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'cursor',
              cursor,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'take',
              take,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'skip',
              skip,
              isRequired: false,
            ),
          ]),
          fields: _i1.GraphQLFields(PostMetaScalarFieldEnum.values
              .map((PostMetaScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return AggregatePostMeta.fromJson(
        (result.data['aggregatePostMeta'] as Map).cast());
  }

  Future<List<PostMetaGroupByOutputType>> groupBy({
    _i1.PrismaNullable<PostMetaWhereInput> where,
    _i1.PrismaNullable<List<PostMetaOrderByWithAggregationInput>> orderBy,
    required List<PostMetaScalarFieldEnum> by,
    _i1.PrismaNullable<PostMetaScalarWhereWithAggregatesInput> having,
    _i1.PrismaNullable<int> take,
    _i1.PrismaNullable<int> skip,
  }) async {
    final String sdl = _i1.GraphQLField(
      'query',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'groupByPostMeta',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'orderBy',
              orderBy,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'by',
              by,
              isRequired: true,
            ),
            _i1.GraphQLArg(
              'having',
              having,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'take',
              take,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'skip',
              skip,
              isRequired: false,
            ),
          ]),
          fields: _i1.GraphQLFields(PostMetaScalarFieldEnum.values
              .map((PostMetaScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return (result.data['groupByPostMeta'] as List)
        .whereType<Map>()
        .map((Map e) => PostMetaGroupByOutputType.fromJson(e.cast()))
        .toList();
  }
}

class AmenitiesDelegate {
  const AmenitiesDelegate._(
    this._engine, [
    this._headers,
  ]);

  final _i1.Engine _engine;

  final _i1.PrismaNullable<_i1.QueryEngineRequestHeaders> _headers;

  Future<_i1.PrismaNullable<Amenities>> findUnique(
      {required AmenitiesWhereUniqueInput where}) async {
    final String sdl = _i1.GraphQLField(
      'query',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'findUniqueAmenities',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: true,
            )
          ]),
          fields: _i1.GraphQLFields(AmenitiesScalarFieldEnum.values
              .map((AmenitiesScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return result.data['findUniqueAmenities'] == null
        ? null
        : Amenities.fromJson(
            (result.data['findUniqueAmenities'] as Map).cast());
  }

  Future<_i1.PrismaNullable<Amenities>> findFirst({
    _i1.PrismaNullable<AmenitiesWhereInput> where,
    _i1.PrismaNullable<List<AmenitiesOrderByWithRelationInput>> orderBy,
    _i1.PrismaNullable<AmenitiesWhereUniqueInput> cursor,
    _i1.PrismaNullable<int> take,
    _i1.PrismaNullable<int> skip,
    _i1.PrismaNullable<List<AmenitiesScalarFieldEnum>> distinct,
  }) async {
    final String sdl = _i1.GraphQLField(
      'query',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'findFirstAmenities',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'orderBy',
              orderBy,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'cursor',
              cursor,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'take',
              take,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'skip',
              skip,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'distinct',
              distinct,
              isRequired: false,
            ),
          ]),
          fields: _i1.GraphQLFields(AmenitiesScalarFieldEnum.values
              .map((AmenitiesScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return result.data['findFirstAmenities'] == null
        ? null
        : Amenities.fromJson((result.data['findFirstAmenities'] as Map).cast());
  }

  Future<List<Amenities>> findMany({
    _i1.PrismaNullable<AmenitiesWhereInput> where,
    _i1.PrismaNullable<List<AmenitiesOrderByWithRelationInput>> orderBy,
    _i1.PrismaNullable<AmenitiesWhereUniqueInput> cursor,
    _i1.PrismaNullable<int> take,
    _i1.PrismaNullable<int> skip,
    _i1.PrismaNullable<List<AmenitiesScalarFieldEnum>> distinct,
  }) async {
    final String sdl = _i1.GraphQLField(
      'query',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'findManyAmenities',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'orderBy',
              orderBy,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'cursor',
              cursor,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'take',
              take,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'skip',
              skip,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'distinct',
              distinct,
              isRequired: false,
            ),
          ]),
          fields: _i1.GraphQLFields(AmenitiesScalarFieldEnum.values
              .map((AmenitiesScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return (result.data['findManyAmenities'] as List)
        .whereType<Map>()
        .map((Map e) => Amenities.fromJson(e.cast()))
        .toList();
  }

  Future<Amenities> create({required AmenitiesCreateInput data}) async {
    final String sdl = _i1.GraphQLField(
      'mutation',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'createOneAmenities',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'data',
              data,
              isRequired: true,
            )
          ]),
          fields: _i1.GraphQLFields(AmenitiesScalarFieldEnum.values
              .map((AmenitiesScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return Amenities.fromJson(
        (result.data['createOneAmenities'] as Map).cast());
  }

  Future<AffectedRowsOutput> createMany({
    required List<AmenitiesCreateManyInput> data,
    _i1.PrismaNullable<bool> skipDuplicates,
  }) async {
    final String sdl = _i1.GraphQLField(
      'mutation',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'createManyAmenities',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'data',
              data,
              isRequired: true,
            ),
            _i1.GraphQLArg(
              'skipDuplicates',
              skipDuplicates,
              isRequired: false,
            ),
          ]),
          fields: _i1.GraphQLFields(AmenitiesScalarFieldEnum.values
              .map((AmenitiesScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return AffectedRowsOutput.fromJson(
        (result.data['createManyAmenities'] as Map).cast());
  }

  Future<_i1.PrismaNullable<Amenities>> update({
    required AmenitiesUpdateInput data,
    required AmenitiesWhereUniqueInput where,
  }) async {
    final String sdl = _i1.GraphQLField(
      'mutation',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'updateOneAmenities',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'data',
              data,
              isRequired: true,
            ),
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: true,
            ),
          ]),
          fields: _i1.GraphQLFields(AmenitiesScalarFieldEnum.values
              .map((AmenitiesScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return result.data['updateOneAmenities'] == null
        ? null
        : Amenities.fromJson((result.data['updateOneAmenities'] as Map).cast());
  }

  Future<AffectedRowsOutput> updateMany({
    required AmenitiesUpdateManyMutationInput data,
    _i1.PrismaNullable<AmenitiesWhereInput> where,
  }) async {
    final String sdl = _i1.GraphQLField(
      'mutation',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'updateManyAmenities',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'data',
              data,
              isRequired: true,
            ),
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: false,
            ),
          ]),
          fields: _i1.GraphQLFields(AmenitiesScalarFieldEnum.values
              .map((AmenitiesScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return AffectedRowsOutput.fromJson(
        (result.data['updateManyAmenities'] as Map).cast());
  }

  Future<Amenities> upsert({
    required AmenitiesWhereUniqueInput where,
    required AmenitiesCreateInput create,
    required AmenitiesUpdateInput update,
  }) async {
    final String sdl = _i1.GraphQLField(
      'mutation',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'upsertOneAmenities',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: true,
            ),
            _i1.GraphQLArg(
              'create',
              create,
              isRequired: true,
            ),
            _i1.GraphQLArg(
              'update',
              update,
              isRequired: true,
            ),
          ]),
          fields: _i1.GraphQLFields(AmenitiesScalarFieldEnum.values
              .map((AmenitiesScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return Amenities.fromJson(
        (result.data['upsertOneAmenities'] as Map).cast());
  }

  Future<_i1.PrismaNullable<Amenities>> delete(
      {required AmenitiesWhereUniqueInput where}) async {
    final String sdl = _i1.GraphQLField(
      'mutation',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'deleteOneAmenities',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: true,
            )
          ]),
          fields: _i1.GraphQLFields(AmenitiesScalarFieldEnum.values
              .map((AmenitiesScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return result.data['deleteOneAmenities'] == null
        ? null
        : Amenities.fromJson((result.data['deleteOneAmenities'] as Map).cast());
  }

  Future<AffectedRowsOutput> deleteMany(
      {_i1.PrismaNullable<AmenitiesWhereInput> where}) async {
    final String sdl = _i1.GraphQLField(
      'mutation',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'deleteManyAmenities',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: false,
            )
          ]),
          fields: _i1.GraphQLFields(AmenitiesScalarFieldEnum.values
              .map((AmenitiesScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return AffectedRowsOutput.fromJson(
        (result.data['deleteManyAmenities'] as Map).cast());
  }

  Future<AggregateAmenities> aggregate({
    _i1.PrismaNullable<AmenitiesWhereInput> where,
    _i1.PrismaNullable<List<AmenitiesOrderByWithRelationInput>> orderBy,
    _i1.PrismaNullable<AmenitiesWhereUniqueInput> cursor,
    _i1.PrismaNullable<int> take,
    _i1.PrismaNullable<int> skip,
  }) async {
    final String sdl = _i1.GraphQLField(
      'query',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'aggregateAmenities',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'orderBy',
              orderBy,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'cursor',
              cursor,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'take',
              take,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'skip',
              skip,
              isRequired: false,
            ),
          ]),
          fields: _i1.GraphQLFields(AmenitiesScalarFieldEnum.values
              .map((AmenitiesScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return AggregateAmenities.fromJson(
        (result.data['aggregateAmenities'] as Map).cast());
  }

  Future<List<AmenitiesGroupByOutputType>> groupBy({
    _i1.PrismaNullable<AmenitiesWhereInput> where,
    _i1.PrismaNullable<List<AmenitiesOrderByWithAggregationInput>> orderBy,
    required List<AmenitiesScalarFieldEnum> by,
    _i1.PrismaNullable<AmenitiesScalarWhereWithAggregatesInput> having,
    _i1.PrismaNullable<int> take,
    _i1.PrismaNullable<int> skip,
  }) async {
    final String sdl = _i1.GraphQLField(
      'query',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'groupByAmenities',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'orderBy',
              orderBy,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'by',
              by,
              isRequired: true,
            ),
            _i1.GraphQLArg(
              'having',
              having,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'take',
              take,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'skip',
              skip,
              isRequired: false,
            ),
          ]),
          fields: _i1.GraphQLFields(AmenitiesScalarFieldEnum.values
              .map((AmenitiesScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return (result.data['groupByAmenities'] as List)
        .whereType<Map>()
        .map((Map e) => AmenitiesGroupByOutputType.fromJson(e.cast()))
        .toList();
  }
}

class CategoryDelegate {
  const CategoryDelegate._(
    this._engine, [
    this._headers,
  ]);

  final _i1.Engine _engine;

  final _i1.PrismaNullable<_i1.QueryEngineRequestHeaders> _headers;

  Future<_i1.PrismaNullable<Category>> findUnique(
      {required CategoryWhereUniqueInput where}) async {
    final String sdl = _i1.GraphQLField(
      'query',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'findUniqueCategory',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: true,
            )
          ]),
          fields: _i1.GraphQLFields(CategoryScalarFieldEnum.values
              .map((CategoryScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return result.data['findUniqueCategory'] == null
        ? null
        : Category.fromJson((result.data['findUniqueCategory'] as Map).cast());
  }

  Future<_i1.PrismaNullable<Category>> findFirst({
    _i1.PrismaNullable<CategoryWhereInput> where,
    _i1.PrismaNullable<List<CategoryOrderByWithRelationInput>> orderBy,
    _i1.PrismaNullable<CategoryWhereUniqueInput> cursor,
    _i1.PrismaNullable<int> take,
    _i1.PrismaNullable<int> skip,
    _i1.PrismaNullable<List<CategoryScalarFieldEnum>> distinct,
  }) async {
    final String sdl = _i1.GraphQLField(
      'query',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'findFirstCategory',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'orderBy',
              orderBy,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'cursor',
              cursor,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'take',
              take,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'skip',
              skip,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'distinct',
              distinct,
              isRequired: false,
            ),
          ]),
          fields: _i1.GraphQLFields(CategoryScalarFieldEnum.values
              .map((CategoryScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return result.data['findFirstCategory'] == null
        ? null
        : Category.fromJson((result.data['findFirstCategory'] as Map).cast());
  }

  Future<List<Category>> findMany({
    _i1.PrismaNullable<CategoryWhereInput> where,
    _i1.PrismaNullable<List<CategoryOrderByWithRelationInput>> orderBy,
    _i1.PrismaNullable<CategoryWhereUniqueInput> cursor,
    _i1.PrismaNullable<int> take,
    _i1.PrismaNullable<int> skip,
    _i1.PrismaNullable<List<CategoryScalarFieldEnum>> distinct,
  }) async {
    final String sdl = _i1.GraphQLField(
      'query',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'findManyCategory',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'orderBy',
              orderBy,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'cursor',
              cursor,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'take',
              take,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'skip',
              skip,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'distinct',
              distinct,
              isRequired: false,
            ),
          ]),
          fields: _i1.GraphQLFields(CategoryScalarFieldEnum.values
              .map((CategoryScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return (result.data['findManyCategory'] as List)
        .whereType<Map>()
        .map((Map e) => Category.fromJson(e.cast()))
        .toList();
  }

  Future<Category> create({required CategoryCreateInput data}) async {
    final String sdl = _i1.GraphQLField(
      'mutation',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'createOneCategory',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'data',
              data,
              isRequired: true,
            )
          ]),
          fields: _i1.GraphQLFields(CategoryScalarFieldEnum.values
              .map((CategoryScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return Category.fromJson((result.data['createOneCategory'] as Map).cast());
  }

  Future<AffectedRowsOutput> createMany({
    required List<CategoryCreateManyInput> data,
    _i1.PrismaNullable<bool> skipDuplicates,
  }) async {
    final String sdl = _i1.GraphQLField(
      'mutation',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'createManyCategory',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'data',
              data,
              isRequired: true,
            ),
            _i1.GraphQLArg(
              'skipDuplicates',
              skipDuplicates,
              isRequired: false,
            ),
          ]),
          fields: _i1.GraphQLFields(CategoryScalarFieldEnum.values
              .map((CategoryScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return AffectedRowsOutput.fromJson(
        (result.data['createManyCategory'] as Map).cast());
  }

  Future<_i1.PrismaNullable<Category>> update({
    required CategoryUpdateInput data,
    required CategoryWhereUniqueInput where,
  }) async {
    final String sdl = _i1.GraphQLField(
      'mutation',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'updateOneCategory',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'data',
              data,
              isRequired: true,
            ),
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: true,
            ),
          ]),
          fields: _i1.GraphQLFields(CategoryScalarFieldEnum.values
              .map((CategoryScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return result.data['updateOneCategory'] == null
        ? null
        : Category.fromJson((result.data['updateOneCategory'] as Map).cast());
  }

  Future<AffectedRowsOutput> updateMany({
    required CategoryUpdateManyMutationInput data,
    _i1.PrismaNullable<CategoryWhereInput> where,
  }) async {
    final String sdl = _i1.GraphQLField(
      'mutation',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'updateManyCategory',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'data',
              data,
              isRequired: true,
            ),
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: false,
            ),
          ]),
          fields: _i1.GraphQLFields(CategoryScalarFieldEnum.values
              .map((CategoryScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return AffectedRowsOutput.fromJson(
        (result.data['updateManyCategory'] as Map).cast());
  }

  Future<Category> upsert({
    required CategoryWhereUniqueInput where,
    required CategoryCreateInput create,
    required CategoryUpdateInput update,
  }) async {
    final String sdl = _i1.GraphQLField(
      'mutation',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'upsertOneCategory',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: true,
            ),
            _i1.GraphQLArg(
              'create',
              create,
              isRequired: true,
            ),
            _i1.GraphQLArg(
              'update',
              update,
              isRequired: true,
            ),
          ]),
          fields: _i1.GraphQLFields(CategoryScalarFieldEnum.values
              .map((CategoryScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return Category.fromJson((result.data['upsertOneCategory'] as Map).cast());
  }

  Future<_i1.PrismaNullable<Category>> delete(
      {required CategoryWhereUniqueInput where}) async {
    final String sdl = _i1.GraphQLField(
      'mutation',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'deleteOneCategory',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: true,
            )
          ]),
          fields: _i1.GraphQLFields(CategoryScalarFieldEnum.values
              .map((CategoryScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return result.data['deleteOneCategory'] == null
        ? null
        : Category.fromJson((result.data['deleteOneCategory'] as Map).cast());
  }

  Future<AffectedRowsOutput> deleteMany(
      {_i1.PrismaNullable<CategoryWhereInput> where}) async {
    final String sdl = _i1.GraphQLField(
      'mutation',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'deleteManyCategory',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: false,
            )
          ]),
          fields: _i1.GraphQLFields(CategoryScalarFieldEnum.values
              .map((CategoryScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return AffectedRowsOutput.fromJson(
        (result.data['deleteManyCategory'] as Map).cast());
  }

  Future<AggregateCategory> aggregate({
    _i1.PrismaNullable<CategoryWhereInput> where,
    _i1.PrismaNullable<List<CategoryOrderByWithRelationInput>> orderBy,
    _i1.PrismaNullable<CategoryWhereUniqueInput> cursor,
    _i1.PrismaNullable<int> take,
    _i1.PrismaNullable<int> skip,
  }) async {
    final String sdl = _i1.GraphQLField(
      'query',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'aggregateCategory',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'orderBy',
              orderBy,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'cursor',
              cursor,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'take',
              take,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'skip',
              skip,
              isRequired: false,
            ),
          ]),
          fields: _i1.GraphQLFields(CategoryScalarFieldEnum.values
              .map((CategoryScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return AggregateCategory.fromJson(
        (result.data['aggregateCategory'] as Map).cast());
  }

  Future<List<CategoryGroupByOutputType>> groupBy({
    _i1.PrismaNullable<CategoryWhereInput> where,
    _i1.PrismaNullable<List<CategoryOrderByWithAggregationInput>> orderBy,
    required List<CategoryScalarFieldEnum> by,
    _i1.PrismaNullable<CategoryScalarWhereWithAggregatesInput> having,
    _i1.PrismaNullable<int> take,
    _i1.PrismaNullable<int> skip,
  }) async {
    final String sdl = _i1.GraphQLField(
      'query',
      fields: _i1.GraphQLFields([
        _i1.GraphQLField(
          'groupByCategory',
          args: _i1.GraphQLArgs([
            _i1.GraphQLArg(
              'where',
              where,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'orderBy',
              orderBy,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'by',
              by,
              isRequired: true,
            ),
            _i1.GraphQLArg(
              'having',
              having,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'take',
              take,
              isRequired: false,
            ),
            _i1.GraphQLArg(
              'skip',
              skip,
              isRequired: false,
            ),
          ]),
          fields: _i1.GraphQLFields(CategoryScalarFieldEnum.values
              .map((CategoryScalarFieldEnum e) =>
                  _i1.GraphQLField(_i1.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i1.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return (result.data['groupByCategory'] as List)
        .whereType<Map>()
        .map((Map e) => CategoryGroupByOutputType.fromJson(e.cast()))
        .toList();
  }
}

final environment = Future<_i3.PrismaEnvironment>(() async =>
    _i3.PrismaEnvironment(includePlatformEnvironment: true)
        .call(_i4.configurePrisma));
final _i5.Document dmmf = _i5.Document.fromJson(<String, dynamic>{
  'datamodel': {
    'models': [
      {
        'name': 'Users',
        'dbName': null,
        'fields': [
          {
            'name': 'id',
            'kind': 'scalar',
            'isList': false,
            'isRequired': true,
            'isUnique': false,
            'isId': true,
            'isReadOnly': false,
            'hasDefaultValue': true,
            'type': 'Int',
            'default': {
              'name': 'autoincrement',
              'args': [],
            },
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'relationFromFields': null,
            'relationToFields': null,
            'relationOnDelete': null,
            'relationName': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'id',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': true,
              'isReadOnly': false,
              'hasDefaultValue': true,
              'type': 'Int',
              'default': {
                'name': 'autoincrement',
                'args': [],
              },
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
          {
            'name': 'email',
            'kind': 'scalar',
            'isList': false,
            'isRequired': true,
            'isUnique': true,
            'isId': false,
            'isReadOnly': false,
            'hasDefaultValue': false,
            'type': 'String',
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'default': null,
            'relationFromFields': null,
            'relationToFields': null,
            'relationOnDelete': null,
            'relationName': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'email',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': true,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'String',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
          {
            'name': 'role',
            'kind': 'enum',
            'isList': false,
            'isRequired': true,
            'isUnique': false,
            'isId': false,
            'isReadOnly': false,
            'hasDefaultValue': true,
            'type': 'Role',
            'default': 'USER',
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'relationFromFields': null,
            'relationToFields': null,
            'relationOnDelete': null,
            'relationName': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'role',
              'kind': 'enum',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': true,
              'type': 'Role',
              'default': 'USER',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
          {
            'name': 'password',
            'kind': 'scalar',
            'isList': false,
            'isRequired': false,
            'isUnique': false,
            'isId': false,
            'isReadOnly': false,
            'hasDefaultValue': false,
            'type': 'String',
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'default': null,
            'relationFromFields': null,
            'relationToFields': null,
            'relationOnDelete': null,
            'relationName': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'password',
              'kind': 'scalar',
              'isList': false,
              'isRequired': false,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'String',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
          {
            'name': 'fcmtoken',
            'kind': 'scalar',
            'isList': false,
            'isRequired': false,
            'isUnique': false,
            'isId': false,
            'isReadOnly': false,
            'hasDefaultValue': false,
            'type': 'String',
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'default': null,
            'relationFromFields': null,
            'relationToFields': null,
            'relationOnDelete': null,
            'relationName': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'fcmtoken',
              'kind': 'scalar',
              'isList': false,
              'isRequired': false,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'String',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
          {
            'name': 'salt',
            'kind': 'scalar',
            'isList': false,
            'isRequired': false,
            'isUnique': false,
            'isId': false,
            'isReadOnly': false,
            'hasDefaultValue': false,
            'type': 'String',
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'default': null,
            'relationFromFields': null,
            'relationToFields': null,
            'relationOnDelete': null,
            'relationName': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'salt',
              'kind': 'scalar',
              'isList': false,
              'isRequired': false,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'String',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
          {
            'name': 'posts',
            'kind': 'object',
            'isList': true,
            'isRequired': true,
            'isUnique': false,
            'isId': false,
            'isReadOnly': false,
            'hasDefaultValue': false,
            'type': 'Post',
            'relationName': 'PostToUsers',
            'relationFromFields': [],
            'relationToFields': [],
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'default': null,
            'relationOnDelete': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'posts',
              'kind': 'object',
              'isList': true,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'Post',
              'relationName': 'PostToUsers',
              'relationFromFields': [],
              'relationToFields': [],
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
          {
            'name': 'Profile',
            'kind': 'object',
            'isList': true,
            'isRequired': true,
            'isUnique': false,
            'isId': false,
            'isReadOnly': false,
            'hasDefaultValue': false,
            'type': 'Profile',
            'relationName': 'userProfile',
            'relationFromFields': [],
            'relationToFields': [],
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'default': null,
            'relationOnDelete': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'Profile',
              'kind': 'object',
              'isList': true,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'Profile',
              'relationName': 'userProfile',
              'relationFromFields': [],
              'relationToFields': [],
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
        ],
        'primaryKey': null,
        'uniqueFields': [],
        'uniqueIndexes': [],
        'isGenerated': false,
        'fieldsMap': null,
        'documentation': null,
        'extra': {
          'name': 'Users',
          'dbName': null,
          'fields': [
            {
              'name': 'id',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': true,
              'isReadOnly': false,
              'hasDefaultValue': true,
              'type': 'Int',
              'default': {
                'name': 'autoincrement',
                'args': [],
              },
              'isGenerated': false,
              'isUpdatedAt': false,
            },
            {
              'name': 'email',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': true,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'String',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
            {
              'name': 'role',
              'kind': 'enum',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': true,
              'type': 'Role',
              'default': 'USER',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
            {
              'name': 'password',
              'kind': 'scalar',
              'isList': false,
              'isRequired': false,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'String',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
            {
              'name': 'fcmtoken',
              'kind': 'scalar',
              'isList': false,
              'isRequired': false,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'String',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
            {
              'name': 'salt',
              'kind': 'scalar',
              'isList': false,
              'isRequired': false,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'String',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
            {
              'name': 'posts',
              'kind': 'object',
              'isList': true,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'Post',
              'relationName': 'PostToUsers',
              'relationFromFields': [],
              'relationToFields': [],
              'isGenerated': false,
              'isUpdatedAt': false,
            },
            {
              'name': 'Profile',
              'kind': 'object',
              'isList': true,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'Profile',
              'relationName': 'userProfile',
              'relationFromFields': [],
              'relationToFields': [],
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          ],
          'primaryKey': null,
          'uniqueFields': [],
          'uniqueIndexes': [],
          'isGenerated': false,
        },
      },
      {
        'name': 'Profile',
        'dbName': null,
        'fields': [
          {
            'name': 'id',
            'kind': 'scalar',
            'isList': false,
            'isRequired': true,
            'isUnique': false,
            'isId': true,
            'isReadOnly': false,
            'hasDefaultValue': true,
            'type': 'Int',
            'default': {
              'name': 'autoincrement',
              'args': [],
            },
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'relationFromFields': null,
            'relationToFields': null,
            'relationOnDelete': null,
            'relationName': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'id',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': true,
              'isReadOnly': false,
              'hasDefaultValue': true,
              'type': 'Int',
              'default': {
                'name': 'autoincrement',
                'args': [],
              },
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
          {
            'name': 'firstName',
            'kind': 'scalar',
            'isList': false,
            'isRequired': false,
            'isUnique': false,
            'isId': false,
            'isReadOnly': false,
            'hasDefaultValue': false,
            'type': 'String',
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'default': null,
            'relationFromFields': null,
            'relationToFields': null,
            'relationOnDelete': null,
            'relationName': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'firstName',
              'kind': 'scalar',
              'isList': false,
              'isRequired': false,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'String',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
          {
            'name': 'lastName',
            'kind': 'scalar',
            'isList': false,
            'isRequired': false,
            'isUnique': false,
            'isId': false,
            'isReadOnly': false,
            'hasDefaultValue': false,
            'type': 'String',
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'default': null,
            'relationFromFields': null,
            'relationToFields': null,
            'relationOnDelete': null,
            'relationName': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'lastName',
              'kind': 'scalar',
              'isList': false,
              'isRequired': false,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'String',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
          {
            'name': 'addressLine1',
            'kind': 'scalar',
            'isList': false,
            'isRequired': false,
            'isUnique': false,
            'isId': false,
            'isReadOnly': false,
            'hasDefaultValue': false,
            'type': 'String',
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'default': null,
            'relationFromFields': null,
            'relationToFields': null,
            'relationOnDelete': null,
            'relationName': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'addressLine1',
              'kind': 'scalar',
              'isList': false,
              'isRequired': false,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'String',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
          {
            'name': 'addressLine2',
            'kind': 'scalar',
            'isList': false,
            'isRequired': false,
            'isUnique': false,
            'isId': false,
            'isReadOnly': false,
            'hasDefaultValue': false,
            'type': 'String',
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'default': null,
            'relationFromFields': null,
            'relationToFields': null,
            'relationOnDelete': null,
            'relationName': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'addressLine2',
              'kind': 'scalar',
              'isList': false,
              'isRequired': false,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'String',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
          {
            'name': 'city',
            'kind': 'scalar',
            'isList': false,
            'isRequired': false,
            'isUnique': false,
            'isId': false,
            'isReadOnly': false,
            'hasDefaultValue': false,
            'type': 'String',
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'default': null,
            'relationFromFields': null,
            'relationToFields': null,
            'relationOnDelete': null,
            'relationName': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'city',
              'kind': 'scalar',
              'isList': false,
              'isRequired': false,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'String',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
          {
            'name': 'state',
            'kind': 'scalar',
            'isList': false,
            'isRequired': false,
            'isUnique': false,
            'isId': false,
            'isReadOnly': false,
            'hasDefaultValue': false,
            'type': 'String',
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'default': null,
            'relationFromFields': null,
            'relationToFields': null,
            'relationOnDelete': null,
            'relationName': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'state',
              'kind': 'scalar',
              'isList': false,
              'isRequired': false,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'String',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
          {
            'name': 'country',
            'kind': 'scalar',
            'isList': false,
            'isRequired': false,
            'isUnique': false,
            'isId': false,
            'isReadOnly': false,
            'hasDefaultValue': false,
            'type': 'String',
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'default': null,
            'relationFromFields': null,
            'relationToFields': null,
            'relationOnDelete': null,
            'relationName': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'country',
              'kind': 'scalar',
              'isList': false,
              'isRequired': false,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'String',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
          {
            'name': 'postCode',
            'kind': 'scalar',
            'isList': false,
            'isRequired': false,
            'isUnique': false,
            'isId': false,
            'isReadOnly': false,
            'hasDefaultValue': false,
            'type': 'String',
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'default': null,
            'relationFromFields': null,
            'relationToFields': null,
            'relationOnDelete': null,
            'relationName': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'postCode',
              'kind': 'scalar',
              'isList': false,
              'isRequired': false,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'String',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
          {
            'name': 'phone',
            'kind': 'scalar',
            'isList': false,
            'isRequired': false,
            'isUnique': false,
            'isId': false,
            'isReadOnly': false,
            'hasDefaultValue': false,
            'type': 'String',
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'default': null,
            'relationFromFields': null,
            'relationToFields': null,
            'relationOnDelete': null,
            'relationName': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'phone',
              'kind': 'scalar',
              'isList': false,
              'isRequired': false,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'String',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
          {
            'name': 'slug',
            'kind': 'scalar',
            'isList': false,
            'isRequired': false,
            'isUnique': true,
            'isId': false,
            'isReadOnly': false,
            'hasDefaultValue': false,
            'type': 'String',
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'default': null,
            'relationFromFields': null,
            'relationToFields': null,
            'relationOnDelete': null,
            'relationName': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'slug',
              'kind': 'scalar',
              'isList': false,
              'isRequired': false,
              'isUnique': true,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'String',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
          {
            'name': 'images',
            'kind': 'scalar',
            'isList': false,
            'isRequired': false,
            'isUnique': false,
            'isId': false,
            'isReadOnly': false,
            'hasDefaultValue': false,
            'type': 'String',
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'default': null,
            'relationFromFields': null,
            'relationToFields': null,
            'relationOnDelete': null,
            'relationName': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'images',
              'kind': 'scalar',
              'isList': false,
              'isRequired': false,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'String',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
          {
            'name': 'longitude',
            'kind': 'scalar',
            'isList': false,
            'isRequired': false,
            'isUnique': false,
            'isId': false,
            'isReadOnly': false,
            'hasDefaultValue': false,
            'type': 'String',
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'default': null,
            'relationFromFields': null,
            'relationToFields': null,
            'relationOnDelete': null,
            'relationName': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'longitude',
              'kind': 'scalar',
              'isList': false,
              'isRequired': false,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'String',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
          {
            'name': 'latitude',
            'kind': 'scalar',
            'isList': false,
            'isRequired': false,
            'isUnique': false,
            'isId': false,
            'isReadOnly': false,
            'hasDefaultValue': false,
            'type': 'String',
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'default': null,
            'relationFromFields': null,
            'relationToFields': null,
            'relationOnDelete': null,
            'relationName': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'latitude',
              'kind': 'scalar',
              'isList': false,
              'isRequired': false,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'String',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
          {
            'name': 'published',
            'kind': 'scalar',
            'isList': false,
            'isRequired': true,
            'isUnique': false,
            'isId': false,
            'isReadOnly': false,
            'hasDefaultValue': true,
            'type': 'Boolean',
            'default': false,
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'relationFromFields': null,
            'relationToFields': null,
            'relationOnDelete': null,
            'relationName': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'published',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': true,
              'type': 'Boolean',
              'default': false,
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
          {
            'name': 'user',
            'kind': 'object',
            'isList': false,
            'isRequired': false,
            'isUnique': false,
            'isId': false,
            'isReadOnly': false,
            'hasDefaultValue': false,
            'type': 'Users',
            'relationName': 'userProfile',
            'relationFromFields': ['userId'],
            'relationToFields': ['id'],
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'default': null,
            'relationOnDelete': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'user',
              'kind': 'object',
              'isList': false,
              'isRequired': false,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'Users',
              'relationName': 'userProfile',
              'relationFromFields': ['userId'],
              'relationToFields': ['id'],
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
          {
            'name': 'userId',
            'kind': 'scalar',
            'isList': false,
            'isRequired': false,
            'isUnique': false,
            'isId': false,
            'isReadOnly': true,
            'hasDefaultValue': false,
            'type': 'Int',
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'default': null,
            'relationFromFields': null,
            'relationToFields': null,
            'relationOnDelete': null,
            'relationName': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'userId',
              'kind': 'scalar',
              'isList': false,
              'isRequired': false,
              'isUnique': false,
              'isId': false,
              'isReadOnly': true,
              'hasDefaultValue': false,
              'type': 'Int',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
        ],
        'primaryKey': null,
        'uniqueFields': [],
        'uniqueIndexes': [],
        'isGenerated': false,
        'fieldsMap': null,
        'documentation': null,
        'extra': {
          'name': 'Profile',
          'dbName': null,
          'fields': [
            {
              'name': 'id',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': true,
              'isReadOnly': false,
              'hasDefaultValue': true,
              'type': 'Int',
              'default': {
                'name': 'autoincrement',
                'args': [],
              },
              'isGenerated': false,
              'isUpdatedAt': false,
            },
            {
              'name': 'firstName',
              'kind': 'scalar',
              'isList': false,
              'isRequired': false,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'String',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
            {
              'name': 'lastName',
              'kind': 'scalar',
              'isList': false,
              'isRequired': false,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'String',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
            {
              'name': 'addressLine1',
              'kind': 'scalar',
              'isList': false,
              'isRequired': false,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'String',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
            {
              'name': 'addressLine2',
              'kind': 'scalar',
              'isList': false,
              'isRequired': false,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'String',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
            {
              'name': 'city',
              'kind': 'scalar',
              'isList': false,
              'isRequired': false,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'String',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
            {
              'name': 'state',
              'kind': 'scalar',
              'isList': false,
              'isRequired': false,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'String',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
            {
              'name': 'country',
              'kind': 'scalar',
              'isList': false,
              'isRequired': false,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'String',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
            {
              'name': 'postCode',
              'kind': 'scalar',
              'isList': false,
              'isRequired': false,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'String',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
            {
              'name': 'phone',
              'kind': 'scalar',
              'isList': false,
              'isRequired': false,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'String',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
            {
              'name': 'slug',
              'kind': 'scalar',
              'isList': false,
              'isRequired': false,
              'isUnique': true,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'String',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
            {
              'name': 'images',
              'kind': 'scalar',
              'isList': false,
              'isRequired': false,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'String',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
            {
              'name': 'longitude',
              'kind': 'scalar',
              'isList': false,
              'isRequired': false,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'String',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
            {
              'name': 'latitude',
              'kind': 'scalar',
              'isList': false,
              'isRequired': false,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'String',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
            {
              'name': 'published',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': true,
              'type': 'Boolean',
              'default': false,
              'isGenerated': false,
              'isUpdatedAt': false,
            },
            {
              'name': 'user',
              'kind': 'object',
              'isList': false,
              'isRequired': false,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'Users',
              'relationName': 'userProfile',
              'relationFromFields': ['userId'],
              'relationToFields': ['id'],
              'isGenerated': false,
              'isUpdatedAt': false,
            },
            {
              'name': 'userId',
              'kind': 'scalar',
              'isList': false,
              'isRequired': false,
              'isUnique': false,
              'isId': false,
              'isReadOnly': true,
              'hasDefaultValue': false,
              'type': 'Int',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          ],
          'primaryKey': null,
          'uniqueFields': [],
          'uniqueIndexes': [],
          'isGenerated': false,
        },
      },
      {
        'name': 'Post',
        'dbName': null,
        'fields': [
          {
            'name': 'id',
            'kind': 'scalar',
            'isList': false,
            'isRequired': true,
            'isUnique': false,
            'isId': true,
            'isReadOnly': false,
            'hasDefaultValue': true,
            'type': 'Int',
            'default': {
              'name': 'autoincrement',
              'args': [],
            },
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'relationFromFields': null,
            'relationToFields': null,
            'relationOnDelete': null,
            'relationName': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'id',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': true,
              'isReadOnly': false,
              'hasDefaultValue': true,
              'type': 'Int',
              'default': {
                'name': 'autoincrement',
                'args': [],
              },
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
          {
            'name': 'title',
            'kind': 'scalar',
            'isList': false,
            'isRequired': true,
            'isUnique': false,
            'isId': false,
            'isReadOnly': false,
            'hasDefaultValue': false,
            'type': 'String',
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'default': null,
            'relationFromFields': null,
            'relationToFields': null,
            'relationOnDelete': null,
            'relationName': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'title',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'String',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
          {
            'name': 'slug',
            'kind': 'scalar',
            'isList': false,
            'isRequired': false,
            'isUnique': true,
            'isId': false,
            'isReadOnly': false,
            'hasDefaultValue': false,
            'type': 'String',
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'default': null,
            'relationFromFields': null,
            'relationToFields': null,
            'relationOnDelete': null,
            'relationName': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'slug',
              'kind': 'scalar',
              'isList': false,
              'isRequired': false,
              'isUnique': true,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'String',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
          {
            'name': 'description',
            'kind': 'scalar',
            'isList': false,
            'isRequired': false,
            'isUnique': false,
            'isId': false,
            'isReadOnly': false,
            'hasDefaultValue': false,
            'type': 'String',
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'default': null,
            'relationFromFields': null,
            'relationToFields': null,
            'relationOnDelete': null,
            'relationName': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'description',
              'kind': 'scalar',
              'isList': false,
              'isRequired': false,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'String',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
          {
            'name': 'images',
            'kind': 'scalar',
            'isList': false,
            'isRequired': false,
            'isUnique': false,
            'isId': false,
            'isReadOnly': false,
            'hasDefaultValue': false,
            'type': 'String',
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'default': null,
            'relationFromFields': null,
            'relationToFields': null,
            'relationOnDelete': null,
            'relationName': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'images',
              'kind': 'scalar',
              'isList': false,
              'isRequired': false,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'String',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
          {
            'name': 'long_description',
            'kind': 'scalar',
            'isList': false,
            'isRequired': false,
            'isUnique': false,
            'isId': false,
            'isReadOnly': false,
            'hasDefaultValue': false,
            'type': 'String',
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'default': null,
            'relationFromFields': null,
            'relationToFields': null,
            'relationOnDelete': null,
            'relationName': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'long_description',
              'kind': 'scalar',
              'isList': false,
              'isRequired': false,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'String',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
          {
            'name': 'longitude',
            'kind': 'scalar',
            'isList': false,
            'isRequired': false,
            'isUnique': false,
            'isId': false,
            'isReadOnly': false,
            'hasDefaultValue': false,
            'type': 'String',
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'default': null,
            'relationFromFields': null,
            'relationToFields': null,
            'relationOnDelete': null,
            'relationName': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'longitude',
              'kind': 'scalar',
              'isList': false,
              'isRequired': false,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'String',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
          {
            'name': 'latitude',
            'kind': 'scalar',
            'isList': false,
            'isRequired': false,
            'isUnique': false,
            'isId': false,
            'isReadOnly': false,
            'hasDefaultValue': false,
            'type': 'String',
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'default': null,
            'relationFromFields': null,
            'relationToFields': null,
            'relationOnDelete': null,
            'relationName': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'latitude',
              'kind': 'scalar',
              'isList': false,
              'isRequired': false,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'String',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
          {
            'name': 'content',
            'kind': 'scalar',
            'isList': false,
            'isRequired': false,
            'isUnique': false,
            'isId': false,
            'isReadOnly': false,
            'hasDefaultValue': false,
            'type': 'String',
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'default': null,
            'relationFromFields': null,
            'relationToFields': null,
            'relationOnDelete': null,
            'relationName': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'content',
              'kind': 'scalar',
              'isList': false,
              'isRequired': false,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'String',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
          {
            'name': 'published',
            'kind': 'scalar',
            'isList': false,
            'isRequired': true,
            'isUnique': false,
            'isId': false,
            'isReadOnly': false,
            'hasDefaultValue': true,
            'type': 'Boolean',
            'default': false,
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'relationFromFields': null,
            'relationToFields': null,
            'relationOnDelete': null,
            'relationName': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'published',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': true,
              'type': 'Boolean',
              'default': false,
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
          {
            'name': 'author',
            'kind': 'object',
            'isList': false,
            'isRequired': true,
            'isUnique': false,
            'isId': false,
            'isReadOnly': false,
            'hasDefaultValue': false,
            'type': 'Users',
            'relationName': 'PostToUsers',
            'relationFromFields': ['authorId'],
            'relationToFields': ['id'],
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'default': null,
            'relationOnDelete': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'author',
              'kind': 'object',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'Users',
              'relationName': 'PostToUsers',
              'relationFromFields': ['authorId'],
              'relationToFields': ['id'],
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
          {
            'name': 'authorId',
            'kind': 'scalar',
            'isList': false,
            'isRequired': true,
            'isUnique': false,
            'isId': false,
            'isReadOnly': true,
            'hasDefaultValue': false,
            'type': 'Int',
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'default': null,
            'relationFromFields': null,
            'relationToFields': null,
            'relationOnDelete': null,
            'relationName': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'authorId',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': true,
              'hasDefaultValue': false,
              'type': 'Int',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
          {
            'name': 'postmeta',
            'kind': 'object',
            'isList': true,
            'isRequired': true,
            'isUnique': false,
            'isId': false,
            'isReadOnly': false,
            'hasDefaultValue': false,
            'type': 'PostMeta',
            'relationName': 'PostToPostMeta',
            'relationFromFields': [],
            'relationToFields': [],
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'default': null,
            'relationOnDelete': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'postmeta',
              'kind': 'object',
              'isList': true,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'PostMeta',
              'relationName': 'PostToPostMeta',
              'relationFromFields': [],
              'relationToFields': [],
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
          {
            'name': 'category',
            'kind': 'object',
            'isList': true,
            'isRequired': true,
            'isUnique': false,
            'isId': false,
            'isReadOnly': false,
            'hasDefaultValue': false,
            'type': 'Category',
            'relationName': 'CategoryToPost',
            'relationFromFields': [],
            'relationToFields': [],
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'default': null,
            'relationOnDelete': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'category',
              'kind': 'object',
              'isList': true,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'Category',
              'relationName': 'CategoryToPost',
              'relationFromFields': [],
              'relationToFields': [],
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
        ],
        'primaryKey': null,
        'uniqueFields': [],
        'uniqueIndexes': [],
        'isGenerated': false,
        'fieldsMap': null,
        'documentation': null,
        'extra': {
          'name': 'Post',
          'dbName': null,
          'fields': [
            {
              'name': 'id',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': true,
              'isReadOnly': false,
              'hasDefaultValue': true,
              'type': 'Int',
              'default': {
                'name': 'autoincrement',
                'args': [],
              },
              'isGenerated': false,
              'isUpdatedAt': false,
            },
            {
              'name': 'title',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'String',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
            {
              'name': 'slug',
              'kind': 'scalar',
              'isList': false,
              'isRequired': false,
              'isUnique': true,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'String',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
            {
              'name': 'description',
              'kind': 'scalar',
              'isList': false,
              'isRequired': false,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'String',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
            {
              'name': 'images',
              'kind': 'scalar',
              'isList': false,
              'isRequired': false,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'String',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
            {
              'name': 'long_description',
              'kind': 'scalar',
              'isList': false,
              'isRequired': false,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'String',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
            {
              'name': 'longitude',
              'kind': 'scalar',
              'isList': false,
              'isRequired': false,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'String',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
            {
              'name': 'latitude',
              'kind': 'scalar',
              'isList': false,
              'isRequired': false,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'String',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
            {
              'name': 'content',
              'kind': 'scalar',
              'isList': false,
              'isRequired': false,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'String',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
            {
              'name': 'published',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': true,
              'type': 'Boolean',
              'default': false,
              'isGenerated': false,
              'isUpdatedAt': false,
            },
            {
              'name': 'author',
              'kind': 'object',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'Users',
              'relationName': 'PostToUsers',
              'relationFromFields': ['authorId'],
              'relationToFields': ['id'],
              'isGenerated': false,
              'isUpdatedAt': false,
            },
            {
              'name': 'authorId',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': true,
              'hasDefaultValue': false,
              'type': 'Int',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
            {
              'name': 'postmeta',
              'kind': 'object',
              'isList': true,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'PostMeta',
              'relationName': 'PostToPostMeta',
              'relationFromFields': [],
              'relationToFields': [],
              'isGenerated': false,
              'isUpdatedAt': false,
            },
            {
              'name': 'category',
              'kind': 'object',
              'isList': true,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'Category',
              'relationName': 'CategoryToPost',
              'relationFromFields': [],
              'relationToFields': [],
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          ],
          'primaryKey': null,
          'uniqueFields': [],
          'uniqueIndexes': [],
          'isGenerated': false,
        },
      },
      {
        'name': 'PostMeta',
        'dbName': null,
        'fields': [
          {
            'name': 'id',
            'kind': 'scalar',
            'isList': false,
            'isRequired': true,
            'isUnique': false,
            'isId': true,
            'isReadOnly': false,
            'hasDefaultValue': true,
            'type': 'Int',
            'default': {
              'name': 'autoincrement',
              'args': [],
            },
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'relationFromFields': null,
            'relationToFields': null,
            'relationOnDelete': null,
            'relationName': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'id',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': true,
              'isReadOnly': false,
              'hasDefaultValue': true,
              'type': 'Int',
              'default': {
                'name': 'autoincrement',
                'args': [],
              },
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
          {
            'name': 'meta_title',
            'kind': 'scalar',
            'isList': false,
            'isRequired': true,
            'isUnique': false,
            'isId': false,
            'isReadOnly': false,
            'hasDefaultValue': false,
            'type': 'String',
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'default': null,
            'relationFromFields': null,
            'relationToFields': null,
            'relationOnDelete': null,
            'relationName': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'meta_title',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'String',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
          {
            'name': 'meta_description',
            'kind': 'scalar',
            'isList': false,
            'isRequired': false,
            'isUnique': false,
            'isId': false,
            'isReadOnly': false,
            'hasDefaultValue': false,
            'type': 'String',
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'default': null,
            'relationFromFields': null,
            'relationToFields': null,
            'relationOnDelete': null,
            'relationName': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'meta_description',
              'kind': 'scalar',
              'isList': false,
              'isRequired': false,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'String',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
          {
            'name': 'published',
            'kind': 'scalar',
            'isList': false,
            'isRequired': true,
            'isUnique': false,
            'isId': false,
            'isReadOnly': false,
            'hasDefaultValue': true,
            'type': 'Boolean',
            'default': false,
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'relationFromFields': null,
            'relationToFields': null,
            'relationOnDelete': null,
            'relationName': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'published',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': true,
              'type': 'Boolean',
              'default': false,
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
          {
            'name': 'post',
            'kind': 'object',
            'isList': false,
            'isRequired': true,
            'isUnique': false,
            'isId': false,
            'isReadOnly': false,
            'hasDefaultValue': false,
            'type': 'Post',
            'relationName': 'PostToPostMeta',
            'relationFromFields': ['postId'],
            'relationToFields': ['id'],
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'default': null,
            'relationOnDelete': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'post',
              'kind': 'object',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'Post',
              'relationName': 'PostToPostMeta',
              'relationFromFields': ['postId'],
              'relationToFields': ['id'],
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
          {
            'name': 'postId',
            'kind': 'scalar',
            'isList': false,
            'isRequired': true,
            'isUnique': false,
            'isId': false,
            'isReadOnly': true,
            'hasDefaultValue': false,
            'type': 'Int',
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'default': null,
            'relationFromFields': null,
            'relationToFields': null,
            'relationOnDelete': null,
            'relationName': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'postId',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': true,
              'hasDefaultValue': false,
              'type': 'Int',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
        ],
        'primaryKey': null,
        'uniqueFields': [],
        'uniqueIndexes': [],
        'isGenerated': false,
        'fieldsMap': null,
        'documentation': null,
        'extra': {
          'name': 'PostMeta',
          'dbName': null,
          'fields': [
            {
              'name': 'id',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': true,
              'isReadOnly': false,
              'hasDefaultValue': true,
              'type': 'Int',
              'default': {
                'name': 'autoincrement',
                'args': [],
              },
              'isGenerated': false,
              'isUpdatedAt': false,
            },
            {
              'name': 'meta_title',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'String',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
            {
              'name': 'meta_description',
              'kind': 'scalar',
              'isList': false,
              'isRequired': false,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'String',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
            {
              'name': 'published',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': true,
              'type': 'Boolean',
              'default': false,
              'isGenerated': false,
              'isUpdatedAt': false,
            },
            {
              'name': 'post',
              'kind': 'object',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'Post',
              'relationName': 'PostToPostMeta',
              'relationFromFields': ['postId'],
              'relationToFields': ['id'],
              'isGenerated': false,
              'isUpdatedAt': false,
            },
            {
              'name': 'postId',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': true,
              'hasDefaultValue': false,
              'type': 'Int',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          ],
          'primaryKey': null,
          'uniqueFields': [],
          'uniqueIndexes': [],
          'isGenerated': false,
        },
      },
      {
        'name': 'Amenities',
        'dbName': null,
        'fields': [
          {
            'name': 'id',
            'kind': 'scalar',
            'isList': false,
            'isRequired': true,
            'isUnique': false,
            'isId': true,
            'isReadOnly': false,
            'hasDefaultValue': true,
            'type': 'Int',
            'default': {
              'name': 'autoincrement',
              'args': [],
            },
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'relationFromFields': null,
            'relationToFields': null,
            'relationOnDelete': null,
            'relationName': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'id',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': true,
              'isReadOnly': false,
              'hasDefaultValue': true,
              'type': 'Int',
              'default': {
                'name': 'autoincrement',
                'args': [],
              },
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
          {
            'name': 'name',
            'kind': 'scalar',
            'isList': false,
            'isRequired': true,
            'isUnique': false,
            'isId': false,
            'isReadOnly': false,
            'hasDefaultValue': false,
            'type': 'String',
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'default': null,
            'relationFromFields': null,
            'relationToFields': null,
            'relationOnDelete': null,
            'relationName': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'name',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'String',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
          {
            'name': 'slug',
            'kind': 'scalar',
            'isList': false,
            'isRequired': false,
            'isUnique': true,
            'isId': false,
            'isReadOnly': false,
            'hasDefaultValue': false,
            'type': 'String',
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'default': null,
            'relationFromFields': null,
            'relationToFields': null,
            'relationOnDelete': null,
            'relationName': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'slug',
              'kind': 'scalar',
              'isList': false,
              'isRequired': false,
              'isUnique': true,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'String',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
          {
            'name': 'description',
            'kind': 'scalar',
            'isList': false,
            'isRequired': false,
            'isUnique': false,
            'isId': false,
            'isReadOnly': false,
            'hasDefaultValue': false,
            'type': 'String',
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'default': null,
            'relationFromFields': null,
            'relationToFields': null,
            'relationOnDelete': null,
            'relationName': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'description',
              'kind': 'scalar',
              'isList': false,
              'isRequired': false,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'String',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
          {
            'name': 'published',
            'kind': 'scalar',
            'isList': false,
            'isRequired': true,
            'isUnique': false,
            'isId': false,
            'isReadOnly': false,
            'hasDefaultValue': true,
            'type': 'Boolean',
            'default': false,
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'relationFromFields': null,
            'relationToFields': null,
            'relationOnDelete': null,
            'relationName': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'published',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': true,
              'type': 'Boolean',
              'default': false,
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
          {
            'name': 'category',
            'kind': 'object',
            'isList': false,
            'isRequired': true,
            'isUnique': false,
            'isId': false,
            'isReadOnly': false,
            'hasDefaultValue': false,
            'type': 'Category',
            'relationName': 'AmenitiesToCategory',
            'relationFromFields': ['categoryId'],
            'relationToFields': ['id'],
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'default': null,
            'relationOnDelete': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'category',
              'kind': 'object',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'Category',
              'relationName': 'AmenitiesToCategory',
              'relationFromFields': ['categoryId'],
              'relationToFields': ['id'],
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
          {
            'name': 'categoryId',
            'kind': 'scalar',
            'isList': false,
            'isRequired': true,
            'isUnique': false,
            'isId': false,
            'isReadOnly': true,
            'hasDefaultValue': false,
            'type': 'Int',
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'default': null,
            'relationFromFields': null,
            'relationToFields': null,
            'relationOnDelete': null,
            'relationName': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'categoryId',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': true,
              'hasDefaultValue': false,
              'type': 'Int',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
        ],
        'primaryKey': null,
        'uniqueFields': [],
        'uniqueIndexes': [],
        'isGenerated': false,
        'fieldsMap': null,
        'documentation': null,
        'extra': {
          'name': 'Amenities',
          'dbName': null,
          'fields': [
            {
              'name': 'id',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': true,
              'isReadOnly': false,
              'hasDefaultValue': true,
              'type': 'Int',
              'default': {
                'name': 'autoincrement',
                'args': [],
              },
              'isGenerated': false,
              'isUpdatedAt': false,
            },
            {
              'name': 'name',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'String',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
            {
              'name': 'slug',
              'kind': 'scalar',
              'isList': false,
              'isRequired': false,
              'isUnique': true,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'String',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
            {
              'name': 'description',
              'kind': 'scalar',
              'isList': false,
              'isRequired': false,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'String',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
            {
              'name': 'published',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': true,
              'type': 'Boolean',
              'default': false,
              'isGenerated': false,
              'isUpdatedAt': false,
            },
            {
              'name': 'category',
              'kind': 'object',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'Category',
              'relationName': 'AmenitiesToCategory',
              'relationFromFields': ['categoryId'],
              'relationToFields': ['id'],
              'isGenerated': false,
              'isUpdatedAt': false,
            },
            {
              'name': 'categoryId',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': true,
              'hasDefaultValue': false,
              'type': 'Int',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          ],
          'primaryKey': null,
          'uniqueFields': [],
          'uniqueIndexes': [],
          'isGenerated': false,
        },
      },
      {
        'name': 'Category',
        'dbName': null,
        'fields': [
          {
            'name': 'id',
            'kind': 'scalar',
            'isList': false,
            'isRequired': true,
            'isUnique': false,
            'isId': true,
            'isReadOnly': false,
            'hasDefaultValue': true,
            'type': 'Int',
            'default': {
              'name': 'autoincrement',
              'args': [],
            },
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'relationFromFields': null,
            'relationToFields': null,
            'relationOnDelete': null,
            'relationName': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'id',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': true,
              'isReadOnly': false,
              'hasDefaultValue': true,
              'type': 'Int',
              'default': {
                'name': 'autoincrement',
                'args': [],
              },
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
          {
            'name': 'name',
            'kind': 'scalar',
            'isList': false,
            'isRequired': true,
            'isUnique': false,
            'isId': false,
            'isReadOnly': false,
            'hasDefaultValue': false,
            'type': 'String',
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'default': null,
            'relationFromFields': null,
            'relationToFields': null,
            'relationOnDelete': null,
            'relationName': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'name',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'String',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
          {
            'name': 'slug',
            'kind': 'scalar',
            'isList': false,
            'isRequired': false,
            'isUnique': true,
            'isId': false,
            'isReadOnly': false,
            'hasDefaultValue': false,
            'type': 'String',
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'default': null,
            'relationFromFields': null,
            'relationToFields': null,
            'relationOnDelete': null,
            'relationName': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'slug',
              'kind': 'scalar',
              'isList': false,
              'isRequired': false,
              'isUnique': true,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'String',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
          {
            'name': 'description',
            'kind': 'scalar',
            'isList': false,
            'isRequired': false,
            'isUnique': false,
            'isId': false,
            'isReadOnly': false,
            'hasDefaultValue': false,
            'type': 'String',
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'default': null,
            'relationFromFields': null,
            'relationToFields': null,
            'relationOnDelete': null,
            'relationName': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'description',
              'kind': 'scalar',
              'isList': false,
              'isRequired': false,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'String',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
          {
            'name': 'published',
            'kind': 'scalar',
            'isList': false,
            'isRequired': true,
            'isUnique': false,
            'isId': false,
            'isReadOnly': false,
            'hasDefaultValue': true,
            'type': 'Boolean',
            'default': false,
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'relationFromFields': null,
            'relationToFields': null,
            'relationOnDelete': null,
            'relationName': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'published',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': true,
              'type': 'Boolean',
              'default': false,
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
          {
            'name': 'amenities',
            'kind': 'object',
            'isList': true,
            'isRequired': true,
            'isUnique': false,
            'isId': false,
            'isReadOnly': false,
            'hasDefaultValue': false,
            'type': 'Amenities',
            'relationName': 'AmenitiesToCategory',
            'relationFromFields': [],
            'relationToFields': [],
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'default': null,
            'relationOnDelete': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'amenities',
              'kind': 'object',
              'isList': true,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'Amenities',
              'relationName': 'AmenitiesToCategory',
              'relationFromFields': [],
              'relationToFields': [],
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
          {
            'name': 'post',
            'kind': 'object',
            'isList': false,
            'isRequired': true,
            'isUnique': false,
            'isId': false,
            'isReadOnly': false,
            'hasDefaultValue': false,
            'type': 'Post',
            'relationName': 'CategoryToPost',
            'relationFromFields': ['postId'],
            'relationToFields': ['id'],
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'default': null,
            'relationOnDelete': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'post',
              'kind': 'object',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'Post',
              'relationName': 'CategoryToPost',
              'relationFromFields': ['postId'],
              'relationToFields': ['id'],
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
          {
            'name': 'postId',
            'kind': 'scalar',
            'isList': false,
            'isRequired': true,
            'isUnique': false,
            'isId': false,
            'isReadOnly': true,
            'hasDefaultValue': false,
            'type': 'Int',
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'default': null,
            'relationFromFields': null,
            'relationToFields': null,
            'relationOnDelete': null,
            'relationName': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'postId',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': true,
              'hasDefaultValue': false,
              'type': 'Int',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
        ],
        'primaryKey': null,
        'uniqueFields': [],
        'uniqueIndexes': [],
        'isGenerated': false,
        'fieldsMap': null,
        'documentation': null,
        'extra': {
          'name': 'Category',
          'dbName': null,
          'fields': [
            {
              'name': 'id',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': true,
              'isReadOnly': false,
              'hasDefaultValue': true,
              'type': 'Int',
              'default': {
                'name': 'autoincrement',
                'args': [],
              },
              'isGenerated': false,
              'isUpdatedAt': false,
            },
            {
              'name': 'name',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'String',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
            {
              'name': 'slug',
              'kind': 'scalar',
              'isList': false,
              'isRequired': false,
              'isUnique': true,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'String',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
            {
              'name': 'description',
              'kind': 'scalar',
              'isList': false,
              'isRequired': false,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'String',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
            {
              'name': 'published',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': true,
              'type': 'Boolean',
              'default': false,
              'isGenerated': false,
              'isUpdatedAt': false,
            },
            {
              'name': 'amenities',
              'kind': 'object',
              'isList': true,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'Amenities',
              'relationName': 'AmenitiesToCategory',
              'relationFromFields': [],
              'relationToFields': [],
              'isGenerated': false,
              'isUpdatedAt': false,
            },
            {
              'name': 'post',
              'kind': 'object',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'Post',
              'relationName': 'CategoryToPost',
              'relationFromFields': ['postId'],
              'relationToFields': ['id'],
              'isGenerated': false,
              'isUpdatedAt': false,
            },
            {
              'name': 'postId',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': true,
              'hasDefaultValue': false,
              'type': 'Int',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          ],
          'primaryKey': null,
          'uniqueFields': [],
          'uniqueIndexes': [],
          'isGenerated': false,
        },
      },
    ],
    'enums': [
      {
        'name': 'Role',
        'values': [
          {
            'name': 'USER',
            'dbName': null,
          },
          {
            'name': 'ADMIN',
            'dbName': null,
          },
        ],
        'dbName': null,
        'documentation': null,
      }
    ],
    'types': [],
  },
  'schema': {
    'rootQueryType': null,
    'rootMutationType': null,
    'inputObjectTypes': {
      'model': null,
      'prisma': [
        {
          'name': 'UsersWhereInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'AND',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UsersWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'UsersWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'OR',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'UsersWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'NOT',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UsersWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'UsersWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'IntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'email',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'role',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'EnumRoleFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Role',
                  'location': 'enumTypes',
                  'namespace': 'model',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'password',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringNullableFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'fcmtoken',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringNullableFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'salt',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringNullableFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'posts',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostListRelationFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'Profile',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ProfileListRelationFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UsersOrderByWithRelationInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 0,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'email',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'role',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'password',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'fcmtoken',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'salt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'posts',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostOrderByRelationAggregateInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'Profile',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ProfileOrderByRelationAggregateInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UsersWhereUniqueInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'email',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UsersOrderByWithAggregationInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 0,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'email',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'role',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'password',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'fcmtoken',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'salt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_count',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UsersCountOrderByAggregateInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_avg',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UsersAvgOrderByAggregateInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_max',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UsersMaxOrderByAggregateInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_min',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UsersMinOrderByAggregateInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_sum',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UsersSumOrderByAggregateInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UsersScalarWhereWithAggregatesInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'AND',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UsersScalarWhereWithAggregatesInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'UsersScalarWhereWithAggregatesInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'OR',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'UsersScalarWhereWithAggregatesInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'NOT',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UsersScalarWhereWithAggregatesInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'UsersScalarWhereWithAggregatesInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'IntWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'email',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'role',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'EnumRoleWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Role',
                  'location': 'enumTypes',
                  'namespace': 'model',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'password',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringNullableWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'fcmtoken',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringNullableWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'salt',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringNullableWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'ProfileWhereInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'AND',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ProfileWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'ProfileWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'OR',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'ProfileWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'NOT',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ProfileWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'ProfileWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'IntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'firstName',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringNullableFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'lastName',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringNullableFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'addressLine1',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringNullableFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'addressLine2',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringNullableFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'city',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringNullableFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'state',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringNullableFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'country',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringNullableFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'postCode',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringNullableFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'phone',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringNullableFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'slug',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringNullableFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'images',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringNullableFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'longitude',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringNullableFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'latitude',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringNullableFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'published',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'BoolFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'user',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UsersRelationFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'UsersWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'userId',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'IntNullableFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'ProfileOrderByWithRelationInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 0,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'firstName',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lastName',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'addressLine1',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'addressLine2',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'city',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'state',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'country',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'postCode',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'phone',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'slug',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'images',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'longitude',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'latitude',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'published',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'user',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UsersOrderByWithRelationInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'userId',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'ProfileWhereUniqueInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'slug',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'ProfileOrderByWithAggregationInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 0,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'firstName',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lastName',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'addressLine1',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'addressLine2',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'city',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'state',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'country',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'postCode',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'phone',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'slug',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'images',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'longitude',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'latitude',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'published',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'userId',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_count',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ProfileCountOrderByAggregateInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_avg',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ProfileAvgOrderByAggregateInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_max',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ProfileMaxOrderByAggregateInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_min',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ProfileMinOrderByAggregateInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_sum',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ProfileSumOrderByAggregateInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'ProfileScalarWhereWithAggregatesInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'AND',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ProfileScalarWhereWithAggregatesInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'ProfileScalarWhereWithAggregatesInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'OR',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'ProfileScalarWhereWithAggregatesInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'NOT',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ProfileScalarWhereWithAggregatesInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'ProfileScalarWhereWithAggregatesInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'IntWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'firstName',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringNullableWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'lastName',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringNullableWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'addressLine1',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringNullableWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'addressLine2',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringNullableWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'city',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringNullableWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'state',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringNullableWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'country',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringNullableWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'postCode',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringNullableWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'phone',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringNullableWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'slug',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringNullableWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'images',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringNullableWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'longitude',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringNullableWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'latitude',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringNullableWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'published',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'BoolWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'userId',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'IntNullableWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'PostWhereInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'AND',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'PostWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'OR',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'PostWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'NOT',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'PostWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'IntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'title',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'slug',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringNullableFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'description',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringNullableFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'images',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringNullableFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'long_description',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringNullableFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'longitude',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringNullableFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'latitude',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringNullableFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'content',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringNullableFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'published',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'BoolFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'author',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UsersRelationFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'UsersWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'authorId',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'IntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'postmeta',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostMetaListRelationFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'category',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'CategoryListRelationFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'PostOrderByWithRelationInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 0,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'title',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'slug',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'description',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'images',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'long_description',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'longitude',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'latitude',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'content',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'published',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'author',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UsersOrderByWithRelationInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'authorId',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'postmeta',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostMetaOrderByRelationAggregateInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'category',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'CategoryOrderByRelationAggregateInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'PostWhereUniqueInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'slug',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'PostOrderByWithAggregationInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 0,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'title',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'slug',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'description',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'images',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'long_description',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'longitude',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'latitude',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'content',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'published',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'authorId',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_count',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostCountOrderByAggregateInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_avg',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostAvgOrderByAggregateInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_max',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostMaxOrderByAggregateInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_min',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostMinOrderByAggregateInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_sum',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostSumOrderByAggregateInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'PostScalarWhereWithAggregatesInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'AND',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostScalarWhereWithAggregatesInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'PostScalarWhereWithAggregatesInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'OR',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'PostScalarWhereWithAggregatesInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'NOT',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostScalarWhereWithAggregatesInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'PostScalarWhereWithAggregatesInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'IntWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'title',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'slug',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringNullableWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'description',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringNullableWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'images',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringNullableWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'long_description',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringNullableWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'longitude',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringNullableWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'latitude',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringNullableWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'content',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringNullableWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'published',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'BoolWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'authorId',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'IntWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'PostMetaWhereInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'AND',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostMetaWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'PostMetaWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'OR',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'PostMetaWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'NOT',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostMetaWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'PostMetaWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'IntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'meta_title',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'meta_description',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringNullableFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'published',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'BoolFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'post',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostRelationFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'PostWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'postId',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'IntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'PostMetaOrderByWithRelationInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 0,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'meta_title',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'meta_description',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'published',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'post',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostOrderByWithRelationInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'postId',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'PostMetaWhereUniqueInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            }
          ],
          'fieldMap': null,
        },
        {
          'name': 'PostMetaOrderByWithAggregationInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 0,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'meta_title',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'meta_description',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'published',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'postId',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_count',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostMetaCountOrderByAggregateInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_avg',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostMetaAvgOrderByAggregateInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_max',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostMetaMaxOrderByAggregateInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_min',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostMetaMinOrderByAggregateInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_sum',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostMetaSumOrderByAggregateInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'PostMetaScalarWhereWithAggregatesInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'AND',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostMetaScalarWhereWithAggregatesInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'PostMetaScalarWhereWithAggregatesInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'OR',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'PostMetaScalarWhereWithAggregatesInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'NOT',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostMetaScalarWhereWithAggregatesInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'PostMetaScalarWhereWithAggregatesInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'IntWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'meta_title',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'meta_description',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringNullableWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'published',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'BoolWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'postId',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'IntWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'AmenitiesWhereInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'AND',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'AmenitiesWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'AmenitiesWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'OR',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'AmenitiesWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'NOT',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'AmenitiesWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'AmenitiesWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'IntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'slug',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringNullableFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'description',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringNullableFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'published',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'BoolFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'category',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'CategoryRelationFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'CategoryWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'categoryId',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'IntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'AmenitiesOrderByWithRelationInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 0,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'slug',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'description',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'published',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'category',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'CategoryOrderByWithRelationInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'categoryId',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'AmenitiesWhereUniqueInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'slug',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'AmenitiesOrderByWithAggregationInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 0,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'slug',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'description',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'published',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'categoryId',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_count',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'AmenitiesCountOrderByAggregateInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_avg',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'AmenitiesAvgOrderByAggregateInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_max',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'AmenitiesMaxOrderByAggregateInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_min',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'AmenitiesMinOrderByAggregateInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_sum',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'AmenitiesSumOrderByAggregateInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'AmenitiesScalarWhereWithAggregatesInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'AND',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'AmenitiesScalarWhereWithAggregatesInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'AmenitiesScalarWhereWithAggregatesInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'OR',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'AmenitiesScalarWhereWithAggregatesInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'NOT',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'AmenitiesScalarWhereWithAggregatesInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'AmenitiesScalarWhereWithAggregatesInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'IntWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'slug',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringNullableWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'description',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringNullableWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'published',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'BoolWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'categoryId',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'IntWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'CategoryWhereInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'AND',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'CategoryWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'CategoryWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'OR',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'CategoryWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'NOT',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'CategoryWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'CategoryWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'IntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'slug',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringNullableFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'description',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringNullableFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'published',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'BoolFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'amenities',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'AmenitiesListRelationFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'post',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostRelationFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'PostWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'postId',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'IntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'CategoryOrderByWithRelationInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 0,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'slug',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'description',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'published',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'amenities',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'AmenitiesOrderByRelationAggregateInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'post',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostOrderByWithRelationInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'postId',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'CategoryWhereUniqueInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'slug',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'CategoryOrderByWithAggregationInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 0,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'slug',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'description',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'published',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'postId',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_count',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'CategoryCountOrderByAggregateInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_avg',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'CategoryAvgOrderByAggregateInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_max',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'CategoryMaxOrderByAggregateInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_min',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'CategoryMinOrderByAggregateInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_sum',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'CategorySumOrderByAggregateInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'CategoryScalarWhereWithAggregatesInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'AND',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'CategoryScalarWhereWithAggregatesInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'CategoryScalarWhereWithAggregatesInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'OR',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'CategoryScalarWhereWithAggregatesInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'NOT',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'CategoryScalarWhereWithAggregatesInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'CategoryScalarWhereWithAggregatesInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'IntWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'slug',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringNullableWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'description',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringNullableWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'published',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'BoolWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'postId',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'IntWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UsersCreateInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'email',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'role',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Role',
                  'location': 'enumTypes',
                  'namespace': 'model',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'password',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'fcmtoken',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'salt',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'posts',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostCreateNestedManyWithoutAuthorInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'Profile',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ProfileCreateNestedManyWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UsersUncheckedCreateInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'email',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'role',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Role',
                  'location': 'enumTypes',
                  'namespace': 'model',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'password',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'fcmtoken',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'salt',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'posts',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostUncheckedCreateNestedManyWithoutAuthorInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'Profile',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ProfileUncheckedCreateNestedManyWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UsersUpdateInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'email',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'role',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Role',
                  'location': 'enumTypes',
                  'namespace': 'model',
                },
                {
                  'isList': false,
                  'type': 'EnumRoleFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'password',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'fcmtoken',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'salt',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'posts',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostUpdateManyWithoutAuthorNestedInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'Profile',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ProfileUpdateManyWithoutUserNestedInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UsersUncheckedUpdateInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'IntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'email',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'role',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Role',
                  'location': 'enumTypes',
                  'namespace': 'model',
                },
                {
                  'isList': false,
                  'type': 'EnumRoleFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'password',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'fcmtoken',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'salt',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'posts',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostUncheckedUpdateManyWithoutAuthorNestedInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'Profile',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ProfileUncheckedUpdateManyWithoutUserNestedInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UsersCreateManyInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'email',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'role',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Role',
                  'location': 'enumTypes',
                  'namespace': 'model',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'password',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'fcmtoken',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'salt',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UsersUpdateManyMutationInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'email',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'role',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Role',
                  'location': 'enumTypes',
                  'namespace': 'model',
                },
                {
                  'isList': false,
                  'type': 'EnumRoleFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'password',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'fcmtoken',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'salt',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UsersUncheckedUpdateManyInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'IntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'email',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'role',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Role',
                  'location': 'enumTypes',
                  'namespace': 'model',
                },
                {
                  'isList': false,
                  'type': 'EnumRoleFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'password',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'fcmtoken',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'salt',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'ProfileCreateInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'firstName',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'lastName',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'addressLine1',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'addressLine2',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'city',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'state',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'country',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'postCode',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'phone',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'slug',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'images',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'longitude',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'latitude',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'published',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'user',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UsersCreateNestedOneWithoutProfileInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'ProfileUncheckedCreateInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'firstName',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'lastName',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'addressLine1',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'addressLine2',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'city',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'state',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'country',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'postCode',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'phone',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'slug',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'images',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'longitude',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'latitude',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'published',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'userId',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'ProfileUpdateInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'firstName',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'lastName',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'addressLine1',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'addressLine2',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'city',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'state',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'country',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'postCode',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'phone',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'slug',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'images',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'longitude',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'latitude',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'published',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'BoolFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'user',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UsersUpdateOneWithoutProfileNestedInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'ProfileUncheckedUpdateInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'IntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'firstName',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'lastName',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'addressLine1',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'addressLine2',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'city',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'state',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'country',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'postCode',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'phone',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'slug',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'images',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'longitude',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'latitude',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'published',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'BoolFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'userId',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableIntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'ProfileCreateManyInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'firstName',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'lastName',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'addressLine1',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'addressLine2',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'city',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'state',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'country',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'postCode',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'phone',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'slug',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'images',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'longitude',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'latitude',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'published',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'userId',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'ProfileUpdateManyMutationInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'firstName',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'lastName',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'addressLine1',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'addressLine2',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'city',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'state',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'country',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'postCode',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'phone',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'slug',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'images',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'longitude',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'latitude',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'published',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'BoolFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'ProfileUncheckedUpdateManyInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'IntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'firstName',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'lastName',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'addressLine1',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'addressLine2',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'city',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'state',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'country',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'postCode',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'phone',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'slug',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'images',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'longitude',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'latitude',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'published',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'BoolFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'userId',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableIntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'PostCreateInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'title',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'slug',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'description',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'images',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'long_description',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'longitude',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'latitude',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'content',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'published',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'author',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UsersCreateNestedOneWithoutPostsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'postmeta',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostMetaCreateNestedManyWithoutPostInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'category',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'CategoryCreateNestedManyWithoutPostInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'PostUncheckedCreateInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'title',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'slug',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'description',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'images',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'long_description',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'longitude',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'latitude',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'content',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'published',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'authorId',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'postmeta',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostMetaUncheckedCreateNestedManyWithoutPostInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'category',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'CategoryUncheckedCreateNestedManyWithoutPostInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'PostUpdateInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'title',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'slug',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'description',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'images',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'long_description',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'longitude',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'latitude',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'content',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'published',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'BoolFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'author',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UsersUpdateOneRequiredWithoutPostsNestedInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'postmeta',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostMetaUpdateManyWithoutPostNestedInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'category',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'CategoryUpdateManyWithoutPostNestedInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'PostUncheckedUpdateInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'IntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'title',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'slug',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'description',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'images',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'long_description',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'longitude',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'latitude',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'content',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'published',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'BoolFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'authorId',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'IntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'postmeta',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostMetaUncheckedUpdateManyWithoutPostNestedInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'category',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'CategoryUncheckedUpdateManyWithoutPostNestedInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'PostCreateManyInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'title',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'slug',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'description',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'images',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'long_description',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'longitude',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'latitude',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'content',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'published',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'authorId',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'PostUpdateManyMutationInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'title',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'slug',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'description',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'images',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'long_description',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'longitude',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'latitude',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'content',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'published',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'BoolFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'PostUncheckedUpdateManyInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'IntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'title',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'slug',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'description',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'images',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'long_description',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'longitude',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'latitude',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'content',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'published',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'BoolFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'authorId',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'IntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'PostMetaCreateInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'meta_title',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'meta_description',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'published',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'post',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostCreateNestedOneWithoutPostmetaInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'PostMetaUncheckedCreateInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'meta_title',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'meta_description',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'published',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'postId',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'PostMetaUpdateInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'meta_title',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'meta_description',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'published',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'BoolFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'post',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostUpdateOneRequiredWithoutPostmetaNestedInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'PostMetaUncheckedUpdateInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'IntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'meta_title',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'meta_description',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'published',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'BoolFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'postId',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'IntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'PostMetaCreateManyInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'meta_title',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'meta_description',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'published',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'postId',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'PostMetaUpdateManyMutationInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'meta_title',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'meta_description',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'published',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'BoolFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'PostMetaUncheckedUpdateManyInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'IntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'meta_title',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'meta_description',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'published',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'BoolFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'postId',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'IntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'AmenitiesCreateInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'slug',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'description',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'published',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'category',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'CategoryCreateNestedOneWithoutAmenitiesInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'AmenitiesUncheckedCreateInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'slug',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'description',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'published',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'categoryId',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'AmenitiesUpdateInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'slug',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'description',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'published',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'BoolFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'category',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type':
                      'CategoryUpdateOneRequiredWithoutAmenitiesNestedInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'AmenitiesUncheckedUpdateInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'IntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'slug',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'description',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'published',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'BoolFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'categoryId',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'IntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'AmenitiesCreateManyInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'slug',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'description',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'published',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'categoryId',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'AmenitiesUpdateManyMutationInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'slug',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'description',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'published',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'BoolFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'AmenitiesUncheckedUpdateManyInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'IntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'slug',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'description',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'published',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'BoolFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'categoryId',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'IntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'CategoryCreateInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'slug',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'description',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'published',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'amenities',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'AmenitiesCreateNestedManyWithoutCategoryInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'post',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostCreateNestedOneWithoutCategoryInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'CategoryUncheckedCreateInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'slug',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'description',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'published',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'amenities',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type':
                      'AmenitiesUncheckedCreateNestedManyWithoutCategoryInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'postId',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'CategoryUpdateInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'slug',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'description',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'published',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'BoolFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'amenities',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'AmenitiesUpdateManyWithoutCategoryNestedInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'post',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostUpdateOneRequiredWithoutCategoryNestedInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'CategoryUncheckedUpdateInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'IntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'slug',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'description',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'published',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'BoolFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'amenities',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type':
                      'AmenitiesUncheckedUpdateManyWithoutCategoryNestedInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'postId',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'IntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'CategoryCreateManyInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'slug',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'description',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'published',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'postId',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'CategoryUpdateManyMutationInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'slug',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'description',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'published',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'BoolFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'CategoryUncheckedUpdateManyInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'IntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'slug',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'description',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'published',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'BoolFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'postId',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'IntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'IntFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'in',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'notIn',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NestedIntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'StringFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'in',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'notIn',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'contains',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'startsWith',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'endsWith',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NestedStringFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'EnumRoleFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Role',
                  'location': 'enumTypes',
                  'namespace': 'model',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'in',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'Role',
                  'location': 'enumTypes',
                  'namespace': 'model',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'notIn',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'Role',
                  'location': 'enumTypes',
                  'namespace': 'model',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Role',
                  'location': 'enumTypes',
                  'namespace': 'model',
                },
                {
                  'isList': false,
                  'type': 'NestedEnumRoleFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'StringNullableFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'in',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'notIn',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'lt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'contains',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'startsWith',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'endsWith',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NestedStringNullableFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'PostListRelationFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'every',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'some',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'none',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'ProfileListRelationFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'every',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ProfileWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'some',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ProfileWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'none',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ProfileWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'PostOrderByRelationAggregateInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': '_count',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            }
          ],
          'fieldMap': null,
        },
        {
          'name': 'ProfileOrderByRelationAggregateInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': '_count',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            }
          ],
          'fieldMap': null,
        },
        {
          'name': 'UsersCountOrderByAggregateInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'email',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'role',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'password',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'fcmtoken',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'salt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UsersAvgOrderByAggregateInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            }
          ],
          'fieldMap': null,
        },
        {
          'name': 'UsersMaxOrderByAggregateInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'email',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'role',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'password',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'fcmtoken',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'salt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UsersMinOrderByAggregateInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'email',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'role',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'password',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'fcmtoken',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'salt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UsersSumOrderByAggregateInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            }
          ],
          'fieldMap': null,
        },
        {
          'name': 'IntWithAggregatesFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'in',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'notIn',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NestedIntWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': '_count',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedIntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_avg',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedFloatFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_sum',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedIntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_min',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedIntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_max',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedIntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'StringWithAggregatesFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'in',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'notIn',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'contains',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'startsWith',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'endsWith',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NestedStringWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': '_count',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedIntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_min',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedStringFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_max',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedStringFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'EnumRoleWithAggregatesFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Role',
                  'location': 'enumTypes',
                  'namespace': 'model',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'in',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'Role',
                  'location': 'enumTypes',
                  'namespace': 'model',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'notIn',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'Role',
                  'location': 'enumTypes',
                  'namespace': 'model',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Role',
                  'location': 'enumTypes',
                  'namespace': 'model',
                },
                {
                  'isList': false,
                  'type': 'NestedEnumRoleWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': '_count',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedIntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_min',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedEnumRoleFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_max',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedEnumRoleFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'StringNullableWithAggregatesFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'in',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'notIn',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'lt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'contains',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'startsWith',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'endsWith',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NestedStringNullableWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': '_count',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedIntNullableFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_min',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedStringNullableFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_max',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedStringNullableFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'BoolFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NestedBoolFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UsersRelationFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'is',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UsersWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'isNot',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UsersWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'IntNullableFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'in',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'notIn',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'lt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NestedIntNullableFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'ProfileCountOrderByAggregateInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'firstName',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lastName',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'addressLine1',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'addressLine2',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'city',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'state',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'country',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'postCode',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'phone',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'slug',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'images',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'longitude',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'latitude',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'published',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'userId',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'ProfileAvgOrderByAggregateInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'userId',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'ProfileMaxOrderByAggregateInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'firstName',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lastName',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'addressLine1',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'addressLine2',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'city',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'state',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'country',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'postCode',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'phone',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'slug',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'images',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'longitude',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'latitude',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'published',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'userId',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'ProfileMinOrderByAggregateInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'firstName',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lastName',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'addressLine1',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'addressLine2',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'city',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'state',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'country',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'postCode',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'phone',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'slug',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'images',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'longitude',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'latitude',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'published',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'userId',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'ProfileSumOrderByAggregateInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'userId',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'BoolWithAggregatesFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NestedBoolWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': '_count',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedIntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_min',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedBoolFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_max',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedBoolFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'IntNullableWithAggregatesFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'in',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'notIn',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'lt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NestedIntNullableWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': '_count',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedIntNullableFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_avg',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedFloatNullableFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_sum',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedIntNullableFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_min',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedIntNullableFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_max',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedIntNullableFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'PostMetaListRelationFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'every',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostMetaWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'some',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostMetaWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'none',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostMetaWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'CategoryListRelationFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'every',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'CategoryWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'some',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'CategoryWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'none',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'CategoryWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'PostMetaOrderByRelationAggregateInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': '_count',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            }
          ],
          'fieldMap': null,
        },
        {
          'name': 'CategoryOrderByRelationAggregateInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': '_count',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            }
          ],
          'fieldMap': null,
        },
        {
          'name': 'PostCountOrderByAggregateInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'title',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'slug',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'description',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'images',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'long_description',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'longitude',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'latitude',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'content',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'published',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'authorId',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'PostAvgOrderByAggregateInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'authorId',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'PostMaxOrderByAggregateInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'title',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'slug',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'description',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'images',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'long_description',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'longitude',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'latitude',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'content',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'published',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'authorId',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'PostMinOrderByAggregateInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'title',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'slug',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'description',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'images',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'long_description',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'longitude',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'latitude',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'content',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'published',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'authorId',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'PostSumOrderByAggregateInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'authorId',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'PostRelationFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'is',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'isNot',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'PostMetaCountOrderByAggregateInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'meta_title',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'meta_description',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'published',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'postId',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'PostMetaAvgOrderByAggregateInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'postId',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'PostMetaMaxOrderByAggregateInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'meta_title',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'meta_description',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'published',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'postId',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'PostMetaMinOrderByAggregateInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'meta_title',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'meta_description',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'published',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'postId',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'PostMetaSumOrderByAggregateInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'postId',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'CategoryRelationFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'is',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'CategoryWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'isNot',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'CategoryWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'AmenitiesCountOrderByAggregateInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'slug',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'description',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'published',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'categoryId',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'AmenitiesAvgOrderByAggregateInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'categoryId',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'AmenitiesMaxOrderByAggregateInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'slug',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'description',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'published',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'categoryId',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'AmenitiesMinOrderByAggregateInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'slug',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'description',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'published',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'categoryId',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'AmenitiesSumOrderByAggregateInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'categoryId',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'AmenitiesListRelationFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'every',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'AmenitiesWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'some',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'AmenitiesWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'none',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'AmenitiesWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'AmenitiesOrderByRelationAggregateInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': '_count',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            }
          ],
          'fieldMap': null,
        },
        {
          'name': 'CategoryCountOrderByAggregateInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'slug',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'description',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'published',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'postId',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'CategoryAvgOrderByAggregateInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'postId',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'CategoryMaxOrderByAggregateInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'slug',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'description',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'published',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'postId',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'CategoryMinOrderByAggregateInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'slug',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'description',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'published',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'postId',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'CategorySumOrderByAggregateInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'postId',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'PostCreateNestedManyWithoutAuthorInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'create',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostCreateWithoutAuthorInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'PostCreateWithoutAuthorInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'PostUncheckedCreateWithoutAuthorInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'PostUncheckedCreateWithoutAuthorInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'connectOrCreate',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostCreateOrConnectWithoutAuthorInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'PostCreateOrConnectWithoutAuthorInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'createMany',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostCreateManyAuthorInputEnvelope',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'connect',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'PostWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'ProfileCreateNestedManyWithoutUserInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'create',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ProfileCreateWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'ProfileCreateWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'ProfileUncheckedCreateWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'ProfileUncheckedCreateWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'connectOrCreate',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ProfileCreateOrConnectWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'ProfileCreateOrConnectWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'createMany',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ProfileCreateManyUserInputEnvelope',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'connect',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ProfileWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'ProfileWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'PostUncheckedCreateNestedManyWithoutAuthorInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'create',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostCreateWithoutAuthorInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'PostCreateWithoutAuthorInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'PostUncheckedCreateWithoutAuthorInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'PostUncheckedCreateWithoutAuthorInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'connectOrCreate',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostCreateOrConnectWithoutAuthorInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'PostCreateOrConnectWithoutAuthorInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'createMany',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostCreateManyAuthorInputEnvelope',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'connect',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'PostWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'ProfileUncheckedCreateNestedManyWithoutUserInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'create',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ProfileCreateWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'ProfileCreateWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'ProfileUncheckedCreateWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'ProfileUncheckedCreateWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'connectOrCreate',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ProfileCreateOrConnectWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'ProfileCreateOrConnectWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'createMany',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ProfileCreateManyUserInputEnvelope',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'connect',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ProfileWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'ProfileWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'StringFieldUpdateOperationsInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'set',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            }
          ],
          'fieldMap': null,
        },
        {
          'name': 'EnumRoleFieldUpdateOperationsInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'set',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Role',
                  'location': 'enumTypes',
                  'namespace': 'model',
                }
              ],
              'deprecation': null,
            }
          ],
          'fieldMap': null,
        },
        {
          'name': 'NullableStringFieldUpdateOperationsInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'set',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            }
          ],
          'fieldMap': null,
        },
        {
          'name': 'PostUpdateManyWithoutAuthorNestedInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'create',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostCreateWithoutAuthorInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'PostCreateWithoutAuthorInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'PostUncheckedCreateWithoutAuthorInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'PostUncheckedCreateWithoutAuthorInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'connectOrCreate',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostCreateOrConnectWithoutAuthorInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'PostCreateOrConnectWithoutAuthorInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'upsert',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostUpsertWithWhereUniqueWithoutAuthorInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'PostUpsertWithWhereUniqueWithoutAuthorInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'createMany',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostCreateManyAuthorInputEnvelope',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'set',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'PostWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'disconnect',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'PostWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'delete',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'PostWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'connect',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'PostWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'update',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostUpdateWithWhereUniqueWithoutAuthorInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'PostUpdateWithWhereUniqueWithoutAuthorInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'updateMany',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostUpdateManyWithWhereWithoutAuthorInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'PostUpdateManyWithWhereWithoutAuthorInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'deleteMany',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostScalarWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'PostScalarWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'ProfileUpdateManyWithoutUserNestedInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'create',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ProfileCreateWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'ProfileCreateWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'ProfileUncheckedCreateWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'ProfileUncheckedCreateWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'connectOrCreate',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ProfileCreateOrConnectWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'ProfileCreateOrConnectWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'upsert',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ProfileUpsertWithWhereUniqueWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'ProfileUpsertWithWhereUniqueWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'createMany',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ProfileCreateManyUserInputEnvelope',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'set',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ProfileWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'ProfileWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'disconnect',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ProfileWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'ProfileWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'delete',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ProfileWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'ProfileWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'connect',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ProfileWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'ProfileWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'update',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ProfileUpdateWithWhereUniqueWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'ProfileUpdateWithWhereUniqueWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'updateMany',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ProfileUpdateManyWithWhereWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'ProfileUpdateManyWithWhereWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'deleteMany',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ProfileScalarWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'ProfileScalarWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'IntFieldUpdateOperationsInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'set',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'increment',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'decrement',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'multiply',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'divide',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'PostUncheckedUpdateManyWithoutAuthorNestedInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'create',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostCreateWithoutAuthorInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'PostCreateWithoutAuthorInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'PostUncheckedCreateWithoutAuthorInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'PostUncheckedCreateWithoutAuthorInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'connectOrCreate',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostCreateOrConnectWithoutAuthorInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'PostCreateOrConnectWithoutAuthorInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'upsert',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostUpsertWithWhereUniqueWithoutAuthorInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'PostUpsertWithWhereUniqueWithoutAuthorInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'createMany',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostCreateManyAuthorInputEnvelope',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'set',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'PostWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'disconnect',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'PostWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'delete',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'PostWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'connect',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'PostWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'update',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostUpdateWithWhereUniqueWithoutAuthorInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'PostUpdateWithWhereUniqueWithoutAuthorInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'updateMany',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostUpdateManyWithWhereWithoutAuthorInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'PostUpdateManyWithWhereWithoutAuthorInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'deleteMany',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostScalarWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'PostScalarWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'ProfileUncheckedUpdateManyWithoutUserNestedInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'create',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ProfileCreateWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'ProfileCreateWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'ProfileUncheckedCreateWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'ProfileUncheckedCreateWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'connectOrCreate',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ProfileCreateOrConnectWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'ProfileCreateOrConnectWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'upsert',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ProfileUpsertWithWhereUniqueWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'ProfileUpsertWithWhereUniqueWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'createMany',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ProfileCreateManyUserInputEnvelope',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'set',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ProfileWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'ProfileWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'disconnect',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ProfileWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'ProfileWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'delete',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ProfileWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'ProfileWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'connect',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ProfileWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'ProfileWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'update',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ProfileUpdateWithWhereUniqueWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'ProfileUpdateWithWhereUniqueWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'updateMany',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ProfileUpdateManyWithWhereWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'ProfileUpdateManyWithWhereWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'deleteMany',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ProfileScalarWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'ProfileScalarWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UsersCreateNestedOneWithoutProfileInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'create',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UsersCreateWithoutProfileInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'UsersUncheckedCreateWithoutProfileInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'connectOrCreate',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UsersCreateOrConnectWithoutProfileInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'connect',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UsersWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'BoolFieldUpdateOperationsInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'set',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            }
          ],
          'fieldMap': null,
        },
        {
          'name': 'UsersUpdateOneWithoutProfileNestedInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'create',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UsersCreateWithoutProfileInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'UsersUncheckedCreateWithoutProfileInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'connectOrCreate',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UsersCreateOrConnectWithoutProfileInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'upsert',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UsersUpsertWithoutProfileInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'disconnect',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'delete',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'connect',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UsersWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'update',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UsersUpdateWithoutProfileInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'UsersUncheckedUpdateWithoutProfileInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'NullableIntFieldUpdateOperationsInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'set',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'increment',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'decrement',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'multiply',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'divide',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UsersCreateNestedOneWithoutPostsInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'create',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UsersCreateWithoutPostsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'UsersUncheckedCreateWithoutPostsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'connectOrCreate',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UsersCreateOrConnectWithoutPostsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'connect',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UsersWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'PostMetaCreateNestedManyWithoutPostInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'create',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostMetaCreateWithoutPostInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'PostMetaCreateWithoutPostInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'PostMetaUncheckedCreateWithoutPostInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'PostMetaUncheckedCreateWithoutPostInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'connectOrCreate',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostMetaCreateOrConnectWithoutPostInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'PostMetaCreateOrConnectWithoutPostInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'createMany',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostMetaCreateManyPostInputEnvelope',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'connect',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostMetaWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'PostMetaWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'CategoryCreateNestedManyWithoutPostInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'create',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'CategoryCreateWithoutPostInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'CategoryCreateWithoutPostInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'CategoryUncheckedCreateWithoutPostInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'CategoryUncheckedCreateWithoutPostInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'connectOrCreate',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'CategoryCreateOrConnectWithoutPostInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'CategoryCreateOrConnectWithoutPostInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'createMany',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'CategoryCreateManyPostInputEnvelope',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'connect',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'CategoryWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'CategoryWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'PostMetaUncheckedCreateNestedManyWithoutPostInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'create',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostMetaCreateWithoutPostInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'PostMetaCreateWithoutPostInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'PostMetaUncheckedCreateWithoutPostInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'PostMetaUncheckedCreateWithoutPostInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'connectOrCreate',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostMetaCreateOrConnectWithoutPostInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'PostMetaCreateOrConnectWithoutPostInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'createMany',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostMetaCreateManyPostInputEnvelope',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'connect',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostMetaWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'PostMetaWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'CategoryUncheckedCreateNestedManyWithoutPostInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'create',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'CategoryCreateWithoutPostInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'CategoryCreateWithoutPostInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'CategoryUncheckedCreateWithoutPostInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'CategoryUncheckedCreateWithoutPostInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'connectOrCreate',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'CategoryCreateOrConnectWithoutPostInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'CategoryCreateOrConnectWithoutPostInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'createMany',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'CategoryCreateManyPostInputEnvelope',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'connect',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'CategoryWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'CategoryWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UsersUpdateOneRequiredWithoutPostsNestedInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'create',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UsersCreateWithoutPostsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'UsersUncheckedCreateWithoutPostsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'connectOrCreate',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UsersCreateOrConnectWithoutPostsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'upsert',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UsersUpsertWithoutPostsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'connect',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UsersWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'update',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UsersUpdateWithoutPostsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'UsersUncheckedUpdateWithoutPostsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'PostMetaUpdateManyWithoutPostNestedInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'create',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostMetaCreateWithoutPostInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'PostMetaCreateWithoutPostInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'PostMetaUncheckedCreateWithoutPostInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'PostMetaUncheckedCreateWithoutPostInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'connectOrCreate',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostMetaCreateOrConnectWithoutPostInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'PostMetaCreateOrConnectWithoutPostInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'upsert',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostMetaUpsertWithWhereUniqueWithoutPostInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'PostMetaUpsertWithWhereUniqueWithoutPostInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'createMany',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostMetaCreateManyPostInputEnvelope',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'set',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostMetaWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'PostMetaWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'disconnect',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostMetaWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'PostMetaWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'delete',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostMetaWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'PostMetaWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'connect',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostMetaWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'PostMetaWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'update',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostMetaUpdateWithWhereUniqueWithoutPostInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'PostMetaUpdateWithWhereUniqueWithoutPostInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'updateMany',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostMetaUpdateManyWithWhereWithoutPostInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'PostMetaUpdateManyWithWhereWithoutPostInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'deleteMany',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostMetaScalarWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'PostMetaScalarWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'CategoryUpdateManyWithoutPostNestedInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'create',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'CategoryCreateWithoutPostInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'CategoryCreateWithoutPostInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'CategoryUncheckedCreateWithoutPostInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'CategoryUncheckedCreateWithoutPostInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'connectOrCreate',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'CategoryCreateOrConnectWithoutPostInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'CategoryCreateOrConnectWithoutPostInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'upsert',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'CategoryUpsertWithWhereUniqueWithoutPostInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'CategoryUpsertWithWhereUniqueWithoutPostInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'createMany',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'CategoryCreateManyPostInputEnvelope',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'set',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'CategoryWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'CategoryWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'disconnect',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'CategoryWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'CategoryWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'delete',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'CategoryWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'CategoryWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'connect',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'CategoryWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'CategoryWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'update',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'CategoryUpdateWithWhereUniqueWithoutPostInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'CategoryUpdateWithWhereUniqueWithoutPostInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'updateMany',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'CategoryUpdateManyWithWhereWithoutPostInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'CategoryUpdateManyWithWhereWithoutPostInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'deleteMany',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'CategoryScalarWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'CategoryScalarWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'PostMetaUncheckedUpdateManyWithoutPostNestedInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'create',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostMetaCreateWithoutPostInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'PostMetaCreateWithoutPostInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'PostMetaUncheckedCreateWithoutPostInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'PostMetaUncheckedCreateWithoutPostInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'connectOrCreate',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostMetaCreateOrConnectWithoutPostInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'PostMetaCreateOrConnectWithoutPostInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'upsert',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostMetaUpsertWithWhereUniqueWithoutPostInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'PostMetaUpsertWithWhereUniqueWithoutPostInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'createMany',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostMetaCreateManyPostInputEnvelope',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'set',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostMetaWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'PostMetaWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'disconnect',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostMetaWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'PostMetaWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'delete',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostMetaWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'PostMetaWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'connect',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostMetaWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'PostMetaWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'update',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostMetaUpdateWithWhereUniqueWithoutPostInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'PostMetaUpdateWithWhereUniqueWithoutPostInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'updateMany',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostMetaUpdateManyWithWhereWithoutPostInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'PostMetaUpdateManyWithWhereWithoutPostInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'deleteMany',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostMetaScalarWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'PostMetaScalarWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'CategoryUncheckedUpdateManyWithoutPostNestedInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'create',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'CategoryCreateWithoutPostInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'CategoryCreateWithoutPostInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'CategoryUncheckedCreateWithoutPostInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'CategoryUncheckedCreateWithoutPostInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'connectOrCreate',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'CategoryCreateOrConnectWithoutPostInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'CategoryCreateOrConnectWithoutPostInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'upsert',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'CategoryUpsertWithWhereUniqueWithoutPostInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'CategoryUpsertWithWhereUniqueWithoutPostInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'createMany',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'CategoryCreateManyPostInputEnvelope',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'set',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'CategoryWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'CategoryWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'disconnect',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'CategoryWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'CategoryWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'delete',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'CategoryWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'CategoryWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'connect',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'CategoryWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'CategoryWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'update',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'CategoryUpdateWithWhereUniqueWithoutPostInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'CategoryUpdateWithWhereUniqueWithoutPostInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'updateMany',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'CategoryUpdateManyWithWhereWithoutPostInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'CategoryUpdateManyWithWhereWithoutPostInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'deleteMany',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'CategoryScalarWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'CategoryScalarWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'PostCreateNestedOneWithoutPostmetaInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'create',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostCreateWithoutPostmetaInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'PostUncheckedCreateWithoutPostmetaInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'connectOrCreate',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostCreateOrConnectWithoutPostmetaInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'connect',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'PostUpdateOneRequiredWithoutPostmetaNestedInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'create',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostCreateWithoutPostmetaInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'PostUncheckedCreateWithoutPostmetaInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'connectOrCreate',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostCreateOrConnectWithoutPostmetaInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'upsert',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostUpsertWithoutPostmetaInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'connect',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'update',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostUpdateWithoutPostmetaInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'PostUncheckedUpdateWithoutPostmetaInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'CategoryCreateNestedOneWithoutAmenitiesInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'create',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'CategoryCreateWithoutAmenitiesInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'CategoryUncheckedCreateWithoutAmenitiesInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'connectOrCreate',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'CategoryCreateOrConnectWithoutAmenitiesInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'connect',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'CategoryWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'CategoryUpdateOneRequiredWithoutAmenitiesNestedInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'create',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'CategoryCreateWithoutAmenitiesInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'CategoryUncheckedCreateWithoutAmenitiesInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'connectOrCreate',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'CategoryCreateOrConnectWithoutAmenitiesInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'upsert',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'CategoryUpsertWithoutAmenitiesInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'connect',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'CategoryWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'update',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'CategoryUpdateWithoutAmenitiesInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'CategoryUncheckedUpdateWithoutAmenitiesInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'AmenitiesCreateNestedManyWithoutCategoryInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'create',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'AmenitiesCreateWithoutCategoryInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'AmenitiesCreateWithoutCategoryInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'AmenitiesUncheckedCreateWithoutCategoryInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'AmenitiesUncheckedCreateWithoutCategoryInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'connectOrCreate',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'AmenitiesCreateOrConnectWithoutCategoryInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'AmenitiesCreateOrConnectWithoutCategoryInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'createMany',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'AmenitiesCreateManyCategoryInputEnvelope',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'connect',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'AmenitiesWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'AmenitiesWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'PostCreateNestedOneWithoutCategoryInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'create',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostCreateWithoutCategoryInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'PostUncheckedCreateWithoutCategoryInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'connectOrCreate',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostCreateOrConnectWithoutCategoryInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'connect',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'AmenitiesUncheckedCreateNestedManyWithoutCategoryInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'create',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'AmenitiesCreateWithoutCategoryInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'AmenitiesCreateWithoutCategoryInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'AmenitiesUncheckedCreateWithoutCategoryInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'AmenitiesUncheckedCreateWithoutCategoryInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'connectOrCreate',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'AmenitiesCreateOrConnectWithoutCategoryInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'AmenitiesCreateOrConnectWithoutCategoryInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'createMany',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'AmenitiesCreateManyCategoryInputEnvelope',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'connect',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'AmenitiesWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'AmenitiesWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'AmenitiesUpdateManyWithoutCategoryNestedInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'create',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'AmenitiesCreateWithoutCategoryInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'AmenitiesCreateWithoutCategoryInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'AmenitiesUncheckedCreateWithoutCategoryInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'AmenitiesUncheckedCreateWithoutCategoryInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'connectOrCreate',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'AmenitiesCreateOrConnectWithoutCategoryInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'AmenitiesCreateOrConnectWithoutCategoryInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'upsert',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'AmenitiesUpsertWithWhereUniqueWithoutCategoryInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'AmenitiesUpsertWithWhereUniqueWithoutCategoryInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'createMany',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'AmenitiesCreateManyCategoryInputEnvelope',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'set',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'AmenitiesWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'AmenitiesWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'disconnect',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'AmenitiesWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'AmenitiesWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'delete',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'AmenitiesWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'AmenitiesWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'connect',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'AmenitiesWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'AmenitiesWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'update',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'AmenitiesUpdateWithWhereUniqueWithoutCategoryInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'AmenitiesUpdateWithWhereUniqueWithoutCategoryInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'updateMany',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'AmenitiesUpdateManyWithWhereWithoutCategoryInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'AmenitiesUpdateManyWithWhereWithoutCategoryInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'deleteMany',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'AmenitiesScalarWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'AmenitiesScalarWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'PostUpdateOneRequiredWithoutCategoryNestedInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'create',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostCreateWithoutCategoryInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'PostUncheckedCreateWithoutCategoryInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'connectOrCreate',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostCreateOrConnectWithoutCategoryInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'upsert',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostUpsertWithoutCategoryInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'connect',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'update',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostUpdateWithoutCategoryInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'PostUncheckedUpdateWithoutCategoryInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'AmenitiesUncheckedUpdateManyWithoutCategoryNestedInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'create',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'AmenitiesCreateWithoutCategoryInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'AmenitiesCreateWithoutCategoryInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'AmenitiesUncheckedCreateWithoutCategoryInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'AmenitiesUncheckedCreateWithoutCategoryInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'connectOrCreate',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'AmenitiesCreateOrConnectWithoutCategoryInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'AmenitiesCreateOrConnectWithoutCategoryInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'upsert',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'AmenitiesUpsertWithWhereUniqueWithoutCategoryInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'AmenitiesUpsertWithWhereUniqueWithoutCategoryInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'createMany',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'AmenitiesCreateManyCategoryInputEnvelope',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'set',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'AmenitiesWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'AmenitiesWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'disconnect',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'AmenitiesWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'AmenitiesWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'delete',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'AmenitiesWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'AmenitiesWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'connect',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'AmenitiesWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'AmenitiesWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'update',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'AmenitiesUpdateWithWhereUniqueWithoutCategoryInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'AmenitiesUpdateWithWhereUniqueWithoutCategoryInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'updateMany',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'AmenitiesUpdateManyWithWhereWithoutCategoryInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'AmenitiesUpdateManyWithWhereWithoutCategoryInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'deleteMany',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'AmenitiesScalarWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'AmenitiesScalarWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'NestedIntFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'in',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'notIn',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NestedIntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'NestedStringFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'in',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'notIn',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'contains',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'startsWith',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'endsWith',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NestedStringFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'NestedEnumRoleFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Role',
                  'location': 'enumTypes',
                  'namespace': 'model',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'in',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'Role',
                  'location': 'enumTypes',
                  'namespace': 'model',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'notIn',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'Role',
                  'location': 'enumTypes',
                  'namespace': 'model',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Role',
                  'location': 'enumTypes',
                  'namespace': 'model',
                },
                {
                  'isList': false,
                  'type': 'NestedEnumRoleFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'NestedStringNullableFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'in',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'notIn',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'lt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'contains',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'startsWith',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'endsWith',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NestedStringNullableFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'NestedIntWithAggregatesFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'in',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'notIn',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NestedIntWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': '_count',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedIntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_avg',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedFloatFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_sum',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedIntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_min',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedIntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_max',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedIntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'NestedFloatFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'in',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'notIn',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NestedFloatFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'NestedStringWithAggregatesFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'in',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'notIn',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'contains',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'startsWith',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'endsWith',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NestedStringWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': '_count',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedIntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_min',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedStringFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_max',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedStringFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'NestedEnumRoleWithAggregatesFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Role',
                  'location': 'enumTypes',
                  'namespace': 'model',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'in',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'Role',
                  'location': 'enumTypes',
                  'namespace': 'model',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'notIn',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'Role',
                  'location': 'enumTypes',
                  'namespace': 'model',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Role',
                  'location': 'enumTypes',
                  'namespace': 'model',
                },
                {
                  'isList': false,
                  'type': 'NestedEnumRoleWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': '_count',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedIntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_min',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedEnumRoleFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_max',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedEnumRoleFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'NestedStringNullableWithAggregatesFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'in',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'notIn',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'lt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'contains',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'startsWith',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'endsWith',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NestedStringNullableWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': '_count',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedIntNullableFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_min',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedStringNullableFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_max',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedStringNullableFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'NestedIntNullableFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'in',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'notIn',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'lt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NestedIntNullableFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'NestedBoolFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NestedBoolFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'NestedBoolWithAggregatesFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NestedBoolWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': '_count',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedIntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_min',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedBoolFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_max',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedBoolFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'NestedIntNullableWithAggregatesFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'in',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'notIn',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'lt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NestedIntNullableWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': '_count',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedIntNullableFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_avg',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedFloatNullableFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_sum',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedIntNullableFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_min',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedIntNullableFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_max',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedIntNullableFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'NestedFloatNullableFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'in',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'notIn',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'lt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NestedFloatNullableFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'PostCreateWithoutAuthorInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'title',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'slug',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'description',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'images',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'long_description',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'longitude',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'latitude',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'content',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'published',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'postmeta',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostMetaCreateNestedManyWithoutPostInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'category',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'CategoryCreateNestedManyWithoutPostInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'PostUncheckedCreateWithoutAuthorInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'title',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'slug',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'description',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'images',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'long_description',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'longitude',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'latitude',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'content',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'published',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'postmeta',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostMetaUncheckedCreateNestedManyWithoutPostInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'category',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'CategoryUncheckedCreateNestedManyWithoutPostInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'PostCreateOrConnectWithoutAuthorInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'where',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'create',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostCreateWithoutAuthorInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'PostUncheckedCreateWithoutAuthorInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'PostCreateManyAuthorInputEnvelope',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'data',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'PostCreateManyAuthorInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'skipDuplicates',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'ProfileCreateWithoutUserInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'firstName',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'lastName',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'addressLine1',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'addressLine2',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'city',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'state',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'country',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'postCode',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'phone',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'slug',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'images',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'longitude',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'latitude',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'published',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'ProfileUncheckedCreateWithoutUserInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'firstName',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'lastName',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'addressLine1',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'addressLine2',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'city',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'state',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'country',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'postCode',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'phone',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'slug',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'images',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'longitude',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'latitude',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'published',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'ProfileCreateOrConnectWithoutUserInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'where',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ProfileWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'create',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ProfileCreateWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'ProfileUncheckedCreateWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'ProfileCreateManyUserInputEnvelope',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'data',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'ProfileCreateManyUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'skipDuplicates',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'PostUpsertWithWhereUniqueWithoutAuthorInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'where',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'update',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostUpdateWithoutAuthorInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'PostUncheckedUpdateWithoutAuthorInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'create',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostCreateWithoutAuthorInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'PostUncheckedCreateWithoutAuthorInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'PostUpdateWithWhereUniqueWithoutAuthorInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'where',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'data',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostUpdateWithoutAuthorInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'PostUncheckedUpdateWithoutAuthorInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'PostUpdateManyWithWhereWithoutAuthorInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'where',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostScalarWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'data',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostUpdateManyMutationInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'PostUncheckedUpdateManyWithoutPostsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'PostScalarWhereInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'AND',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostScalarWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'PostScalarWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'OR',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'PostScalarWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'NOT',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostScalarWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'PostScalarWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'IntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'title',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'slug',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringNullableFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'description',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringNullableFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'images',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringNullableFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'long_description',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringNullableFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'longitude',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringNullableFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'latitude',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringNullableFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'content',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringNullableFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'published',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'BoolFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'authorId',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'IntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'ProfileUpsertWithWhereUniqueWithoutUserInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'where',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ProfileWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'update',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ProfileUpdateWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'ProfileUncheckedUpdateWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'create',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ProfileCreateWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'ProfileUncheckedCreateWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'ProfileUpdateWithWhereUniqueWithoutUserInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'where',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ProfileWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'data',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ProfileUpdateWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'ProfileUncheckedUpdateWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'ProfileUpdateManyWithWhereWithoutUserInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'where',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ProfileScalarWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'data',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ProfileUpdateManyMutationInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'ProfileUncheckedUpdateManyWithoutProfileInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'ProfileScalarWhereInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'AND',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ProfileScalarWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'ProfileScalarWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'OR',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'ProfileScalarWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'NOT',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ProfileScalarWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'ProfileScalarWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'IntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'firstName',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringNullableFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'lastName',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringNullableFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'addressLine1',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringNullableFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'addressLine2',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringNullableFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'city',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringNullableFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'state',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringNullableFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'country',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringNullableFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'postCode',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringNullableFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'phone',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringNullableFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'slug',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringNullableFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'images',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringNullableFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'longitude',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringNullableFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'latitude',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringNullableFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'published',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'BoolFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'userId',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'IntNullableFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UsersCreateWithoutProfileInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'email',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'role',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Role',
                  'location': 'enumTypes',
                  'namespace': 'model',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'password',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'fcmtoken',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'salt',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'posts',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostCreateNestedManyWithoutAuthorInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UsersUncheckedCreateWithoutProfileInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'email',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'role',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Role',
                  'location': 'enumTypes',
                  'namespace': 'model',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'password',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'fcmtoken',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'salt',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'posts',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostUncheckedCreateNestedManyWithoutAuthorInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UsersCreateOrConnectWithoutProfileInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'where',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UsersWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'create',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UsersCreateWithoutProfileInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'UsersUncheckedCreateWithoutProfileInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UsersUpsertWithoutProfileInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'update',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UsersUpdateWithoutProfileInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'UsersUncheckedUpdateWithoutProfileInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'create',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UsersCreateWithoutProfileInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'UsersUncheckedCreateWithoutProfileInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UsersUpdateWithoutProfileInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'email',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'role',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Role',
                  'location': 'enumTypes',
                  'namespace': 'model',
                },
                {
                  'isList': false,
                  'type': 'EnumRoleFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'password',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'fcmtoken',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'salt',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'posts',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostUpdateManyWithoutAuthorNestedInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UsersUncheckedUpdateWithoutProfileInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'IntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'email',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'role',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Role',
                  'location': 'enumTypes',
                  'namespace': 'model',
                },
                {
                  'isList': false,
                  'type': 'EnumRoleFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'password',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'fcmtoken',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'salt',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'posts',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostUncheckedUpdateManyWithoutAuthorNestedInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UsersCreateWithoutPostsInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'email',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'role',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Role',
                  'location': 'enumTypes',
                  'namespace': 'model',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'password',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'fcmtoken',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'salt',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'Profile',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ProfileCreateNestedManyWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UsersUncheckedCreateWithoutPostsInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'email',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'role',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Role',
                  'location': 'enumTypes',
                  'namespace': 'model',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'password',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'fcmtoken',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'salt',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'Profile',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ProfileUncheckedCreateNestedManyWithoutUserInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UsersCreateOrConnectWithoutPostsInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'where',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UsersWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'create',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UsersCreateWithoutPostsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'UsersUncheckedCreateWithoutPostsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'PostMetaCreateWithoutPostInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'meta_title',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'meta_description',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'published',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'PostMetaUncheckedCreateWithoutPostInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'meta_title',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'meta_description',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'published',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'PostMetaCreateOrConnectWithoutPostInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'where',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostMetaWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'create',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostMetaCreateWithoutPostInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'PostMetaUncheckedCreateWithoutPostInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'PostMetaCreateManyPostInputEnvelope',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'data',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'PostMetaCreateManyPostInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'skipDuplicates',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'CategoryCreateWithoutPostInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'slug',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'description',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'published',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'amenities',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'AmenitiesCreateNestedManyWithoutCategoryInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'CategoryUncheckedCreateWithoutPostInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'slug',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'description',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'published',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'amenities',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type':
                      'AmenitiesUncheckedCreateNestedManyWithoutCategoryInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'CategoryCreateOrConnectWithoutPostInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'where',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'CategoryWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'create',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'CategoryCreateWithoutPostInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'CategoryUncheckedCreateWithoutPostInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'CategoryCreateManyPostInputEnvelope',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'data',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'CategoryCreateManyPostInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'skipDuplicates',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UsersUpsertWithoutPostsInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'update',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UsersUpdateWithoutPostsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'UsersUncheckedUpdateWithoutPostsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'create',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UsersCreateWithoutPostsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'UsersUncheckedCreateWithoutPostsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UsersUpdateWithoutPostsInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'email',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'role',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Role',
                  'location': 'enumTypes',
                  'namespace': 'model',
                },
                {
                  'isList': false,
                  'type': 'EnumRoleFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'password',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'fcmtoken',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'salt',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'Profile',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ProfileUpdateManyWithoutUserNestedInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UsersUncheckedUpdateWithoutPostsInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'IntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'email',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'role',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Role',
                  'location': 'enumTypes',
                  'namespace': 'model',
                },
                {
                  'isList': false,
                  'type': 'EnumRoleFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'password',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'fcmtoken',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'salt',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'Profile',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'ProfileUncheckedUpdateManyWithoutUserNestedInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'PostMetaUpsertWithWhereUniqueWithoutPostInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'where',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostMetaWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'update',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostMetaUpdateWithoutPostInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'PostMetaUncheckedUpdateWithoutPostInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'create',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostMetaCreateWithoutPostInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'PostMetaUncheckedCreateWithoutPostInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'PostMetaUpdateWithWhereUniqueWithoutPostInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'where',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostMetaWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'data',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostMetaUpdateWithoutPostInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'PostMetaUncheckedUpdateWithoutPostInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'PostMetaUpdateManyWithWhereWithoutPostInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'where',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostMetaScalarWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'data',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostMetaUpdateManyMutationInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'PostMetaUncheckedUpdateManyWithoutPostmetaInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'PostMetaScalarWhereInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'AND',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostMetaScalarWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'PostMetaScalarWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'OR',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'PostMetaScalarWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'NOT',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostMetaScalarWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'PostMetaScalarWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'IntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'meta_title',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'meta_description',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringNullableFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'published',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'BoolFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'postId',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'IntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'CategoryUpsertWithWhereUniqueWithoutPostInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'where',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'CategoryWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'update',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'CategoryUpdateWithoutPostInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'CategoryUncheckedUpdateWithoutPostInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'create',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'CategoryCreateWithoutPostInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'CategoryUncheckedCreateWithoutPostInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'CategoryUpdateWithWhereUniqueWithoutPostInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'where',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'CategoryWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'data',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'CategoryUpdateWithoutPostInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'CategoryUncheckedUpdateWithoutPostInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'CategoryUpdateManyWithWhereWithoutPostInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'where',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'CategoryScalarWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'data',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'CategoryUpdateManyMutationInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'CategoryUncheckedUpdateManyWithoutCategoryInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'CategoryScalarWhereInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'AND',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'CategoryScalarWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'CategoryScalarWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'OR',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'CategoryScalarWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'NOT',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'CategoryScalarWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'CategoryScalarWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'IntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'slug',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringNullableFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'description',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringNullableFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'published',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'BoolFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'postId',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'IntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'PostCreateWithoutPostmetaInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'title',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'slug',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'description',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'images',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'long_description',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'longitude',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'latitude',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'content',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'published',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'author',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UsersCreateNestedOneWithoutPostsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'category',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'CategoryCreateNestedManyWithoutPostInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'PostUncheckedCreateWithoutPostmetaInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'title',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'slug',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'description',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'images',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'long_description',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'longitude',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'latitude',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'content',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'published',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'authorId',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'category',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'CategoryUncheckedCreateNestedManyWithoutPostInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'PostCreateOrConnectWithoutPostmetaInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'where',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'create',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostCreateWithoutPostmetaInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'PostUncheckedCreateWithoutPostmetaInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'PostUpsertWithoutPostmetaInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'update',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostUpdateWithoutPostmetaInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'PostUncheckedUpdateWithoutPostmetaInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'create',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostCreateWithoutPostmetaInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'PostUncheckedCreateWithoutPostmetaInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'PostUpdateWithoutPostmetaInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'title',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'slug',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'description',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'images',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'long_description',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'longitude',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'latitude',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'content',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'published',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'BoolFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'author',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UsersUpdateOneRequiredWithoutPostsNestedInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'category',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'CategoryUpdateManyWithoutPostNestedInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'PostUncheckedUpdateWithoutPostmetaInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'IntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'title',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'slug',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'description',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'images',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'long_description',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'longitude',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'latitude',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'content',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'published',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'BoolFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'authorId',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'IntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'category',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'CategoryUncheckedUpdateManyWithoutPostNestedInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'CategoryCreateWithoutAmenitiesInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'slug',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'description',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'published',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'post',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostCreateNestedOneWithoutCategoryInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'CategoryUncheckedCreateWithoutAmenitiesInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'slug',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'description',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'published',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'postId',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'CategoryCreateOrConnectWithoutAmenitiesInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'where',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'CategoryWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'create',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'CategoryCreateWithoutAmenitiesInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'CategoryUncheckedCreateWithoutAmenitiesInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'CategoryUpsertWithoutAmenitiesInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'update',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'CategoryUpdateWithoutAmenitiesInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'CategoryUncheckedUpdateWithoutAmenitiesInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'create',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'CategoryCreateWithoutAmenitiesInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'CategoryUncheckedCreateWithoutAmenitiesInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'CategoryUpdateWithoutAmenitiesInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'slug',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'description',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'published',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'BoolFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'post',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostUpdateOneRequiredWithoutCategoryNestedInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'CategoryUncheckedUpdateWithoutAmenitiesInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'IntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'slug',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'description',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'published',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'BoolFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'postId',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'IntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'AmenitiesCreateWithoutCategoryInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'slug',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'description',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'published',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'AmenitiesUncheckedCreateWithoutCategoryInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'slug',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'description',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'published',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'AmenitiesCreateOrConnectWithoutCategoryInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'where',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'AmenitiesWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'create',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'AmenitiesCreateWithoutCategoryInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'AmenitiesUncheckedCreateWithoutCategoryInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'AmenitiesCreateManyCategoryInputEnvelope',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'data',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'AmenitiesCreateManyCategoryInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'skipDuplicates',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'PostCreateWithoutCategoryInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'title',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'slug',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'description',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'images',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'long_description',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'longitude',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'latitude',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'content',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'published',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'author',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UsersCreateNestedOneWithoutPostsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'postmeta',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostMetaCreateNestedManyWithoutPostInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'PostUncheckedCreateWithoutCategoryInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'title',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'slug',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'description',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'images',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'long_description',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'longitude',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'latitude',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'content',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'published',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'authorId',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'postmeta',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostMetaUncheckedCreateNestedManyWithoutPostInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'PostCreateOrConnectWithoutCategoryInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'where',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'create',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostCreateWithoutCategoryInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'PostUncheckedCreateWithoutCategoryInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'AmenitiesUpsertWithWhereUniqueWithoutCategoryInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'where',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'AmenitiesWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'update',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'AmenitiesUpdateWithoutCategoryInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'AmenitiesUncheckedUpdateWithoutCategoryInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'create',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'AmenitiesCreateWithoutCategoryInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'AmenitiesUncheckedCreateWithoutCategoryInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'AmenitiesUpdateWithWhereUniqueWithoutCategoryInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'where',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'AmenitiesWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'data',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'AmenitiesUpdateWithoutCategoryInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'AmenitiesUncheckedUpdateWithoutCategoryInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'AmenitiesUpdateManyWithWhereWithoutCategoryInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'where',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'AmenitiesScalarWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'data',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'AmenitiesUpdateManyMutationInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'AmenitiesUncheckedUpdateManyWithoutAmenitiesInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'AmenitiesScalarWhereInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'AND',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'AmenitiesScalarWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'AmenitiesScalarWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'OR',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'AmenitiesScalarWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'NOT',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'AmenitiesScalarWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'AmenitiesScalarWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'IntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'slug',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringNullableFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'description',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringNullableFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'published',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'BoolFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'categoryId',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'IntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'PostUpsertWithoutCategoryInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'update',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostUpdateWithoutCategoryInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'PostUncheckedUpdateWithoutCategoryInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'create',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostCreateWithoutCategoryInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'PostUncheckedCreateWithoutCategoryInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'PostUpdateWithoutCategoryInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'title',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'slug',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'description',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'images',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'long_description',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'longitude',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'latitude',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'content',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'published',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'BoolFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'author',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'UsersUpdateOneRequiredWithoutPostsNestedInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'postmeta',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostMetaUpdateManyWithoutPostNestedInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'PostUncheckedUpdateWithoutCategoryInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'IntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'title',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'slug',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'description',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'images',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'long_description',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'longitude',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'latitude',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'content',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'published',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'BoolFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'authorId',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'IntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'postmeta',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostMetaUncheckedUpdateManyWithoutPostNestedInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'PostCreateManyAuthorInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'title',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'slug',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'description',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'images',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'long_description',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'longitude',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'latitude',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'content',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'published',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'ProfileCreateManyUserInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'firstName',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'lastName',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'addressLine1',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'addressLine2',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'city',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'state',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'country',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'postCode',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'phone',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'slug',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'images',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'longitude',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'latitude',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'published',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'PostUpdateWithoutAuthorInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'title',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'slug',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'description',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'images',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'long_description',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'longitude',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'latitude',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'content',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'published',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'BoolFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'postmeta',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostMetaUpdateManyWithoutPostNestedInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'category',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'CategoryUpdateManyWithoutPostNestedInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'PostUncheckedUpdateWithoutAuthorInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'IntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'title',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'slug',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'description',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'images',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'long_description',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'longitude',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'latitude',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'content',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'published',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'BoolFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'postmeta',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PostMetaUncheckedUpdateManyWithoutPostNestedInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'category',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'CategoryUncheckedUpdateManyWithoutPostNestedInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'PostUncheckedUpdateManyWithoutPostsInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'IntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'title',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'slug',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'description',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'images',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'long_description',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'longitude',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'latitude',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'content',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'published',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'BoolFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'ProfileUpdateWithoutUserInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'firstName',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'lastName',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'addressLine1',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'addressLine2',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'city',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'state',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'country',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'postCode',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'phone',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'slug',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'images',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'longitude',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'latitude',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'published',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'BoolFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'ProfileUncheckedUpdateWithoutUserInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'IntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'firstName',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'lastName',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'addressLine1',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'addressLine2',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'city',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'state',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'country',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'postCode',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'phone',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'slug',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'images',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'longitude',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'latitude',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'published',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'BoolFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'ProfileUncheckedUpdateManyWithoutProfileInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'IntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'firstName',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'lastName',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'addressLine1',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'addressLine2',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'city',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'state',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'country',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'postCode',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'phone',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'slug',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'images',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'longitude',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'latitude',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'published',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'BoolFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'PostMetaCreateManyPostInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'meta_title',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'meta_description',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'published',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'CategoryCreateManyPostInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'slug',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'description',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'published',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'PostMetaUpdateWithoutPostInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'meta_title',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'meta_description',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'published',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'BoolFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'PostMetaUncheckedUpdateWithoutPostInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'IntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'meta_title',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'meta_description',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'published',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'BoolFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'PostMetaUncheckedUpdateManyWithoutPostmetaInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'IntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'meta_title',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'meta_description',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'published',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'BoolFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'CategoryUpdateWithoutPostInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'slug',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'description',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'published',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'BoolFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'amenities',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'AmenitiesUpdateManyWithoutCategoryNestedInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'CategoryUncheckedUpdateWithoutPostInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'IntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'slug',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'description',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'published',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'BoolFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'amenities',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type':
                      'AmenitiesUncheckedUpdateManyWithoutCategoryNestedInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'CategoryUncheckedUpdateManyWithoutCategoryInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'IntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'slug',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'description',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'published',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'BoolFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'AmenitiesCreateManyCategoryInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'slug',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'description',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'published',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'AmenitiesUpdateWithoutCategoryInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'slug',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'description',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'published',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'BoolFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'AmenitiesUncheckedUpdateWithoutCategoryInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'IntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'slug',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'description',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'published',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'BoolFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'AmenitiesUncheckedUpdateManyWithoutAmenitiesInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'IntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'slug',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'description',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'published',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'BoolFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
      ],
    },
    'outputObjectTypes': {
      'model': [
        {
          'name': 'Users',
          'fields': [
            {
              'name': 'id',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'email',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'role',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Role',
                'location': 'enumTypes',
                'namespace': 'model',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'password',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'fcmtoken',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'salt',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'posts',
              'isNullable': true,
              'outputType': {
                'isList': true,
                'type': 'Post',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'PostWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'orderBy',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'PostOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'PostOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'cursor',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'PostWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'take',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'skip',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'distinct',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'PostScalarFieldEnum',
                      'location': 'enumTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'Profile',
              'isNullable': true,
              'outputType': {
                'isList': true,
                'type': 'Profile',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'ProfileWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'orderBy',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'ProfileOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'ProfileOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'cursor',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'ProfileWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'take',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'skip',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'distinct',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'ProfileScalarFieldEnum',
                      'location': 'enumTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_count',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'UsersCountOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'Profile',
          'fields': [
            {
              'name': 'id',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'firstName',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'lastName',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'addressLine1',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'addressLine2',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'city',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'state',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'country',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'postCode',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'phone',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'slug',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'images',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'longitude',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'latitude',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'published',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Boolean',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'user',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Users',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'userId',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'Post',
          'fields': [
            {
              'name': 'id',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'title',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'slug',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'description',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'images',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'long_description',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'longitude',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'latitude',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'content',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'published',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Boolean',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'author',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Users',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'authorId',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'postmeta',
              'isNullable': true,
              'outputType': {
                'isList': true,
                'type': 'PostMeta',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'PostMetaWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'orderBy',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'PostMetaOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'PostMetaOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'cursor',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'PostMetaWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'take',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'skip',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'distinct',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'PostMetaScalarFieldEnum',
                      'location': 'enumTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'category',
              'isNullable': true,
              'outputType': {
                'isList': true,
                'type': 'Category',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'CategoryWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'orderBy',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'CategoryOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'CategoryOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'cursor',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'CategoryWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'take',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'skip',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'distinct',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'CategoryScalarFieldEnum',
                      'location': 'enumTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_count',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'PostCountOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'PostMeta',
          'fields': [
            {
              'name': 'id',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'meta_title',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'meta_description',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'published',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Boolean',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'post',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Post',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'postId',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'Amenities',
          'fields': [
            {
              'name': 'id',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'name',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'slug',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'description',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'published',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Boolean',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'category',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Category',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'categoryId',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'Category',
          'fields': [
            {
              'name': 'id',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'name',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'slug',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'description',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'published',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Boolean',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'amenities',
              'isNullable': true,
              'outputType': {
                'isList': true,
                'type': 'Amenities',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'AmenitiesWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'orderBy',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'AmenitiesOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'AmenitiesOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'cursor',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'AmenitiesWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'take',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'skip',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'distinct',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'AmenitiesScalarFieldEnum',
                      'location': 'enumTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'post',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Post',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'postId',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_count',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'CategoryCountOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
      ],
      'prisma': [
        {
          'name': 'Query',
          'fields': [
            {
              'name': 'findFirstUsers',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Users',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'UsersWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'orderBy',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'UsersOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'UsersOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'cursor',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'UsersWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'take',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'skip',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'distinct',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'UsersScalarFieldEnum',
                      'location': 'enumTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'findFirstUsersOrThrow',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Users',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'UsersWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'orderBy',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'UsersOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'UsersOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'cursor',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'UsersWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'take',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'skip',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'distinct',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'UsersScalarFieldEnum',
                      'location': 'enumTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'findManyUsers',
              'isNullable': false,
              'outputType': {
                'isList': true,
                'type': 'Users',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'UsersWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'orderBy',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'UsersOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'UsersOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'cursor',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'UsersWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'take',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'skip',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'distinct',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'UsersScalarFieldEnum',
                      'location': 'enumTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'aggregateUsers',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'AggregateUsers',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'UsersWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'orderBy',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'UsersOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'UsersOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'cursor',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'UsersWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'take',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'skip',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'groupByUsers',
              'isNullable': false,
              'outputType': {
                'isList': true,
                'type': 'UsersGroupByOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'UsersWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'orderBy',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'UsersOrderByWithAggregationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'UsersOrderByWithAggregationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'by',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'UsersScalarFieldEnum',
                      'location': 'enumTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'UsersScalarFieldEnum',
                      'location': 'enumTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'having',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'UsersScalarWhereWithAggregatesInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'take',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'skip',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'findUniqueUsers',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Users',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'UsersWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                }
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'findUniqueUsersOrThrow',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Users',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'UsersWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                }
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'findFirstProfile',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Profile',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'ProfileWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'orderBy',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'ProfileOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'ProfileOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'cursor',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'ProfileWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'take',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'skip',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'distinct',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'ProfileScalarFieldEnum',
                      'location': 'enumTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'findFirstProfileOrThrow',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Profile',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'ProfileWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'orderBy',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'ProfileOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'ProfileOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'cursor',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'ProfileWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'take',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'skip',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'distinct',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'ProfileScalarFieldEnum',
                      'location': 'enumTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'findManyProfile',
              'isNullable': false,
              'outputType': {
                'isList': true,
                'type': 'Profile',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'ProfileWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'orderBy',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'ProfileOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'ProfileOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'cursor',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'ProfileWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'take',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'skip',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'distinct',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'ProfileScalarFieldEnum',
                      'location': 'enumTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'aggregateProfile',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'AggregateProfile',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'ProfileWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'orderBy',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'ProfileOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'ProfileOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'cursor',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'ProfileWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'take',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'skip',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'groupByProfile',
              'isNullable': false,
              'outputType': {
                'isList': true,
                'type': 'ProfileGroupByOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'ProfileWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'orderBy',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'ProfileOrderByWithAggregationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'ProfileOrderByWithAggregationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'by',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'ProfileScalarFieldEnum',
                      'location': 'enumTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'ProfileScalarFieldEnum',
                      'location': 'enumTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'having',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'ProfileScalarWhereWithAggregatesInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'take',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'skip',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'findUniqueProfile',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Profile',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'ProfileWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                }
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'findUniqueProfileOrThrow',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Profile',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'ProfileWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                }
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'findFirstPost',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Post',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'PostWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'orderBy',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'PostOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'PostOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'cursor',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'PostWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'take',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'skip',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'distinct',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'PostScalarFieldEnum',
                      'location': 'enumTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'findFirstPostOrThrow',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Post',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'PostWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'orderBy',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'PostOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'PostOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'cursor',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'PostWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'take',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'skip',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'distinct',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'PostScalarFieldEnum',
                      'location': 'enumTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'findManyPost',
              'isNullable': false,
              'outputType': {
                'isList': true,
                'type': 'Post',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'PostWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'orderBy',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'PostOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'PostOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'cursor',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'PostWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'take',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'skip',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'distinct',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'PostScalarFieldEnum',
                      'location': 'enumTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'aggregatePost',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'AggregatePost',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'PostWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'orderBy',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'PostOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'PostOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'cursor',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'PostWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'take',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'skip',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'groupByPost',
              'isNullable': false,
              'outputType': {
                'isList': true,
                'type': 'PostGroupByOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'PostWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'orderBy',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'PostOrderByWithAggregationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'PostOrderByWithAggregationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'by',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'PostScalarFieldEnum',
                      'location': 'enumTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'PostScalarFieldEnum',
                      'location': 'enumTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'having',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'PostScalarWhereWithAggregatesInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'take',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'skip',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'findUniquePost',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Post',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'PostWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                }
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'findUniquePostOrThrow',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Post',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'PostWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                }
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'findFirstPostMeta',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'PostMeta',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'PostMetaWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'orderBy',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'PostMetaOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'PostMetaOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'cursor',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'PostMetaWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'take',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'skip',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'distinct',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'PostMetaScalarFieldEnum',
                      'location': 'enumTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'findFirstPostMetaOrThrow',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'PostMeta',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'PostMetaWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'orderBy',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'PostMetaOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'PostMetaOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'cursor',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'PostMetaWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'take',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'skip',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'distinct',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'PostMetaScalarFieldEnum',
                      'location': 'enumTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'findManyPostMeta',
              'isNullable': false,
              'outputType': {
                'isList': true,
                'type': 'PostMeta',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'PostMetaWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'orderBy',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'PostMetaOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'PostMetaOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'cursor',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'PostMetaWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'take',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'skip',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'distinct',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'PostMetaScalarFieldEnum',
                      'location': 'enumTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'aggregatePostMeta',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'AggregatePostMeta',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'PostMetaWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'orderBy',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'PostMetaOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'PostMetaOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'cursor',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'PostMetaWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'take',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'skip',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'groupByPostMeta',
              'isNullable': false,
              'outputType': {
                'isList': true,
                'type': 'PostMetaGroupByOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'PostMetaWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'orderBy',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'PostMetaOrderByWithAggregationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'PostMetaOrderByWithAggregationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'by',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'PostMetaScalarFieldEnum',
                      'location': 'enumTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'PostMetaScalarFieldEnum',
                      'location': 'enumTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'having',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'PostMetaScalarWhereWithAggregatesInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'take',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'skip',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'findUniquePostMeta',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'PostMeta',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'PostMetaWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                }
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'findUniquePostMetaOrThrow',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'PostMeta',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'PostMetaWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                }
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'findFirstAmenities',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Amenities',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'AmenitiesWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'orderBy',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'AmenitiesOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'AmenitiesOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'cursor',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'AmenitiesWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'take',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'skip',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'distinct',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'AmenitiesScalarFieldEnum',
                      'location': 'enumTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'findFirstAmenitiesOrThrow',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Amenities',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'AmenitiesWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'orderBy',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'AmenitiesOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'AmenitiesOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'cursor',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'AmenitiesWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'take',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'skip',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'distinct',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'AmenitiesScalarFieldEnum',
                      'location': 'enumTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'findManyAmenities',
              'isNullable': false,
              'outputType': {
                'isList': true,
                'type': 'Amenities',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'AmenitiesWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'orderBy',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'AmenitiesOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'AmenitiesOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'cursor',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'AmenitiesWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'take',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'skip',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'distinct',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'AmenitiesScalarFieldEnum',
                      'location': 'enumTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'aggregateAmenities',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'AggregateAmenities',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'AmenitiesWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'orderBy',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'AmenitiesOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'AmenitiesOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'cursor',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'AmenitiesWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'take',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'skip',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'groupByAmenities',
              'isNullable': false,
              'outputType': {
                'isList': true,
                'type': 'AmenitiesGroupByOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'AmenitiesWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'orderBy',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'AmenitiesOrderByWithAggregationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'AmenitiesOrderByWithAggregationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'by',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'AmenitiesScalarFieldEnum',
                      'location': 'enumTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'AmenitiesScalarFieldEnum',
                      'location': 'enumTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'having',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'AmenitiesScalarWhereWithAggregatesInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'take',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'skip',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'findUniqueAmenities',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Amenities',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'AmenitiesWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                }
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'findUniqueAmenitiesOrThrow',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Amenities',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'AmenitiesWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                }
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'findFirstCategory',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Category',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'CategoryWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'orderBy',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'CategoryOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'CategoryOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'cursor',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'CategoryWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'take',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'skip',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'distinct',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'CategoryScalarFieldEnum',
                      'location': 'enumTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'findFirstCategoryOrThrow',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Category',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'CategoryWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'orderBy',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'CategoryOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'CategoryOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'cursor',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'CategoryWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'take',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'skip',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'distinct',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'CategoryScalarFieldEnum',
                      'location': 'enumTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'findManyCategory',
              'isNullable': false,
              'outputType': {
                'isList': true,
                'type': 'Category',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'CategoryWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'orderBy',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'CategoryOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'CategoryOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'cursor',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'CategoryWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'take',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'skip',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'distinct',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'CategoryScalarFieldEnum',
                      'location': 'enumTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'aggregateCategory',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'AggregateCategory',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'CategoryWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'orderBy',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'CategoryOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'CategoryOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'cursor',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'CategoryWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'take',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'skip',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'groupByCategory',
              'isNullable': false,
              'outputType': {
                'isList': true,
                'type': 'CategoryGroupByOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'CategoryWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'orderBy',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'CategoryOrderByWithAggregationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'CategoryOrderByWithAggregationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'by',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'CategoryScalarFieldEnum',
                      'location': 'enumTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'CategoryScalarFieldEnum',
                      'location': 'enumTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'having',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'CategoryScalarWhereWithAggregatesInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'take',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'skip',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'findUniqueCategory',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Category',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'CategoryWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                }
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'findUniqueCategoryOrThrow',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Category',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'CategoryWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                }
              ],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'Mutation',
          'fields': [
            {
              'name': 'createOneUsers',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Users',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'data',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'UsersCreateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'UsersUncheckedCreateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                }
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'upsertOneUsers',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Users',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'UsersWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'create',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'UsersCreateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'UsersUncheckedCreateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'update',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'UsersUpdateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'UsersUncheckedUpdateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'createManyUsers',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'AffectedRowsOutput',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [
                {
                  'name': 'data',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'UsersCreateManyInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'skipDuplicates',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Boolean',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'deleteOneUsers',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Users',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'UsersWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                }
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'updateOneUsers',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Users',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'data',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'UsersUpdateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'UsersUncheckedUpdateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'UsersWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'updateManyUsers',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'AffectedRowsOutput',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [
                {
                  'name': 'data',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'UsersUpdateManyMutationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'UsersUncheckedUpdateManyInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'UsersWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'deleteManyUsers',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'AffectedRowsOutput',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'UsersWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                }
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'createOneProfile',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Profile',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'data',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'ProfileCreateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'ProfileUncheckedCreateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                }
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'upsertOneProfile',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Profile',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'ProfileWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'create',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'ProfileCreateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'ProfileUncheckedCreateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'update',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'ProfileUpdateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'ProfileUncheckedUpdateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'createManyProfile',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'AffectedRowsOutput',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [
                {
                  'name': 'data',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'ProfileCreateManyInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'skipDuplicates',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Boolean',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'deleteOneProfile',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Profile',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'ProfileWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                }
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'updateOneProfile',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Profile',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'data',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'ProfileUpdateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'ProfileUncheckedUpdateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'ProfileWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'updateManyProfile',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'AffectedRowsOutput',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [
                {
                  'name': 'data',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'ProfileUpdateManyMutationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'ProfileUncheckedUpdateManyInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'ProfileWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'deleteManyProfile',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'AffectedRowsOutput',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'ProfileWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                }
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'createOnePost',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Post',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'data',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'PostCreateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'PostUncheckedCreateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                }
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'upsertOnePost',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Post',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'PostWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'create',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'PostCreateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'PostUncheckedCreateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'update',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'PostUpdateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'PostUncheckedUpdateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'createManyPost',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'AffectedRowsOutput',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [
                {
                  'name': 'data',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'PostCreateManyInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'skipDuplicates',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Boolean',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'deleteOnePost',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Post',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'PostWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                }
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'updateOnePost',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Post',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'data',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'PostUpdateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'PostUncheckedUpdateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'PostWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'updateManyPost',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'AffectedRowsOutput',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [
                {
                  'name': 'data',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'PostUpdateManyMutationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'PostUncheckedUpdateManyInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'PostWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'deleteManyPost',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'AffectedRowsOutput',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'PostWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                }
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'createOnePostMeta',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'PostMeta',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'data',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'PostMetaCreateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'PostMetaUncheckedCreateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                }
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'upsertOnePostMeta',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'PostMeta',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'PostMetaWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'create',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'PostMetaCreateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'PostMetaUncheckedCreateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'update',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'PostMetaUpdateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'PostMetaUncheckedUpdateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'createManyPostMeta',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'AffectedRowsOutput',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [
                {
                  'name': 'data',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'PostMetaCreateManyInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'skipDuplicates',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Boolean',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'deleteOnePostMeta',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'PostMeta',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'PostMetaWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                }
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'updateOnePostMeta',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'PostMeta',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'data',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'PostMetaUpdateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'PostMetaUncheckedUpdateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'PostMetaWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'updateManyPostMeta',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'AffectedRowsOutput',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [
                {
                  'name': 'data',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'PostMetaUpdateManyMutationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'PostMetaUncheckedUpdateManyInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'PostMetaWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'deleteManyPostMeta',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'AffectedRowsOutput',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'PostMetaWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                }
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'createOneAmenities',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Amenities',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'data',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'AmenitiesCreateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'AmenitiesUncheckedCreateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                }
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'upsertOneAmenities',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Amenities',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'AmenitiesWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'create',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'AmenitiesCreateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'AmenitiesUncheckedCreateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'update',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'AmenitiesUpdateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'AmenitiesUncheckedUpdateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'createManyAmenities',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'AffectedRowsOutput',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [
                {
                  'name': 'data',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'AmenitiesCreateManyInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'skipDuplicates',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Boolean',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'deleteOneAmenities',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Amenities',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'AmenitiesWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                }
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'updateOneAmenities',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Amenities',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'data',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'AmenitiesUpdateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'AmenitiesUncheckedUpdateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'AmenitiesWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'updateManyAmenities',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'AffectedRowsOutput',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [
                {
                  'name': 'data',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'AmenitiesUpdateManyMutationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'AmenitiesUncheckedUpdateManyInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'AmenitiesWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'deleteManyAmenities',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'AffectedRowsOutput',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'AmenitiesWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                }
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'createOneCategory',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Category',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'data',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'CategoryCreateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'CategoryUncheckedCreateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                }
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'upsertOneCategory',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Category',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'CategoryWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'create',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'CategoryCreateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'CategoryUncheckedCreateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'update',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'CategoryUpdateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'CategoryUncheckedUpdateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'createManyCategory',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'AffectedRowsOutput',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [
                {
                  'name': 'data',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'CategoryCreateManyInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'skipDuplicates',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Boolean',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'deleteOneCategory',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Category',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'CategoryWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                }
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'updateOneCategory',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Category',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'data',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'CategoryUpdateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'CategoryUncheckedUpdateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'CategoryWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'updateManyCategory',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'AffectedRowsOutput',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [
                {
                  'name': 'data',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'CategoryUpdateManyMutationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'CategoryUncheckedUpdateManyInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'CategoryWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'deleteManyCategory',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'AffectedRowsOutput',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'CategoryWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                }
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'executeRaw',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Json',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [
                {
                  'name': 'query',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'String',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'parameters',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Json',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'queryRaw',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Json',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [
                {
                  'name': 'query',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'String',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'parameters',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Json',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'AggregateUsers',
          'fields': [
            {
              'name': '_count',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'UsersCountAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_avg',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'UsersAvgAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_sum',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'UsersSumAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_min',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'UsersMinAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_max',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'UsersMaxAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UsersGroupByOutputType',
          'fields': [
            {
              'name': 'id',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'email',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'role',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Role',
                'location': 'enumTypes',
                'namespace': 'model',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'password',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'fcmtoken',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'salt',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_count',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'UsersCountAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_avg',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'UsersAvgAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_sum',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'UsersSumAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_min',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'UsersMinAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_max',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'UsersMaxAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'AggregateProfile',
          'fields': [
            {
              'name': '_count',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'ProfileCountAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_avg',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'ProfileAvgAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_sum',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'ProfileSumAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_min',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'ProfileMinAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_max',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'ProfileMaxAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'ProfileGroupByOutputType',
          'fields': [
            {
              'name': 'id',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'firstName',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'lastName',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'addressLine1',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'addressLine2',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'city',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'state',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'country',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'postCode',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'phone',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'slug',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'images',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'longitude',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'latitude',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'published',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Boolean',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'userId',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_count',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'ProfileCountAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_avg',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'ProfileAvgAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_sum',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'ProfileSumAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_min',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'ProfileMinAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_max',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'ProfileMaxAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'AggregatePost',
          'fields': [
            {
              'name': '_count',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'PostCountAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_avg',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'PostAvgAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_sum',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'PostSumAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_min',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'PostMinAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_max',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'PostMaxAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'PostGroupByOutputType',
          'fields': [
            {
              'name': 'id',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'title',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'slug',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'description',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'images',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'long_description',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'longitude',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'latitude',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'content',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'published',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Boolean',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'authorId',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_count',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'PostCountAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_avg',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'PostAvgAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_sum',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'PostSumAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_min',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'PostMinAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_max',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'PostMaxAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'AggregatePostMeta',
          'fields': [
            {
              'name': '_count',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'PostMetaCountAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_avg',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'PostMetaAvgAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_sum',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'PostMetaSumAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_min',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'PostMetaMinAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_max',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'PostMetaMaxAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'PostMetaGroupByOutputType',
          'fields': [
            {
              'name': 'id',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'meta_title',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'meta_description',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'published',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Boolean',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'postId',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_count',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'PostMetaCountAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_avg',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'PostMetaAvgAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_sum',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'PostMetaSumAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_min',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'PostMetaMinAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_max',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'PostMetaMaxAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'AggregateAmenities',
          'fields': [
            {
              'name': '_count',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'AmenitiesCountAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_avg',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'AmenitiesAvgAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_sum',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'AmenitiesSumAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_min',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'AmenitiesMinAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_max',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'AmenitiesMaxAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'AmenitiesGroupByOutputType',
          'fields': [
            {
              'name': 'id',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'name',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'slug',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'description',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'published',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Boolean',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'categoryId',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_count',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'AmenitiesCountAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_avg',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'AmenitiesAvgAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_sum',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'AmenitiesSumAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_min',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'AmenitiesMinAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_max',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'AmenitiesMaxAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'AggregateCategory',
          'fields': [
            {
              'name': '_count',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'CategoryCountAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_avg',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'CategoryAvgAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_sum',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'CategorySumAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_min',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'CategoryMinAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_max',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'CategoryMaxAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'CategoryGroupByOutputType',
          'fields': [
            {
              'name': 'id',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'name',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'slug',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'description',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'published',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Boolean',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'postId',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_count',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'CategoryCountAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_avg',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'CategoryAvgAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_sum',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'CategorySumAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_min',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'CategoryMinAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_max',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'CategoryMaxAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'AffectedRowsOutput',
          'fields': [
            {
              'name': 'count',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            }
          ],
          'fieldMap': null,
        },
        {
          'name': 'UsersCountOutputType',
          'fields': [
            {
              'name': 'posts',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'Profile',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UsersCountAggregateOutputType',
          'fields': [
            {
              'name': 'id',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'email',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'role',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'password',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'fcmtoken',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'salt',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_all',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UsersAvgAggregateOutputType',
          'fields': [
            {
              'name': 'id',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Float',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            }
          ],
          'fieldMap': null,
        },
        {
          'name': 'UsersSumAggregateOutputType',
          'fields': [
            {
              'name': 'id',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            }
          ],
          'fieldMap': null,
        },
        {
          'name': 'UsersMinAggregateOutputType',
          'fields': [
            {
              'name': 'id',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'email',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'role',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Role',
                'location': 'enumTypes',
                'namespace': 'model',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'password',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'fcmtoken',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'salt',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'UsersMaxAggregateOutputType',
          'fields': [
            {
              'name': 'id',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'email',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'role',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Role',
                'location': 'enumTypes',
                'namespace': 'model',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'password',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'fcmtoken',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'salt',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'ProfileCountAggregateOutputType',
          'fields': [
            {
              'name': 'id',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'firstName',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'lastName',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'addressLine1',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'addressLine2',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'city',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'state',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'country',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'postCode',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'phone',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'slug',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'images',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'longitude',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'latitude',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'published',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'userId',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_all',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'ProfileAvgAggregateOutputType',
          'fields': [
            {
              'name': 'id',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Float',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'userId',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Float',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'ProfileSumAggregateOutputType',
          'fields': [
            {
              'name': 'id',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'userId',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'ProfileMinAggregateOutputType',
          'fields': [
            {
              'name': 'id',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'firstName',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'lastName',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'addressLine1',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'addressLine2',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'city',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'state',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'country',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'postCode',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'phone',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'slug',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'images',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'longitude',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'latitude',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'published',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Boolean',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'userId',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'ProfileMaxAggregateOutputType',
          'fields': [
            {
              'name': 'id',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'firstName',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'lastName',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'addressLine1',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'addressLine2',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'city',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'state',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'country',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'postCode',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'phone',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'slug',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'images',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'longitude',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'latitude',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'published',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Boolean',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'userId',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'PostCountOutputType',
          'fields': [
            {
              'name': 'postmeta',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'category',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'PostCountAggregateOutputType',
          'fields': [
            {
              'name': 'id',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'title',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'slug',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'description',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'images',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'long_description',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'longitude',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'latitude',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'content',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'published',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'authorId',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_all',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'PostAvgAggregateOutputType',
          'fields': [
            {
              'name': 'id',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Float',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'authorId',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Float',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'PostSumAggregateOutputType',
          'fields': [
            {
              'name': 'id',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'authorId',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'PostMinAggregateOutputType',
          'fields': [
            {
              'name': 'id',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'title',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'slug',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'description',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'images',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'long_description',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'longitude',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'latitude',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'content',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'published',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Boolean',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'authorId',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'PostMaxAggregateOutputType',
          'fields': [
            {
              'name': 'id',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'title',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'slug',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'description',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'images',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'long_description',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'longitude',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'latitude',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'content',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'published',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Boolean',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'authorId',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'PostMetaCountAggregateOutputType',
          'fields': [
            {
              'name': 'id',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'meta_title',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'meta_description',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'published',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'postId',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_all',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'PostMetaAvgAggregateOutputType',
          'fields': [
            {
              'name': 'id',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Float',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'postId',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Float',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'PostMetaSumAggregateOutputType',
          'fields': [
            {
              'name': 'id',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'postId',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'PostMetaMinAggregateOutputType',
          'fields': [
            {
              'name': 'id',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'meta_title',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'meta_description',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'published',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Boolean',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'postId',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'PostMetaMaxAggregateOutputType',
          'fields': [
            {
              'name': 'id',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'meta_title',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'meta_description',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'published',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Boolean',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'postId',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'AmenitiesCountAggregateOutputType',
          'fields': [
            {
              'name': 'id',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'name',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'slug',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'description',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'published',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'categoryId',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_all',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'AmenitiesAvgAggregateOutputType',
          'fields': [
            {
              'name': 'id',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Float',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'categoryId',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Float',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'AmenitiesSumAggregateOutputType',
          'fields': [
            {
              'name': 'id',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'categoryId',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'AmenitiesMinAggregateOutputType',
          'fields': [
            {
              'name': 'id',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'name',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'slug',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'description',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'published',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Boolean',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'categoryId',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'AmenitiesMaxAggregateOutputType',
          'fields': [
            {
              'name': 'id',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'name',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'slug',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'description',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'published',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Boolean',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'categoryId',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'CategoryCountOutputType',
          'fields': [
            {
              'name': 'amenities',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            }
          ],
          'fieldMap': null,
        },
        {
          'name': 'CategoryCountAggregateOutputType',
          'fields': [
            {
              'name': 'id',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'name',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'slug',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'description',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'published',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'postId',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_all',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'CategoryAvgAggregateOutputType',
          'fields': [
            {
              'name': 'id',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Float',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'postId',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Float',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'CategorySumAggregateOutputType',
          'fields': [
            {
              'name': 'id',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'postId',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'CategoryMinAggregateOutputType',
          'fields': [
            {
              'name': 'id',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'name',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'slug',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'description',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'published',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Boolean',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'postId',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'CategoryMaxAggregateOutputType',
          'fields': [
            {
              'name': 'id',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'name',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'slug',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'description',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'published',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Boolean',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'postId',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
      ],
    },
    'enumTypes': {
      'model': [
        {
          'name': 'Role',
          'values': [
            'USER',
            'ADMIN',
          ],
        }
      ],
      'prisma': [
        {
          'name': 'AmenitiesScalarFieldEnum',
          'values': [
            'id',
            'name',
            'slug',
            'description',
            'published',
            'categoryId',
          ],
        },
        {
          'name': 'CategoryScalarFieldEnum',
          'values': [
            'id',
            'name',
            'slug',
            'description',
            'published',
            'postId',
          ],
        },
        {
          'name': 'PostMetaScalarFieldEnum',
          'values': [
            'id',
            'meta_title',
            'meta_description',
            'published',
            'postId',
          ],
        },
        {
          'name': 'PostScalarFieldEnum',
          'values': [
            'id',
            'title',
            'slug',
            'description',
            'images',
            'long_description',
            'longitude',
            'latitude',
            'content',
            'published',
            'authorId',
          ],
        },
        {
          'name': 'ProfileScalarFieldEnum',
          'values': [
            'id',
            'firstName',
            'lastName',
            'addressLine1',
            'addressLine2',
            'city',
            'state',
            'country',
            'postCode',
            'phone',
            'slug',
            'images',
            'longitude',
            'latitude',
            'published',
            'userId',
          ],
        },
        {
          'name': 'SortOrder',
          'values': [
            'asc',
            'desc',
          ],
        },
        {
          'name': 'TransactionIsolationLevel',
          'values': [
            'ReadUncommitted',
            'ReadCommitted',
            'RepeatableRead',
            'Serializable',
          ],
        },
        {
          'name': 'UsersScalarFieldEnum',
          'values': [
            'id',
            'email',
            'role',
            'password',
            'fcmtoken',
            'salt',
          ],
        },
      ],
    },
  },
  'mappings': {
    'modelOperations': [
      {
        'model': 'Users',
        'findUnique': 'findUniqueUsers',
        'findFirst': 'findFirstUsers',
        'findMany': 'findManyUsers',
        'create': 'createOneUsers',
        'createMany': 'createManyUsers',
        'update': 'updateOneUsers',
        'updateMany': 'updateManyUsers',
        'upsert': 'upsertOneUsers',
        'delete': 'deleteOneUsers',
        'deleteMany': 'deleteManyUsers',
        'aggregate': 'aggregateUsers',
        'groupBy': 'groupByUsers',
        'findRaw': null,
        'aggregateRaw': null,
      },
      {
        'model': 'Profile',
        'findUnique': 'findUniqueProfile',
        'findFirst': 'findFirstProfile',
        'findMany': 'findManyProfile',
        'create': 'createOneProfile',
        'createMany': 'createManyProfile',
        'update': 'updateOneProfile',
        'updateMany': 'updateManyProfile',
        'upsert': 'upsertOneProfile',
        'delete': 'deleteOneProfile',
        'deleteMany': 'deleteManyProfile',
        'aggregate': 'aggregateProfile',
        'groupBy': 'groupByProfile',
        'findRaw': null,
        'aggregateRaw': null,
      },
      {
        'model': 'Post',
        'findUnique': 'findUniquePost',
        'findFirst': 'findFirstPost',
        'findMany': 'findManyPost',
        'create': 'createOnePost',
        'createMany': 'createManyPost',
        'update': 'updateOnePost',
        'updateMany': 'updateManyPost',
        'upsert': 'upsertOnePost',
        'delete': 'deleteOnePost',
        'deleteMany': 'deleteManyPost',
        'aggregate': 'aggregatePost',
        'groupBy': 'groupByPost',
        'findRaw': null,
        'aggregateRaw': null,
      },
      {
        'model': 'PostMeta',
        'findUnique': 'findUniquePostMeta',
        'findFirst': 'findFirstPostMeta',
        'findMany': 'findManyPostMeta',
        'create': 'createOnePostMeta',
        'createMany': 'createManyPostMeta',
        'update': 'updateOnePostMeta',
        'updateMany': 'updateManyPostMeta',
        'upsert': 'upsertOnePostMeta',
        'delete': 'deleteOnePostMeta',
        'deleteMany': 'deleteManyPostMeta',
        'aggregate': 'aggregatePostMeta',
        'groupBy': 'groupByPostMeta',
        'findRaw': null,
        'aggregateRaw': null,
      },
      {
        'model': 'Amenities',
        'findUnique': 'findUniqueAmenities',
        'findFirst': 'findFirstAmenities',
        'findMany': 'findManyAmenities',
        'create': 'createOneAmenities',
        'createMany': 'createManyAmenities',
        'update': 'updateOneAmenities',
        'updateMany': 'updateManyAmenities',
        'upsert': 'upsertOneAmenities',
        'delete': 'deleteOneAmenities',
        'deleteMany': 'deleteManyAmenities',
        'aggregate': 'aggregateAmenities',
        'groupBy': 'groupByAmenities',
        'findRaw': null,
        'aggregateRaw': null,
      },
      {
        'model': 'Category',
        'findUnique': 'findUniqueCategory',
        'findFirst': 'findFirstCategory',
        'findMany': 'findManyCategory',
        'create': 'createOneCategory',
        'createMany': 'createManyCategory',
        'update': 'updateOneCategory',
        'updateMany': 'updateManyCategory',
        'upsert': 'upsertOneCategory',
        'delete': 'deleteOneCategory',
        'deleteMany': 'deleteManyCategory',
        'aggregate': 'aggregateCategory',
        'groupBy': 'groupByCategory',
        'findRaw': null,
        'aggregateRaw': null,
      },
    ],
    'otherOperations': {
      'read': [],
      'write': [
        'executeRaw',
        'queryRaw',
      ],
    },
  },
});
final String schema = _i6.utf8.decode(_i6.base64.decode(
    r'Ly8gVGhpcyBpcyB5b3VyIFByaXNtYSBzY2hlbWEgZmlsZSwKLy8gbGVhcm4gbW9yZSBhYm91dCBpdCBpbiB0aGUgZG9jczogaHR0cHM6Ly9wcmlzLmx5L2QvcHJpc21hLXNjaGVtYQoKZ2VuZXJhdG9yIGNsaWVudCB7CiAgcHJvdmlkZXIgICAgICAgID0gInByaXNtYS1jbGllbnQtZGFydCIKICBwcmV2aWV3RmVhdHVyZXMgPSBbImludGVyYWN0aXZlVHJhbnNhY3Rpb25zIl0KfQoKZGF0YXNvdXJjZSBkYiB7CiAgcHJvdmlkZXIgPSAibXlzcWwiCiAgdXJsICAgICAgPSBlbnYoIkRBVEFCQVNFX1VSTCIpCn0KCm1vZGVsIFVzZXJzIHsKICBpZCAgICAgICBJbnQgICAgICAgQGlkIEBkZWZhdWx0KGF1dG9pbmNyZW1lbnQoKSkKICBlbWFpbCAgICBTdHJpbmcgICAgQHVuaXF1ZQogIHJvbGUgICAgIFJvbGUgICAgICBAZGVmYXVsdChVU0VSKQogIHBhc3N3b3JkIFN0cmluZz8KICBmY210b2tlbiBTdHJpbmc/CiAgc2FsdCAgICAgU3RyaW5nPwogIHBvc3RzICAgIFBvc3RbXQogIFByb2ZpbGUgIFByb2ZpbGVbXSBAcmVsYXRpb24oInVzZXJQcm9maWxlIikKfQoKbW9kZWwgUHJvZmlsZSB7CiAgaWQgICAgICAgICAgIEludCAgICAgQGlkIEBkZWZhdWx0KGF1dG9pbmNyZW1lbnQoKSkKICBmaXJzdE5hbWUgICAgU3RyaW5nPwogIGxhc3ROYW1lICAgICBTdHJpbmc/CiAgYWRkcmVzc0xpbmUxIFN0cmluZz8KICBhZGRyZXNzTGluZTIgU3RyaW5nPwogIGNpdHkgICAgICAgICBTdHJpbmc/CiAgc3RhdGUgICAgICAgIFN0cmluZz8KICBjb3VudHJ5ICAgICAgU3RyaW5nPwogIHBvc3RDb2RlICAgICBTdHJpbmc/CiAgcGhvbmUgICAgICAgIFN0cmluZz8KICBzbHVnICAgICAgICAgU3RyaW5nPyBAdW5pcXVlCiAgaW1hZ2VzICAgICAgIFN0cmluZz8KICBsb25naXR1ZGUgICAgU3RyaW5nPwogIGxhdGl0dWRlICAgICBTdHJpbmc/CiAgcHVibGlzaGVkICAgIEJvb2xlYW4gQGRlZmF1bHQoZmFsc2UpCiAgdXNlciAgICAgICAgIFVzZXJzPyAgQHJlbGF0aW9uKCJ1c2VyUHJvZmlsZSIsIGZpZWxkczogW3VzZXJJZF0sIHJlZmVyZW5jZXM6IFtpZF0pCiAgdXNlcklkICAgICAgIEludD8gICAKfQoKbW9kZWwgUG9zdCB7CiAgaWQgICAgICAgICAgICAgICBJbnQgICAgICAgIEBpZCBAZGVmYXVsdChhdXRvaW5jcmVtZW50KCkpCiAgdGl0bGUgICAgICAgICAgICBTdHJpbmcKICBzbHVnICAgICAgICAgICAgIFN0cmluZz8gICAgQHVuaXF1ZQogIGRlc2NyaXB0aW9uICAgICAgU3RyaW5nPwogIGltYWdlcyAgICAgICAgICAgU3RyaW5nPwogIGxvbmdfZGVzY3JpcHRpb24gU3RyaW5nPwogIGxvbmdpdHVkZSAgICAgICAgU3RyaW5nPwogIGxhdGl0dWRlICAgICAgICAgU3RyaW5nPwogIGNvbnRlbnQgICAgICAgICAgU3RyaW5nPwogIHB1Ymxpc2hlZCAgICAgICAgQm9vbGVhbiAgICBAZGVmYXVsdChmYWxzZSkKICBhdXRob3IgICAgICAgICAgIFVzZXJzICAgICAgQHJlbGF0aW9uKGZpZWxkczogW2F1dGhvcklkXSwgcmVmZXJlbmNlczogW2lkXSkKICBhdXRob3JJZCAgICAgICAgIEludAogIHBvc3RtZXRhICAgICAgICAgUG9zdE1ldGFbXQogIGNhdGVnb3J5ICAgICAgICAgQ2F0ZWdvcnlbXQp9Cgptb2RlbCBQb3N0TWV0YSB7CiAgaWQgICAgICAgICAgICAgICBJbnQgICAgIEBpZCBAZGVmYXVsdChhdXRvaW5jcmVtZW50KCkpCiAgbWV0YV90aXRsZSAgICAgICBTdHJpbmcKICBtZXRhX2Rlc2NyaXB0aW9uIFN0cmluZz8KICBwdWJsaXNoZWQgICAgICAgIEJvb2xlYW4gQGRlZmF1bHQoZmFsc2UpCiAgcG9zdCAgICAgICAgICAgICBQb3N0ICAgIEByZWxhdGlvbihmaWVsZHM6IFtwb3N0SWRdLCByZWZlcmVuY2VzOiBbaWRdKQogIHBvc3RJZCAgICAgICAgICAgSW50Cn0KCm1vZGVsIEFtZW5pdGllcyB7CiAgaWQgICAgICAgICAgSW50ICAgICAgQGlkIEBkZWZhdWx0KGF1dG9pbmNyZW1lbnQoKSkKICBuYW1lICAgICAgICBTdHJpbmcKICBzbHVnICAgICAgICBTdHJpbmc/ICBAdW5pcXVlCiAgZGVzY3JpcHRpb24gU3RyaW5nPwogIHB1Ymxpc2hlZCAgIEJvb2xlYW4gIEBkZWZhdWx0KGZhbHNlKQogIGNhdGVnb3J5ICAgIENhdGVnb3J5IEByZWxhdGlvbihmaWVsZHM6IFtjYXRlZ29yeUlkXSwgcmVmZXJlbmNlczogW2lkXSkKICBjYXRlZ29yeUlkICBJbnQKfQoKbW9kZWwgQ2F0ZWdvcnkgewogIGlkICAgICAgICAgIEludCAgICAgICAgIEBpZCBAZGVmYXVsdChhdXRvaW5jcmVtZW50KCkpCiAgbmFtZSAgICAgICAgU3RyaW5nCiAgc2x1ZyAgICAgICAgU3RyaW5nPyAgICAgQHVuaXF1ZQogIGRlc2NyaXB0aW9uIFN0cmluZz8KICBwdWJsaXNoZWQgICBCb29sZWFuICAgICBAZGVmYXVsdChmYWxzZSkKICBhbWVuaXRpZXMgICBBbWVuaXRpZXNbXQogIHBvc3QgICAgICAgIFBvc3QgICAgICAgIEByZWxhdGlvbihmaWVsZHM6IFtwb3N0SWRdLCByZWZlcmVuY2VzOiBbaWRdKQogIHBvc3RJZCAgICAgIEludAp9CgplbnVtIFJvbGUgewogIFVTRVIKICBBRE1JTgp9Cg=='));
const String _executable =
    r'/Users/xain/Documents/GitHub/dart_server/dart_server/.dart_tool/prisma/query-engine';

class Datasources {
  Datasources({this.db});

  final _i1.PrismaNullable<_i1.Datasource> db;

  Map<String, _i1.Datasource> _toOverwrites() {
    final $overwrites = <String, _i1.PrismaNullable<_i1.Datasource>>{'db': db}
      ..removeWhere((
        _,
        v,
      ) =>
          v == null);
    return $overwrites.cast();
  }
}

class PrismaClient {
  const PrismaClient._(
    this._engine, [
    this._headers,
  ]);

  factory PrismaClient({_i1.PrismaNullable<Datasources> datasources}) {
    final _i1.Engine engine = _i1.BinaryEngine(
      datasources: datasources?._toOverwrites() ?? <String, _i1.Datasource>{},
      dmmf: dmmf,
      schema: schema,
      environment: environment,
      logEmitter: _i1.PrismaLogEmitter(const <_i1.PrismaLogDefinition>[]),
      executable: _executable,
    );
    final PrismaClient client = PrismaClient._(
      engine,
      null,
    );
    return client;
  }

  final _i1.Engine _engine;

  final _i1.PrismaNullable<_i1.QueryEngineRequestHeaders> _headers;

  UsersDelegate get users => UsersDelegate._(
        _engine,
        _headers,
      );
  ProfileDelegate get profile => ProfileDelegate._(
        _engine,
        _headers,
      );
  PostDelegate get post => PostDelegate._(
        _engine,
        _headers,
      );
  PostMetaDelegate get postMeta => PostMetaDelegate._(
        _engine,
        _headers,
      );
  AmenitiesDelegate get amenities => AmenitiesDelegate._(
        _engine,
        _headers,
      );
  CategoryDelegate get category => CategoryDelegate._(
        _engine,
        _headers,
      );

  /// Connect to the database.
  Future<void> $connect() => _engine.start();

  /// Disconnect from the database.
  Future<void> $disconnect() async {
    await _engine.stop();
  }

  /// Interactive transactions.
  ///
  /// Sometimes you need more control over what queries execute within a transaction. Interactive transactions are meant to provide you with an escape hatch.
  ///
  /// **NOTE**: If you use interactive transactions, then you cannot use the [Data Proxy](https://prisma.pub/guides/preview-features#data-proxy) at the same time.
  ///
  /// E.g:
  /// ```dart
  /// final prisma = PrismaClient();
  /// prisma.$transaction((transaction) async {
  ///   await transaction.user.create({ ... });
  ///   await transaction.post.create({ ... });
  /// });
  /// ```
  Future<T> $transaction<T>(
    Future<T> Function(PrismaClient) fn, [
    _i1.TransactionOptions? options,
  ]) async {
    if (_headers?.transactionId != null) return fn(this);
    final _i1.TransactionHeaders headers = _i1.TransactionHeaders();
    final _i1.TransactionInfo info = await _engine.startTransaction(
      headers: headers,
      options: options ?? _i1.TransactionOptions(),
    );
    try {
      final T result = await fn(PrismaClient._(
        _engine,
        _i1.QueryEngineRequestHeaders(transactionId: info.id),
      ));
      await _engine.commitTransaction(
        headers: headers,
        info: info,
      );
      return result;
    } catch (e) {
      await _engine.rollbackTransaction(
        headers: headers,
        info: info,
      );
      rethrow;
    }
  }
}
